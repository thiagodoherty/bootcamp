{
    "openapi": "3.0.0",
    "info": {
        "title": "Suggestions",
        "description": "\r\nThe **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.  \r\n\r\n>⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.\r\n\r\n## Index\r\n\r\n### Notification\r\n\r\nEndpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.\r\n\r\n`POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)\r\n\r\n`POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)\r\n\r\n\r\n### Suggestions\r\n\r\n#### Get Suggestions\r\n\r\nSearch and filter all suggestions using specific criteria.\r\n\r\n`GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)\r\n\r\n`GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Manage Suggestions\r\n\r\nSend or delete SKU suggestions from the seller to marketplace.\r\n\r\n`PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n`DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Get Versions\r\n\r\nSearch and filter all versions of suggestions, using specific criteria.\r\n\r\n`GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)\r\n\r\n`GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)\r\n\r\n\r\n#### Match Received SKUs\r\n\r\nMatch SKU suggestions received in the marketplace.\r\n\r\n`PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)\r\n\r\n`PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)\r\n\r\n\r\n#### SKU Approval Settings\r\n\r\nAllows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.\r\n\r\n`GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)\r\n\r\n`PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)\r\n\r\n`GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)   \r\n\r\n\r\n### Matched Offers\r\n\r\nOffers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.\r\n\r\n`GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)\r\n\r\n`GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)  \r\n\r\n`GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)\r\n",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.vtex.com/{accountName}",
            "description": "Suggestions Server URL.",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL.",
                    "default": "{accountName}"
                }
            }
        }
    ],
    "paths": {
        "/suggestions/configuration/autoapproval/toggle": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get autoApprove Status in Account Settings",
                "description": "This endpoint can be used to check whether the autoapprove setting is active or not, for a specific seller. \n\nIf the response is `true`, the autoapprove setting is active. If the response is `false`, it is inactive.",
                "operationId": "GetautoApprovevaluefromconfig",
                "parameters": [
                    {
                        "name": "sellerId",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Enabled": {
                                            "type": "boolean",
                                            "description": "If the auto-approve setting is active for a given seller (`true`) or not (`false`)."
                                        }
                                    }
                                },
                                "example": {
                                    "Enabled": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Activate autoApprove in Marketplace's Account",
                "description": "This endpoint enables the autoapprove rule to a marketplace's whole Received SKUs module. Once enabling the rule, received SKUs will be automatically approved on your store, regardless of the seller. \n\n For the autoapprove rule to work as expected, the approval [Matcher score](https://help.vtex.com/en/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) should be set up as 80 (default value), but you can configure a different number through the field `Score` in [Save Account's Approval Settings](https://developers.vtex.com/vtex-rest-api/reference/saveaccountconfig).",
                "operationId": "Saveautoapproveforaccount",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Enabled": {
                                            "type": "boolean",
                                            "description": "If the auto-approve setting is active (`true`) or not (`false`)."
                                        }
                                    }
                                },
                                "example": {
                                    "Enabled": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get Account's Approval Settings",
                "description": "This endpoint retrieves the current approval settings of a marketplace's Received SKUs module. Its response includes: \n\n- `Score`: Matcher scores for approving and rejecting SKUs received from sellers. \n\n- `Matchers`: All Matchers configured on the marketplace, and their respective details. \n\n- `SpecificationsMapping`: Mapping of product and SKU specifications, per seller. \n\n- `MatchFlux`: This field determines the type of approval configuration applied to SKUs received from a seller. \n\nThe possible values include: \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI, or Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.",
                "operationId": "Getaccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Score": {
                                            "type": "object",
                                            "description": "Matcher scores for approving and rejecting SKUs received from sellers."
                                        },
                                        "Matchers": {
                                            "type": "array",
                                            "description": "All Matchers configured on the marketplace, and their respective details."
                                        },
                                        "Rules": {
                                            "type": "object",
                                            "description": "Items and products."
                                        },
                                        "SpecificationsMapping": {
                                            "type": "array",
                                            "description": "Mapping of product and SKU specifications, per seller."
                                        },
                                        "MatchFlux": {
                                            "type": "string",
                                            "description": "This field determines the type of approval configuration applied to SKUs received from a seller."
                                        }
                                    }
                                },
                                "example": {
                                    "Score": {
                                        "Approve": 80,
                                        "Reject": 30
                                    },
                                    "Matchers": [
                                        {
                                            "MatcherId": "vtex-matcher",
                                            "hook-base-address": "http://portal.vtexinternal.com/api/ssm/hooks",
                                            "IsActive": true,
                                            "UpdatesNotificationEndpoint": null,
                                            "Description": null
                                        }
                                    ],
                                    "Rules": {
                                        "Item": [],
                                        "Product": []
                                    },
                                    "SpecificationsMapping": [],
                                    "MatchFlux": "Default"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Save Account's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings on their Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.",
                "operationId": "Saveaccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveaccountconfigRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "example": {
                                        "Score": {
                                            "Approve": 80,
                                            "Reject": 30
                                        },
                                        "Matchers": [
                                            {
                                                "MatcherId": "vtex-matcher",
                                                "hook-base-address": "http://simple-suggestion-matcher.vtex.com.br",
                                                "IsActive": true,
                                                "UpdatesNotificationEndpoint": "notification.endpoint",
                                                "Description": "Note"
                                            }
                                        ],
                                        "Rules": {
                                            "Item": [
                                                1
                                            ],
                                            "Product": [
                                                "Shirt"
                                            ]
                                        },
                                        "SpecificationsMapping": [
                                            {
                                                "SellerId": "Store1",
                                                "Mapping": {
                                                    "Yellow": "Light yellow"
                                                }
                                            }
                                        ],
                                        "MatchFlux": "AutoApprove"
                                    },
                                    "properties": {
                                        "Score": {
                                            "type": "object",
                                            "description": "[Matcher's rates](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) to approve or reject [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.",
                                            "properties": {
                                                "Approve": {
                                                    "type": "integer",
                                                    "description": "Score to approve SKUs sent by sellers."
                                                },
                                                "Reject": {
                                                    "type": "integer",
                                                    "description": "Score to reject SKUs sent by sellers."
                                                }
                                            },
                                            "example": {
                                                "Approve": 80,
                                                "Reject": 30
                                            }
                                        },
                                        "Matchers": {
                                            "type": "array",
                                            "description": "[Matchers](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) configurations for approving and rejecting [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.",
                                            "properties": {
                                                "MatcherId": {
                                                    "type": "string",
                                                    "description": "Identifies the matching entity. It can be either [VTEX's matcher](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring), or an external matcher."
                                                },
                                                "hook-base-address": {
                                                    "type": "string",
                                                    "description": "The given Matcher's URL."
                                                },
                                                "IsActive": {
                                                    "type": "boolean",
                                                    "description": "Whether the matcher is active in the account (`true`), or not (`false`)."
                                                },
                                                "UpdatesNotificationEndpoint": {
                                                    "type": "string",
                                                    "description": "The [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) module calls this endpoint for matcher's suggestions updates."
                                                },
                                                "Description": {
                                                    "type": "string",
                                                    "description": "The note inserted on the request body."
                                                }
                                            }
                                        },
                                        "Rules": {
                                            "type": "object",
                                            "description": "Items and products that belong to sellers.",
                                            "properties": {
                                                "Item": {
                                                    "type": "array",
                                                    "description": "SKUs' ID.",
                                                    "items": {
                                                        "type": "integer",
                                                        "description": "SKU ID."
                                                    }
                                                },
                                                "Product": {
                                                    "type": "array",
                                                    "description": "Product's name.",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Product name."
                                                    }
                                                }
                                            }
                                        },
                                        "SpecificationsMapping": {
                                            "type": "array",
                                            "description": "This attribute maps product and SKU's specifications between the marketplace and the seller.",
                                            "properties": {
                                                "SellerId": {
                                                    "type": "string",
                                                    "description": "The Seller ID."
                                                },
                                                "Mapping": {
                                                    "type": "object",
                                                    "description": "The attributes and values mapped between the marketplace and the seller."
                                                }
                                            }
                                        },
                                        "MatchFlux": {
                                            "type": "string",
                                            "description": "Type of approval configuration that apply to received SKUs sent by sellers. The possible values are: \n\n`default`: the matcher approves the SKU. \n\n`manual`: manual SKU's approvals. \n\n`AutoApprove`: automatic SKU's approvals."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration/seller/{sellerId}": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get Seller's Approval Settings",
                "description": "This endpoint retrieves the current Received SKUs approval settings applied to a specific seller. Its response includes: \n\n- `sellerId`: A string that identifies the seller in the marketplace. \n\n- `accountId`: Marketplace’s account ID. \n\n- `accountName`: Marketplace’s account name. \n\n- `mapping`: Mapping of SKU and product Specifications. \n\n- `matchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. \n\nThe possible values include:  \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI and Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                "operationId": "Getselleraccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Save Seller's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings to a specific seller, on the Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.",
                "operationId": "Putselleraccountconfig",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutselleraccountconfigRequest"
                            },
                            "example": {
                                "sellerId": "1a",
                                "mapping": null,
                                "matchFlux": "Default"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration/autoapproval/toggle/seller/{sellerId}": {
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Activate autoApprove Setting for a Seller",
                "description": "This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.",
                "operationId": "Saveautoapproveforaccountseller",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountsellerRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions": {
            "get": {
                "tags": [
                    "Get Suggestions"
                ],
                "summary": "Get all SKU suggestions",
                "description": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "Getsuggestions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available filters on Received SKU modules.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "This field allows users to filter SKU suggestions, by searching only the new suggestions that were just sent, and suggestions that have already been sent, but were updated. Possible values for this field include `new` and `update`.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "new"
                        }
                    },
                    {
                        "name": "seller",
                        "in": "query",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller so it can call this endpoint.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "accepted"
                        }
                    },
                    {
                        "name": "hasmapping",
                        "in": "query",
                        "description": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "true"
                        }
                    },
                    {
                        "name": "matcherid",
                        "in": "query",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "vtex-matcher"
                        }
                    },
                    {
                        "name": "_from",
                        "in": "query",
                        "description": "Define your pagination range, by adding the pagination starting value. Values should be bigger than 0, with a maximum of 50 records per page.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "_to",
                        "in": "query",
                        "description": "Define your pagination range, by adding the pagination ending value. Values should be bigger than 0, with a maximum of 50 records per page.",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 50
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerSkuId}": {
            "put": {
                "tags": [
                    "Manage Suggestions"
                ],
                "summary": "Send SKU Suggestion",
                "description": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Send Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below. ",
                "operationId": "SaveSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/vnd.vtex.suggestion.v0+json",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerSkuId",
                        "in": "path",
                        "description": "A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveSuggestionRequest"
                            },
                            "example": {
                                "ProductId": "321",
                                "ProductName": "Product sample",
                                "NameComplete": "Complete product name",
                                "ProductDescription": "sample",
                                "BrandName": "Brand 1",
                                "SkuName": "Sku sample",
                                "SellerId": "string",
                                "Height": 1,
                                "Width": 1,
                                "Length": 1,
                                "Weight": 1,
                                "Updated": null,
                                "RefId": "REFID123",
                                "SellerStockKeepingUnitId": 567,
                                "CategoryFullPath": "Category 1",
                                "Images": [
                                    {
                                        "imageName": "Principal",
                                        "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                                    }
                                ],
                                "ProductSpecifications": [
                                    {
                                        "fieldName": "Fabric",
                                        "fieldValues": [
                                            "Cotton",
                                            "Velvet"
                                        ]
                                    }
                                ],
                                "SkuSpecifications": [
                                    {
                                        "fieldName": "Color",
                                        "fieldValues": [
                                            "Red",
                                            "Blue"
                                        ]
                                    }
                                ],
                                "EAN": "EAN123",
                                "MeasurementUnit": "un",
                                "UnitMultiplier": 1,
                                "AvailableQuantity": 111,
                                "Pricing": {
                                    "Currency": "BRL",
                                    "SalePrice": 399,
                                    "CurrencySymbol": "R$"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": [
                    "Get Suggestions"
                ],
                "summary": "Get SKU Suggestion by ID",
                "description": "This endpoint retrieves the data of a specific SKU sent by the seller, to the marketplace. Marketplaces or external matchers can call this endpoint when they want to check the information about a single SKU. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "GetSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerSkuId",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Manage Suggestions"
                ],
                "summary": "Delete SKU Suggestion",
                "description": "This endpoint deletes a chosen SKU suggestion. Only one SKU should be deleted per request. This request cannot be undone. A workaround to revert its action, is to send the suggestion again, through the Send Suggestion API.",
                "operationId": "DeleteSuggestion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerSkuId",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions": {
            "get": {
                "tags": [
                    "Get Versions"
                ],
                "summary": "Get all Versions",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. \n\nThe response's object [latestversion] provides the information of the most recent version of that SKU suggestion.",
                "operationId": "GetVersions",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions/{version}": {
            "get": {
                "tags": [
                    "Get Versions"
                ],
                "summary": "Get Version by ID",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.",
                "operationId": "GetSuggestionbyversion",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "09072021142808277"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions/{version}/matches/{matchid}": {
            "put": {
                "tags": [
                    "Match Received SKUs"
                ],
                "summary": "Match Received SKUs individually",
                "description": "All SKUs sent from a seller to a marketplace must be reviewed and matched. Actions in the matching process are added in the request body through the [matchType] object. Match type actions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                "operationId": "Match",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "seller123"
                        }
                    },
                    {
                        "name": "sellerskuid",
                        "in": "path",
                        "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1234"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "09072021142808277"
                        }
                    },
                    {
                        "name": "matchid",
                        "in": "path",
                        "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the *[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchRequest"
                            },
                            "example": {
                                "matcherId": "{{matcherid}}",
                                "matchType": "itemMatch",
                                "score": "{{score}} (must be decimal)",
                                "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                                "productRef": "{{productRef}}(should be specified when match is a product match)",
                                "product": {
                                    "name": "Book A",
                                    "description": "Book description",
                                    "categoryId": 12,
                                    "brandId": 1234567,
                                    "matchType": "itemMatch",
                                    "specifications": null
                                },
                                "sku": {
                                    "name": "Sku exemplo",
                                    "eans": [
                                        "12345678901213"
                                    ],
                                    "refId": null,
                                    "height": 1,
                                    "width": 1,
                                    "length": 1,
                                    "weight": 1,
                                    "images": [
                                        {
                                            "imagem1.jpg": {
                                                "imagem1.jpg": "https://imageurl.example"
                                            }
                                        }
                                    ],
                                    "unitMultiplier": 1,
                                    "measurementUnit": "un",
                                    "specifications": {
                                        "Embalagem": "3 k   g"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/matches/action/{actionName}": {
            "put": {
                "tags": [
                    "Match Received SKUs"
                ],
                "summary": "Match Multiple Received SKUs",
                "description": "> \u26A0 The Match Multiple Received SKUs API is under maintenance.\r\nDuring this period, you must use the [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-) API to approve new products.\r\n\r\n This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
                "operationId": "MatchMultiple",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "actionName",
                        "in": "path",
                        "description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "newprodcut"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/MatchMultiple"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ],
    "components": {
        "schemas": {
            "SaveautoapproveforaccountRequest": {
                "title": "SaveautoapproveforaccountRequest",
                "required": [
                    "Enabled"
                ],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for an entire marketplace account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all received SKUs will be automatically approved on your store, regardless of the seller, or the Matcher Score.",
                        "default": true
                    }
                }
            },
            "SaveaccountconfigRequest": {
                "title": "SaveaccountconfigRequest",
                "required": [
                    "Score",
                    "Matchers",
                    "SpecificationsMapping",
                    "MatchFlux"
                ],
                "type": "object",
                "properties": {
                    "Score": {
                        "$ref": "#/components/schemas/Score"
                    },
                    "Matchers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Matcher"
                        },
                        "description": "Matchers for approving and rejecting SKUs received from sellers."
                    },
                    "SpecificationsMapping": {
                        "type": "array",
                        "description": "This attribute maps product and SKU specifications.",
                        "items": {
                            "type": "string",
                            "default": "                    \"SellerId\": \"sellerID\",\n                    \"Mapping\": {\n                        \"Choose voltage\": \"Voltage\",\n                        \"Choose size\": \"Size\",\n                        \"Choose volume\": \"Volume\",\n                        \"Choose type\": \"Type\"\n                    }"
                        }
                    },
                    "MatchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "default": "autoApprove"
                    }
                },
                "example": {
                    "Score": {
                        "Approve": 80,
                        "Reject": 30
                    },
                    "Matchers": [
                        {
                            "MatcherId": "vtex-matcher",
                            "hook-base-address": "http://simple-suggestion-matcher.vtex.com.br",
                            "IsActive": true,
                            "UpdatesNotificationEndpoint": null,
                            "Description": null
                        }
                    ],
                    "SpecificationsMapping": [],
                    "MatchFlux": "AutoApprove"
                }
            },
            "Score": {
                "title": "Score",
                "description": "Matcher rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`.",
                "required": [
                    "Approve",
                    "Reject"
                ],
                "type": "object",
                "properties": {
                    "Approve": {
                        "type": "integer",
                        "description": "Insert in this field the desired minimum score to approve SKUs. If this field is set as 99, it means all approvals will be made manually.",
                        "format": "int32",
                        "default": 80
                    },
                    "Reject": {
                        "type": "integer",
                        "description": "Insert in this field the desired maximum score to reject SKUs.",
                        "format": "int32",
                        "default": 30
                    }
                }
            },
            "Matcher": {
                "title": "Matcher",
                "required": [
                    "MatcherId",
                    "hook-base-address",
                    "IsActive",
                    "UpdatesNotificationEndpoint"
                ],
                "type": "object",
                "properties": {
                    "MatcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "default": "vtex-matcher"
                    },
                    "hook-base-address": {
                        "type": "string",
                        "description": "The chosen Matcher's url. It is the endpoint that the Received SKUs module calls, to send new suggestions for the Matcher's review.",
                        "default": "http://simple-suggestion-matcher.vtex.com.br"
                    },
                    "IsActive": {
                        "type": "boolean",
                        "description": "Whether the matcher is active in the account (`true`), or not (`false`).",
                        "default": true
                    },
                    "UpdatesNotificationEndpoint": {
                        "type": "string",
                        "description": "The Received SKUs module uses this endpoint to send updates about a suggestion, to the chosen Matcher.",
                        "nullable": true,
                        "default": null
                    },
                    "Description": {
                        "type": "string",
                        "description": "Insert in this field any notes about the approval. This field is optional.",
                        "nullable": true,
                        "default": null
                    }
                }
            },
            "SaveautoapproveforaccountsellerRequest": {
                "title": "SaveautoapproveforaccountsellerRequest",
                "required": [
                    "Enabled"
                ],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for that specific seller account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all SKUs received from this seller will be automatically approved on your store regardless of the Matcher Score.",
                        "default": true
                    }
                }
            },
            "PutselleraccountconfigRequest": {
                "title": "PutselleraccountconfigRequest",
                "required": [
                    "sellerId",
                    "mapping",
                    "matchFlux"
                ],
                "type": "object",
                "properties": {
                    "sellerId": {
                        "type": "string",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "default": "seller123"
                    },
                    "mapping": {
                        "type": "object",
                        "description": "Mapping of SKU and product Specifications. This object should be sent in the following format for all fields you wish to map:\n\n{specificationName}:{specificationValue},\n\nExample:\n\nChoose voltage: Voltage,\n\nChoose size: Size",
                        "nullable": true,
                        "default": {
                            "Choose voltage": "Voltage",
                            "Choose size": "Size",
                            "Choose volume": "Volume",
                            "Choose type": "Type"
                        }
                    },
                    "matchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "default": "autoApprove"
                    }
                }
            },
            "SaveSuggestionRequest": {
                "title": "SaveSuggestionRequest",
                "required": [
                    "ProductName",
                    "ProductId",
                    "ProductDescription",
                    "BrandName",
                    "SkuName",
                    "SellerId",
                    "Height",
                    "Width",
                    "Length",
                    "Weight",
                    "Updated",
                    "RefId",
                    "CategoryFullPath",
                    "Images",
                    "EAN",
                    "AvailableQuantity",
                    "Pricing"
                ],
                "type": "object",
                "properties": {
                    "ProductName": {
                        "type": "string",
                        "description": "Name of the suggested product. This field has a limit of 150 characters.",
                        "default": ""
                    },
                    "ProductId": {
                        "type": "string",
                        "description": "Product ID in seller's account.",
                        "default": "1234"
                    },
                    "ProductDescription": {
                        "type": "string",
                        "description": "Product Description containing the main information about the product (not the SKU)."
                    },
                    "BrandName": {
                        "type": "string",
                        "description": "Name of the brand to which this SKU belongs. It must match the brand created in the marketplace."
                    },
                    "SkuName": {
                        "type": "string",
                        "description": "Name of the suggested SKU."
                    },
                    "SellerId": {
                        "type": "string",
                        "description": "ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "default": "1"
                    },
                    "Height": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Height of the SKU.",
                        "default": 10
                    },
                    "Width": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Width of the SKU.",
                        "default": 10
                    },
                    "Length": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Length of the SKU.",
                        "default": 10
                    },
                    "Weight": {
                        "type": "integer",
                        "format": "decimal",
                        "description": "Weight of the SKU in grams.",
                        "default": 100.0
                    },
                    "RefId": {
                        "type": "string",
                        "description": "SKU reference code. Mandotory if the EAN is not informed.",
                        "default": "REF10"
                    },
                    "EAN": {
                        "type": "string",
                        "description": "SKU reference code. Mandatory if the RefId is not informed.",
                        "default": "EAN10"
                    },
                    "SellerStockKeepingUnitId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the SKU registered in the seller."
                    },
                    "CategoryFullPath": {
                        "type": "string",
                        "description": "Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'."
                    },
                    "SkuSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuSpecification"
                        },
                        "description": "Array containing the names and values of the SKU specifications."
                    },
                    "ProductSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSpecification"
                        },
                        "description": "Array containing the names and values of the product specifications."
                    },
                    "Images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        },
                        "description": "Array containing the URLs and names the SKU images."
                    },
                    "MeasurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`."
                    },
                    "UnitMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`."
                    },
                    "AvailableQuantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": ""
                    },
                    "Pricing": {
                        "type": "object",
                        "properties": {
                            "Currency": {
                                "type": "string"
                            },
                            "SalePrice": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "CurrencySymbol": {
                                "type": "string"
                            }
                        },
                        "description": ""
                    }
                },
                "default": {
                    "ProductId": "321",
                    "ProductName": "Product sample",
                    "NameComplete": "My complete product name?",
                    "ProductDescription": "sample",
                    "BrandName": "Brand 1",
                    "SkuName": "Sku sample",
                    "SellerId": "123",
                    "Height": 1,
                    "Width": 1,
                    "Length": 1,
                    "Weight": 1,
                    "Updated": null,
                    "RefId": "REFID123",
                    "SellerStockKeepingUnitId": 567,
                    "CategoryFullPath": "Category 1",
                    "Images": [
                        {
                            "imageName": "Principal",
                            "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                        }
                    ],
                    "ProductSpecifications": [
                        {
                            "fieldName": "prodspec1",
                            "fieldValues": [
                                "value1",
                                "value2"
                            ]
                        }
                    ],
                    "SkuSpecifications": [
                        {
                            "fieldName": "skuspec1",
                            "fieldValues": [
                                "value1",
                                "value2"
                            ]
                        }
                    ],
                    "EAN": "EAN123",
                    "MeasurementUnit": "un",
                    "UnitMultiplier": 1,
                    "AvailableQuantity": 111,
                    "Pricing": {
                        "Currency": "BRL",
                        "SalePrice": 399,
                        "CurrencySymbol": "R$"
                    }
                }
            },
            "SkuSpecification": {
                "title": "skuSpecification",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the SKU specification field. Example: 'Color'.",
                        "default": "color"
                    },
                    "fieldValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "Red",
                            "description": "Value of the SKU specification field."
                        },
                        "default": [
                            "Red"
                        ],
                        "description": "Array with values of the SKU specification field. Example: 'Red'."
                    }
                },
                "default": {
                    "fieldName": "Color",
                    "fieldValues": [
                        "Red",
                        "Green"
                    ]
                }
            },
            "ProductSpecification": {
                "title": "Product Specification",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the product specification field. Example: 'Fabric'.",
                        "default": "Fabric type"
                    },
                    "fieldValues": {
                        "type": "array",
                        "description": "Value of the product specification field. Example: 'Cotton'.",
                        "items": {
                            "type": "string",
                            "default": "Cotton",
                            "description": "Value of the product specification field."
                        }
                    }
                },
                "example": {
                    "fieldName": "Color",
                    "fieldValues": [
                        "Red",
                        "Green"
                    ]
                }
            },
            "Image": {
                "title": "Image",
                "required": [
                    "imageName",
                    "imageUrl"
                ],
                "type": "object",
                "properties": {
                    "imageName": {
                        "type": "string",
                        "description": "Name of the SKU image."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL of the SKU image. The image must be sent through `https` protocol, otherwise it will not be rendered in VTEX Admin.",
                        "default": "https://imageurl.example"
                    }
                },
                "example": {
                    "imageName": "Principal",
                    "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                }
            },
            "MatchRequest": {
                "title": "",
                "required": [
                    "matcherId",
                    "score",
                    "matchType"
                ],
                "type": "object",
                "properties": {
                    "matcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "default": "vtex-matcher"
                    },
                    "matchType": {
                        "title": "Match Type",
                        "type": "string",
                        "description": "Define the action you want to apply to each SKU. Values include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "default": "itemMatch"
                    },
                    "score": {
                        "type": "string",
                        "description": "Matcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "default": "80"
                    },
                    "skuRef": {
                        "type": "string",
                        "nullable": true,
                        "description": "In `itemMatch` actions, fill in this field on your request to match the item to an existing SKU in the marketplace.",
                        "default": ""
                    },
                    "productRef": {
                        "type": "string",
                        "description": "In `productMatch` actions, fill in this field on your request to match the item to an existing product in the marketplace.",
                        "default": "",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Sku"
                    }
                },
                "example": {
                    "matcherId": "{{matcherid}}",
                    "score": "{{score}} (must be decimal)",
                    "matchType": "itemMatch",
                    "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                    "productRef": "{{productRef}}(should be specified when match is a product match)",
                    "product": {
                        "name": "Produto exemplo",
                        "description": "Descricao exemplo",
                        "categoryId": 12,
                        "brandId": 1234567,
                        "specifications": null
                    },
                    "sku": {
                        "name": "Sku exemplo",
                        "eans": [
                            "12345678901213"
                        ],
                        "refId": null,
                        "height": 1,
                        "width": 1,
                        "length": 1,
                        "weight": 1,
                        "images": [
                            {
                                "imagem1.jpg": "imageurl.example"
                            }
                        ],
                        "unitMultiplier": 1,
                        "measurementUnit": "un",
                        "specifications": {
                            "Embalagem": "3 kg"
                        }
                    }
                }
            },
            "Product": {
                "title": "Product",
                "required": [
                    "name",
                    "description",
                    "categoryId",
                    "brandId",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the product that will be matched.",
                        "default": "Book"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product's description.",
                        "default": "Description of the product, how it will appear on the marketplace."
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                        "default": 12
                    },
                    "brandId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The brandId is already mapped through the Get Suggestions API. This field is nulled when the inserted value is 0.",
                        "default": 1234567
                    },
                    "specifications": {
                        "type": "string",
                        "description": "This field is optional. Add here any product specifications or details.",
                        "default": "",
                        "nullable": true
                    }
                }
            },
            "Sku": {
                "title": "SKU",
                "required": [
                    "name",
                    "eans",
                    "refId",
                    "height",
                    "width",
                    "length",
                    "weight",
                    "images",
                    "unitMultiplier",
                    "measurementUnit",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "eans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SKU reference code.",
                        "default": [
                            "12345678901213"
                        ],
                        "nullable": true
                    },
                    "refId": {
                        "type": "string",
                        "description": "SKU reference code.",
                        "default": "1234",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Height of the SKU.",
                        "default": 10
                    },
                    "width": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Width of the SKU.",
                        "default": 20
                    },
                    "length": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Length of the SKU.",
                        "default": 10
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight of the SKU.",
                        "default": 100
                    },
                    "images": {
                        "$ref": "#/components/schemas/Images"
                    },
                    "unitMultiplier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1.",
                        "default": 1
                    },
                    "measurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un.",
                        "default": "un",
                        "nullable": true
                    },
                    "specifications": {
                        "$ref": "#/components/schemas/Specifications"
                    }
                },
                "example": {
                    "name": "Sku exemplo",
                    "eans": [
                        "12345678901213"
                    ],
                    "refId": null,
                    "height": 1,
                    "width": 1,
                    "length": 1,
                    "weight": 1,
                    "images": [
                        {
                            "imagem1.jpg": "imageurl.example"
                        }
                    ],
                    "unitMultiplier": 1,
                    "measurementUnit": "un",
                    "specifications": {
                        "Embalagem": "3 kg"
                    }
                }
            },
            "Images": {
                "title": "Images",
                "required": [
                    "imagem1.jpg"
                ],
                "type": "array",
                "properties": {
                    "imagem1.jpg": {
                        "type": "string",
                        "description": "Array containing the URLs of the SKU's images.  The image must be sent through `https` protocol, otherwise it will not be rendered in VTEX Admin.",
                        "default": "https://imageurl.example"
                    }
                },
                "example": [
                    {
                        "imagem1.jpg": "imageurl.example"
                    }
                ]
            },
            "Specifications": {
                "title": "Specifications",
                "required": [
                    "Embalagem"
                ],
                "type": "object",
                "properties": {
                    "Embalagem": {
                        "type": "string",
                        "description": "Packaging specifications. Should include package's weight."
                    }
                },
                "example": {
                    "Embalagem": "3 kg"
                }
            },
            "MatchMultiple": {
                "title": "MatchMultiple",
                "type": "array",
                "properties": {
                    "object": {
                        "type": "object",
                        "title": "",
                        "required": [
                            "itemId",
                            "versionId",
                            "matchId",
                            "matcherId",
                            "categoryId",
                            "sellerId"
                        ],
                        "properties": {
                            "itemId": {
                                "type": "string",
                                "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                                "default": "1234567"
                            },
                            "versionId": {
                                "type": "string",
                                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                                "default": ""
                            },
                            "matchId": {
                                "type": "string",
                                "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                                "default": "vtex-matcher"
                            },
                            "matcherId": {
                                "type": "string",
                                "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                                "default": "vtex-matcher"
                            },
                            "categoryId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true,
                                "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                                "default": 12
                            },
                            "brandId": {
                                "type": "integer",
                                "format": "int32",
                                "nullable": true,
                                "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The `brandId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). This field is nulled when the inserted value is 0, and is mandatory for the 'newproduct' action.",
                                "default": 1234567
                            },
                            "skuRef": {
                                "type": "string",
                                "nullable": true,
                                "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the 'skuassociation' action.",
                                "default": "123 sku ref"
                            },
                            "productRef": {
                                "type": "string",
                                "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the 'productassociation' action.",
                                "default": "123 product ref",
                                "nullable": true
                            },
                            "sellerId": {
                                "type": "string",
                                "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                                "default": "seller123"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            }
        }
    },
    "tags": [
        {
            "name": "Get Suggestions",
            "description": "Search and filter all suggestions using specific criteria"
        },
        {
            "name": "Manage Suggestions",
            "description": "Send or delete SKU suggestions from the seller to marketplace"
        },
        {
            "name": "Get Versions",
            "description": "Search and filter all versions of suggestions, using specific criteria"
        },
        {
            "name": "SKU Approval Settings"
        },
        {
            "name": "Match Received SKUs",
            "description": "Match SKU suggestions received in the marketplace"
        }
    ]
}