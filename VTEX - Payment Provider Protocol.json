{
    "openapi": "3.0.0",
    "info": {
        "title": "Payment Provider Protocol",
        "description": ">ℹ️ Onboarding guide\r\n>\r\n> Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.\r\n\r\nThe Payment Provider Protocol is a set of definitions to help you integrate your payment processing API into the VTEX platform, including sub-acquirers, acquirers, gateways, and custom payment services. \r\n\r\nTo achieve this, you must implement a web API (REST) following the specifications described in this documentation.\r\n\r\nTo learn more about the Payment Provider Protocol, check our [Help Center article](https://help.vtex.com/en/tutorial/payment-provider-protocol--RdsT2spdq80MMwwOeEq0m).\r\n\r\n## Endpoint requirements\r\n\r\n  * Must use a standard subdomain/domain name, not an IP address.\r\n  * Must be served over HTTPS on port 443 with TLS 1.2 support.\r\n  * Must respond in less than 5 seconds when running the tests.\r\n  * Must respond in less than 20 seconds when in production.\r\n  * Must be [PCI-DSS compliant](https://developers.vtex.com/docs/guides/payments-integration-pci-dss-compliance) or use [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy) to accept branded cards like Visa, Mastercard, Amex, etc.\r\n\r\n## Testing\r\n\r\nYou can perform tests on your payment using our [VTEX - Payment Provider Test Suite](https://apps.vtex.com/vtex-payment-provider-test-suite/p).\r\n\r\n>\u2139 An extra header `X-VTEX-API-Is-TestSuite` = `true` will be sent for every test suite request, to help you easily identify it and mock any required scenarios.\r\n\r\nFor more details about testing a Payment Provider, check our [Payment Provider Homologation](https://developers.vtex.com/docs/guides/payments-integration-payment-provider-homologation) article.\r\n\r\n## Common parameters in the documentation\r\n\r\n<table>\r\n  <tr>\r\n    <td><code>{{providerApiEndpoint}}</code></td>\r\n    <td>Provider's endpoint for the implementation</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>{{X-VTEX-API-AppKey}}</code></td>\r\n    <td>The AppKey configured by the merchant</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>{{X-VTEX-API-AppToken}}</code></td>\r\n    <td>The AppToken configured by the merchant</td>\r\n  </tr>\r\n</table>",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://{providerApiEndpoint}",
            "description": "VTEX server url"
        }
    ],
    "paths": {
        "/payment-methods": {
            "get": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "List Payment Methods",
                "description": "Returns all payment methods that your provider can handle. Please make sure you are returning only supported payment methods as listed below.\r\n\r\n>ℹ This endpoint must be public and should not require `X-VTEX-API-AppKey`/`X-VTEX-API-AppToken` headers.\r\n\r\n## Available payment methods\r\n\r\n<table>\r\n    <tr>\r\n        <th>Payment Method</th>\r\n        <th>Type</th>\r\n        <th>Country</th>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Visa</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Mastercard</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>American Express</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Discover</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>JCB</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Diners</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Elo</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Hipercard</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Aura</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Banricompras</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Credz</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n  <tr>\r\n        <td><code>VirtualDebitElo</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cabal</code></td>\r\n        <td>Credit Card</td>\r\n        <td>Argentina, Brazil, Uruguay, Paraguay</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Visa Electron</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Maestro</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Mastercard Debit</code></td>\r\n        <td>Debit Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cobranded</code></td>\r\n        <td>Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Privatelabels</code></td>\r\n        <td>Card</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Promissories</code></td>\r\n        <td>Generic</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Cash</code></td>\r\n        <td>Generic</td>\r\n        <td>Global</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>BankInvoice</code></td>\r\n        <td>Offline/Voucher</td>\r\n        <td>Brazil (Boleto Bancário)</td>\r\n    </tr>\r\n  <tr>\r\n        <td><code>Pix</code></td>\r\n        <td>Online Transfer</td>\r\n        <td>Brazil</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>SPEI</code></td>\r\n        <td>Online Transfer</td>\r\n        <td>Mexico</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Safetypay</code></td>\r\n        <td>Online Transfer</td>\r\n        <td>Americas and Europe</td>\r\n    </tr>\r\n    <tr>\r\n        <td><code>Bitcoin</code></td>\r\n        <td>Cryptocurrency</td>\r\n        <td>Global</td>\r\n    </tr>\r\n</table>\r\n\r\nBranded/Local Payment Methods:\r\n\r\n- PinCash\r\n- LevPay\r\n- PayMee\r\n- PicPay\r\n- Losango\r\n- PagoLivre\r\n- Pagomio\r\n- PagSeguro\r\n- PlaceToPay",
                "operationId": "PaymentMethods",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentMethods": [
                                                "Visa",
                                                "Mastercard",
                                                "Pix",
                                                "American Express",
                                                "BankInvoice",
                                                "Privatelabels",
                                                "Promissories"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/manifest": {
            "get": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "List Payment Provider Manifest",
                "description": "Exposes provider manifest, a range of metadata settings, like payment methods, split configuration and custom fields.\n\n## Available payment methods\n\n<table>\n    <tr>\n        <th>Payment Method</th>\n        <th>Type</th>\n        <th>Country</th>\n    </tr>\n    <tr>\n        <td><code>Visa</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Mastercard</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>American Express</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Discover</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>JCB</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Diners</code></td>\n        <td>Credit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Elo</code></td>\n        <td>Credit Card</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>Hipercard</code></td>\n        <td>Credit Card</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>Aura</code></td>\n        <td>Credit Card</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>Banricompras</code></td>\n        <td>Credit Card</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>Credz</code></td>\n        <td>Credit Card</td>\n        <td>Brazil</td>\n    </tr>\n  <tr>\n        <td><code>VirtualDebitElo</code></td>\n        <td>Debit Card</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>Cabal</code></td>\n        <td>Credit Card</td>\n        <td>Argentina, Brazil, Uruguay, Paraguay</td>\n    </tr>\n    <tr>\n        <td><code>Visa Electron</code></td>\n        <td>Debit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Maestro</code></td>\n        <td>Debit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Mastercard Debit</code></td>\n        <td>Debit Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Cobranded</code></td>\n        <td>Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Privatelabels</code></td>\n        <td>Card</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Promissories</code></td>\n        <td>Generic</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Cash</code></td>\n        <td>Generic</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>BankInvoice</code></td>\n        <td>Offline/Voucher</td>\n        <td>Brazil (Boleto Bancário)</td>\n    </tr>\n <tr>\n        <td><code>Pix</code></td>\n        <td>Online Transfer</td>\n        <td>Brazil</td>\n    </tr>\n    <tr>\n        <td><code>SPEI</code></td>\n        <td>Online Transfer</td>\n        <td>Mexico</td>\n    </tr>\n    <tr>\n        <td><code>Safetypay</code></td>\n        <td>Online Transfer</td>\n        <td>Americas and Europe</td>\n    </tr>\n    <tr>\n        <td><code>Bitcoin</code></td>\n        <td>Cryptocurrency</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Venda Direta Credito</code></td>\n        <td>Credit Card (Physical)</td>\n        <td>Global</td>\n    </tr>\n    <tr>\n        <td><code>Venda Direta Debito</code></td>\n        <td>Debit Card (Physical)</td>\n        <td>Global</td>\n    </tr>\n</table>",
                "operationId": "Manifest",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success-Manifest"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentMethods": [
                                                {
                                                    "name": "Visa",
                                                    "allowsSplit": "onCapture"
                                                },
                                                {
                                                    "name": "Pix",
                                                    "allowsSplit": "disabled"
                                                },
                                                {
                                                    "name": "Mastercard",
                                                    "allowsSplit": "onCapture"
                                                },
                                                {
                                                    "name": "American Express",
                                                    "allowsSplit": "onCapture"
                                                },
                                                {
                                                    "name": "BankInvoice",
                                                    "allowsSplit": "onAuthorize"
                                                },
                                                {
                                                    "name": "Privatelabels",
                                                    "allowsSplit": "disabled"
                                                },
                                                {
                                                    "name": "Promissories",
                                                    "allowsSplit": "disabled"
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "name": "Merchant's custom field",
                                                    "type": "text"
                                                },
                                                {
                                                    "name": "Merchant's custom select field",
                                                    "type": "select",
                                                    "options": [
                                                        {
                                                            "text": "Field option 1",
                                                            "value": "1"
                                                        },
                                                        {
                                                            "text": "Field option 2",
                                                            "value": "2"
                                                        },
                                                        {
                                                            "text": "Field option 3",
                                                            "value": "3"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "autoSettleDelay": {
                                                "minimum": "0",
                                                "maximum": "720"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/payments": {
            "post": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "Create Payment",
                "description": "Creates a new payment and initiates the payment flow.\r\n\r\nFor credit/debit card payments or any sync payments, you're expected to execute the authorization.\r\n\r\nYou're expected to return the required information to the customer for bank-issued invoice, redirect, or any async payments.\r\n\r\nThe same request, for the same `paymentId`, can be executed several times, so you must handle it in a way to avoid recreating the payment, but returning the most updated status instead.\r\n\r\n## Callbacks (asynchronous flow)\r\n\r\nCallbacks are used for asynchronous payments, which do not receive the final status immediately. At first, an `undefined` status is returned, and the final status will be received from a callback request in the future as `authorized` or `denied`. There are two types of callbacks:\r\n\r\n- **Notification:** If a payment returns with `undefined` status, you are expected to send us a callback/notification to update it later, sending a POST with an updated version of your response (same structure as above) to the `callbackUrl` we have provided.\r\n\r\n- **Retry:** If a payment returns with `undefined` status, you are expected to call the retry endpoint provided by the `callbackUrl` when the processing of the payment is completed, so we make another Create Payment request to update the status with the new value (`authorized` or `denied`).\r\n\r\nCallback requests should be authenticated using a Key and Token which you can [generate from your VTEX partner account License Manager](https://help.vtex.com/en/tutorial/application-keys--2iffYzlvvz4BDMr6WGUtet#generating-app-keys-in-your-account). To do so, `POST` your request passing the `X-VTEX-API-AppKey` and `X-VTEX-API-AppToken` headers with your credentials. **Note:** do not mix up these credentials with the ones we send on behalf of the merchant when sending our requests.\r\n\r\n>\u26A0 For integrations not using VTEX IO, use the **Notification** callback. For integrations developed using VTEX IO infrastructure, use the **Retry** callback.\r\n\r\n### Callback URL\r\n\r\nThe `callbackUrl` field contains an URL that the payment provider uses to make a callback and inform our gateway of the final payment status: `approved` or `denied`. \r\n\r\nThis URL has some query parameters, including the `X-VTEX-signature`. This parameter is mandatory and contains a signature token to identify that the request has been generated from VTEX as a security measure. The signature token has at most 32 characters. You can check an example of callback URL with the signature token below:\r\n\r\n```\r\nhttps://gatewayqa.vtexpayments.com.br/api/pvt/payment-provider/transactions/8FB0F111111122222333344449984ACB/payments/A2A9A25B11111111222222333327883C/callback?accountName=teampaymentsintegrations&X-VTEX-signature=R123456789aBcDeFGHij1234567890tk\r\n```\r\n\r\nIn the [Transactions page of the Admin](https://help.vtex.com/en/tutorial/how-to-view-the-orders-details--tutorials_452), the signature token appears masked for security reasons, as in this example: `X-VTEX-signature=Rj******tk`.\r\n\r\nWhen making the callback request, we recommend that payment providers use the callback URL exactly as received, which guarantees that all the parameters are included.\r\n\r\n## Beta features\r\n\r\nThe beta features available for payment providers are:\r\n\r\n- `inboundRequestsUrl`: Allows to forward external requests back to your payment provider implementation, including the configured credentials (`X-VTEX-API-*` headers), and settings.\r\n\r\n>\u2139 You can reach out to our team by [opening a ticket](https://help.vtex.com/en/tutorial/opening-tickets-to-vtex-support--16yOEqpO32UQYygSmMSSAM) to know more about any beta features.\r\n\r\n## Request examples\r\n\r\n### Credit Card Success Approved\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"618272\",\r\n    \"orderId\": \"1072430428324\",\r\n    \"shopperInteraction\": \"ecommerce\",\r\n    \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"paymentMethod\": \"Diners\",\r\n    \"merchantName\": \"mystore\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"364901****2661\",\r\n        \"csc\": \"***\",\r\n        \"expiration\": {\r\n            \"month\": \"12\",\r\n            \"year\": \"2020\"\r\n        },\r\n        \"document\": \"39295416023\",\r\n        \"token\": null\r\n    },\r\n    \"value\": 31.90,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"installmentsInterestRate\": 0.00,\r\n    \"installmentsValue\": 31.90,\r\n    \"deviceFingerprint\": \"75076388\",\r\n    \"ipAddress\": \"187.105.111.65\",\r\n    \"miniCart\": {\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"cpf\",\r\n            \"corporateName\": null,\r\n            \"tradeName\": null,\r\n            \"corporateDocument\": null,\r\n            \"isCorporate\": false,\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521999999999\",\r\n            \"createdDate\": \"2020-02-18T18:17:45\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"8\",\r\n                \"name\": \"Tenis Preto I\",\r\n                \"price\": 30.9,\r\n                \"quantity\": 1,\r\n                \"discount\": 0.0,\r\n                \"deliveryType\": \"Normal\",\r\n                \"categoryId\": \"5\",\r\n                \"sellerId\": \"1\"\r\n            }\r\n        ],\r\n        \"shippingValue\": 1.0,\r\n        \"taxValue\": 0.0\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\r\n    \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\r\n    \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\r\n    \"recipients\": [\r\n        {\r\n            \"id\": \"mymarketplace\",\r\n            \"name\": \"My Marketplace QA\",\r\n            \"documentType\": \"CNPJ\",\r\n            \"document\": \"99999999999999\",\r\n            \"role\": \"marketplace\",\r\n            \"chargeProcessingFee\": true,\r\n            \"chargebackLiable\": true,\r\n            \"amount\": 31.90\r\n        }\r\n    ],\r\n    \"merchantSettings\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"value\": \"value1\"\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"value\": \"value2\"\r\n        }\r\n    ]\r\n}'\r\n```\r\n\r\n### Pix Success Approved\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"618272\",\r\n    \"orderId\": \"1072430428324\",\r\n    \"shopperInteraction\": \"ecommerce\",\r\n    \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"paymentMethod\": \"Diners\",\r\n    \"merchantName\": \"mystore\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"364901****2661\",\r\n        \"csc\": \"***\",\r\n        \"expiration\": {\r\n            \"month\": \"12\",\r\n            \"year\": \"2020\"\r\n        },\r\n        \"document\": \"39295416023\",\r\n        \"token\": null\r\n    },\r\n    \"value\": 31.90,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"installmentsInterestRate\": 0.00,\r\n    \"installmentsValue\": 31.90,\r\n    \"deviceFingerprint\": \"75076388\",\r\n    \"ipAddress\": \"187.105.111.65\",\r\n    \"miniCart\": {\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"cpf\",\r\n            \"corporateName\": null,\r\n            \"tradeName\": null,\r\n            \"corporateDocument\": null,\r\n            \"isCorporate\": false,\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521999999999\",\r\n            \"createdDate\": \"2020-02-18T18:17:45\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"8\",\r\n                \"name\": \"Tenis Preto I\",\r\n                \"price\": 30.9,\r\n                \"quantity\": 1,\r\n                \"discount\": 0.0,\r\n                \"deliveryType\": \"Normal\",\r\n                \"categoryId\": \"5\",\r\n                \"sellerId\": \"1\"\r\n            }\r\n        ],\r\n        \"shippingValue\": 1.0,\r\n        \"taxValue\": 0.0\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\r\n    \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\r\n    \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\r\n    \"recipients\": [\r\n        {\r\n            \"id\": \"mymarketplace\",\r\n            \"name\": \"My Marketplace QA\",\r\n            \"documentType\": \"CNPJ\",\r\n            \"document\": \"99999999999999\",\r\n            \"role\": \"marketplace\",\r\n            \"chargeProcessingFee\": true,\r\n            \"chargebackLiable\": true,\r\n            \"amount\": 31.90\r\n        }\r\n    ],\r\n    \"merchantSettings\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"value\": \"value1\"\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"value\": \"value2\"\r\n        }\r\n    ]\r\n}'\r\n```\r\n\r\n### Success Undefined\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"Visa\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 3,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"4682185088924788\",\r\n        \"csc\": \"021\",\r\n        \"expiration\": {\r\n            \"month\": \"06\",\r\n            \"year\": \"2029\"\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n### Success Undefined BankInvoice\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"BankInvoice\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": null,\r\n        \"number\": null,\r\n        \"csc\": null,\r\n        \"expiration\": {\r\n            \"month\": null,\r\n            \"year\": null\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n### Success Denied\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"Visa\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 3,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"4682185088924788\",\r\n        \"csc\": \"021\",\r\n        \"expiration\": {\r\n            \"month\": \"06\",\r\n            \"year\": \"2029\"\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n### Boleto Success Approved\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"618272\",\r\n    \"orderId\": \"1072430428324\",\r\n    \"shopperInteraction\": \"ecommerce\",\r\n    \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"paymentMethod\": \"BankInvoice\",\r\n    \"merchantName\": \"mystore\",\r\n    \"card\": {\r\n        \"holder\": null,\r\n        \"number\": null,\r\n        \"csc\": null,\r\n        \"expiration\": {\r\n            \"month\": null,\r\n            \"year\": null\r\n        },\r\n        \"document\": null,\r\n        \"token\": null\r\n    },\r\n    \"value\": 31.90,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"installmentsInterestRate\": 0.00,\r\n    \"installmentsValue\": 31.90,\r\n    \"deviceFingerprint\": \"98073964\",\r\n    \"ipAddress\": \"187.105.111.65\",\r\n    \"miniCart\": {\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"cpf\",\r\n            \"corporateName\": null,\r\n            \"tradeName\": null,\r\n            \"corporateDocument\": null,\r\n            \"isCorporate\": false,\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521999999999\",\r\n            \"createdDate\": \"2020-02-18T18:17:45\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"8\",\r\n                \"name\": \"Tenis Preto I\",\r\n                \"price\": 30.9,\r\n                \"quantity\": 1,\r\n                \"discount\": 0.0,\r\n                \"deliveryType\": \"Normal\",\r\n                \"categoryId\": \"5\",\r\n                \"sellerId\": \"1\"\r\n            }\r\n        ],\r\n        \"shippingValue\": 1.0,\r\n        \"taxValue\": 0.0\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\r\n    \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\r\n    \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\r\n    \"recipients\": [\r\n        {\r\n            \"id\": \"mymarketplace\",\r\n            \"name\": \"My Marketplace QA\",\r\n            \"documentType\": \"CNPJ\",\r\n            \"document\": \"99999999999999\",\r\n            \"role\": \"marketplace\",\r\n            \"chargeProcessingFee\": true,\r\n            \"chargebackLiable\": true,\r\n            \"amount\": 31.90\r\n        }\r\n    ],\r\n    \"merchantSettings\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"value\": \"value1\"\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"value\": \"value2\"\r\n        }\r\n    ]\r\n}'\r\n```\r\n\r\n### Payment App + Inbound Request Success Undefined\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"CustomPay\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": null,\r\n        \"number\": null,\r\n        \"csc\": null,\r\n        \"expiration\": {\r\n            \"month\": null,\r\n            \"year\": null\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\",\r\n    \"inboundRequestsUrl\": \"https://mystore.api.example.com/some-path/inbound-request/:action\"\r\n}'\r\n```\r\n\r\n### Redirect Success Undefined\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"FakePay\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": null,\r\n        \"number\": null,\r\n        \"csc\": null,\r\n        \"expiration\": {\r\n            \"month\": null,\r\n            \"year\": null\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n### Redirect Success Approved\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"618272\",\r\n    \"orderId\": \"1072430428324\",\r\n    \"shopperInteraction\": \"ecommerce\",\r\n\r\n    \"transactionId\": \"2F023FD5A72A49D48A8633252B7CCBD6\",\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"paymentMethod\": \"RedirectPay\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"card\": {\r\n        \"holder\": null,\r\n        \"number\": null,\r\n        \"csc\": null,\r\n        \"expiration\": {\r\n            \"month\": null,\r\n            \"year\": null\r\n        },\r\n        \"document\": null,\r\n        \"token\": null\r\n    },\r\n    \"value\": 31.90,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 1,\r\n    \"installmentsInterestRate\": 0.00,\r\n    \"installmentsValue\": 31.90,\r\n    \"deviceFingerprint\": \"75076388\",\r\n    \"ipAddress\": \"187.105.111.65\",\r\n    \"miniCart\": {\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"cpf\",\r\n            \"corporateName\": null,\r\n            \"tradeName\": null,\r\n            \"corporateDocument\": null,\r\n            \"isCorporate\": false,\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521999999999\",\r\n            \"createdDate\": \"2020-02-18T18:17:45\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"8\",\r\n                \"name\": \"Tenis Preto I\",\r\n                \"price\": 30.9,\r\n                \"quantity\": 1,\r\n                \"discount\": 0.0,\r\n                \"deliveryType\": \"Normal\",\r\n                \"categoryId\": \"5\",\r\n                \"sellerId\": \"1\"\r\n            }\r\n        ],\r\n        \"shippingValue\": 1.0,\r\n        \"taxValue\": 0.0\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders?q=1072430428324\",\r\n    \"callbackUrl\": \"https://api.mystore.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/1072430428324\",\r\n    \"inboundRequestsUrl\": \"https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action\",\r\n    \"recipients\": [\r\n        {\r\n            \"id\": \"mymarketplace\",\r\n            \"name\": \"My Marketplace QA\",\r\n            \"documentType\": \"CNPJ\",\r\n            \"document\": \"99999999999999\",\r\n            \"role\": \"marketplace\",\r\n            \"chargeProcessingFee\": true,\r\n            \"chargebackLiable\": true,\r\n            \"amount\": 31.90\r\n        }\r\n    ],\r\n    \"merchantSettings\": [\r\n        {\r\n            \"name\": \"field1\",\r\n            \"value\": \"value1\"\r\n        },\r\n        {\r\n            \"name\": \"field2\",\r\n            \"value\": \"value2\"\r\n        }\r\n    ]\r\n}'\r\n```\r\n\r\n### Fail Generic Error\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"Visa\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"BRL\",\r\n    \"installments\": 3,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"4682185088924788\",\r\n        \"csc\": \"021\",\r\n        \"expiration\": {\r\n            \"month\": \"06\",\r\n            \"year\": \"2029\"\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n### Fail Bad Request\r\n\r\n```bash\r\ncurl --location --request POST 'https://{{providerApiEndpoint}}/payments' \\\r\n--header 'X-VTEX-API-AppKey: {{X-VTEX-API-AppKey}}' \\\r\n--header 'X-VTEX-API-AppToken: {{X-VTEX-API-AppToken}}' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Accept: application/json' \\\r\n--data-raw '{\r\n    \"reference\": \"32478982\",\r\n    \"orderId\": \"v967373115140abc\",\r\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\r\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n    \"paymentMethod\": \"Visa\",\r\n    \"paymentMethodCustomCode\": null,\r\n    \"merchantName\": \"mystore\",\r\n    \"value\": 4307.23,\r\n    \"currency\": \"ABC\",\r\n    \"installments\": 3,\r\n    \"deviceFingerprint\": \"12ade389087fe\",\r\n    \"card\": {\r\n        \"holder\": \"John Doe\",\r\n        \"number\": \"4682185088924788\",\r\n        \"csc\": \"021\",\r\n        \"expiration\": {\r\n            \"month\": \"06\",\r\n            \"year\": \"2029\"\r\n        }\r\n    },\r\n    \"miniCart\": {\r\n        \"shippingValue\": 11.44,\r\n        \"taxValue\": 10.01,\r\n        \"buyer\": {\r\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\r\n            \"firstName\": \"John\",\r\n            \"lastName\": \"Doe\",\r\n            \"document\": \"01234567890\",\r\n            \"documentType\": \"CPF\",\r\n            \"email\": \"john.doe@example.com\",\r\n            \"phone\": \"+5521987654321\"\r\n        },\r\n        \"shippingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Praia de Botafogo St.\",\r\n            \"number\": \"300\",\r\n            \"complement\": \"3rd Floor\",\r\n            \"neighborhood\": \"Botafogo\",\r\n            \"postalCode\": \"22250040\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"state\": \"RJ\"\r\n        },\r\n        \"billingAddress\": {\r\n            \"country\": \"BRA\",\r\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\r\n            \"number\": \"4440\",\r\n            \"complement\": \"10th Floor\",\r\n            \"neighborhood\": \"Itaim Bibi\",\r\n            \"postalCode\": \"04538132\",\r\n            \"city\": \"S\u00E3o Paulo\",\r\n            \"state\": \"SP\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"id\": \"132981\",\r\n                \"name\": \"My First Product\",\r\n                \"price\": 2134.90,\r\n                \"quantity\": 2,\r\n                \"discount\": 5.00\r\n            },\r\n            {\r\n                \"id\": \"123242\",\r\n                \"name\": \"My Second Product\",\r\n                \"price\": 21.98,\r\n                \"quantity\": 1,\r\n                \"discount\": 1.00\r\n            }\r\n        ]\r\n    },\r\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\r\n    \"callbackUrl\": \"https://api.example.com/some-path/to-notify/status-changes?an=mystore\",\r\n    \"returnUrl\": \"https://mystore.example.com/checkout/order/v32478982\"\r\n}'\r\n```\r\n\r\n## Response examples\r\n\r\n\r\n\r\n### 200 - OK\r\n\r\n```bash\r\n{\r\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n  \"status\": \"undefined\",\r\n  \"tid\": \"TID1578324421\",\r\n  \"authorizationId\": null,\r\n  \"nsu\": null,\r\n  \"code\": \"APP123\",\r\n  \"paymentAppData\": {\r\n    \"appName\": \"vendor.payment-auth-app\",\r\n    \"payload\": \"{\\\"backendUrl\\\":\\\"https://api.example.org/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91\\\",\\\"randomString\\\":\\\"78818C2C64264212B8D5771BDC7B1A\\\",\\\"randomBool\\\":false,\\\"timestamp\\\":\\\"2019-10-07 21:30:09Z\\\"}\"\r\n  },\r\n  \"message\": \"The customer needs to finish the payment flow\",\r\n  \"delayToAutoSettle\": 604800,\r\n  \"delayToAutoSettleAfterAntifraud\": 120,\r\n  \"delayToCancel\": 604800\r\n}\r\n```\r\n\r\n### 200 - OK - Pix\r\n\r\n```bash\r\n{\r\n  \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\r\n  \"status\": \"undefined\",\r\n  \"tid\": \"TID1578324421\",\r\n  \"authorizationId\": null,\r\n  \"nsu\": null,\r\n  \"code\": \"APP123\",\r\n  \"paymentAppData\": {\r\n    \"payload\": \"{\\\"code\\\":\\\"https://bacen.pix/pix/code\\\",\\\"qrCodeBase64Image\\\":\\\"iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAYAAABytg0kAAABQGlDQ1BJQ0MgUHJvZmlsZQAAKJFjYGDiSSwoyGFhYGDIzSspCnJ3UoiIjFJgf8LAxSDMwMkgwiCZmFxc4BgQ4ANUwgCjUcG3awyMIPqyLsgspwWXFu+Xeyundb6w0WL33C5M9SiAKyW1OBlI/wHihOSCohIGBsYYIFu5vKQAxG4AskWKgI4CsqeA2OkQ9goQOwnC3gNWExLkDGRfALIFkjMSU4DsB0C2ThKSeDoSG2ovCLAZGZkbhBNwKKmgJLWiBEQ75xdUFmWmZ5QoOAJDJ1XBMy9ZT0fByMDIgIEBFNYQ1Z9vgMOQUYwDIZapzMBgmQEUfIQQSxNmYNiZzsDAU4UQU5/PwMBrxMBw5GJBYlEi3AGM31iK04yNIGzu7QwMrNP+//8M9Ca7JgPD3+v////e/v//32UMDMy3GBgOfAMA4+RdqZ9YRkcAAABWZVhJZk1NACoAAAAIAAGHaQAEAAAAAQAAABoAAAAAAAOShgAHAAAAEgAAAESgAgAEAAAAAQAAAAKgAwAEAAAAAQAAAAIAAAAAQVNDSUkAAABTY3JlZW5zaG900Fpo3gAAAdJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDUuNC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+MjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlVzZXJDb21tZW50PlNjcmVlbnNob3Q8L2V4aWY6VXNlckNvbW1lbnQ+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4yPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cl89Cn4AAAASSURBVAgdY/wPBAxAwAQiQAAAPfgEAIAu9DkAAAAASUVORK5CYII=\\\"}\"\r\n  },\r\n  \"message\": \"The customer needs to finish the payment flow\",\r\n  \"delayToAutoSettle\": 604800,\r\n  \"delayToAutoSettleAfterAntifraud\": 120,\r\n  \"delayToCancel\": 300\r\n}\r\n```\r\n\r\n### 200 - OK - Credit Card\r\n\r\n```bash\r\n{\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"status\": \"approved\",\r\n    \"authorizationId\": \"AUT-09DC5E8F03\",\r\n    \"nsu\": \"NSU-107521E866\",\r\n    \"tid\": \"TID-7B58BE1A08\",\r\n    \"acquirer\": \"TestPay\",\r\n    \"code\": \"2000\",\r\n    \"message\": null,\r\n    \"delayToAutoSettle\": 21600,\r\n    \"delayToAutoSettleAfterAntifraud\": 1800,\r\n    \"delayToCancel\": 21600\r\n}\r\n```\r\n\r\n### 200 - OK - Boleto\r\n\r\n```bash\r\n{\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"status\": \"undefined\",\r\n    \"authorizationId\": \"AUT-2E7CBF7290-ASYNC\",\r\n    \"paymentUrl\": \"https://example.org/boleto/gatewayqa/2F023FD5A72A49D48A8633252B7CCBD6/01693EB95BE443AC85874E395CD91565\",\r\n    \"identificationNumber\": \"23790504004199031316957008109209378300000019900\",\r\n    \"identificationNumberFormatted\": \"23790.50400 41990.313169 57008.109209 3 78300000019900\",\r\n    \"barCodeImageType\": \"i25\",\r\n    \"barCodeImageNumber\": \"23793783000000199000504041990313165700810920\",\r\n    \"nsu\": \"NSU-60F328ACD8-ASYNC\",\r\n    \"tid\": \"TID-F3FB9B3FDB-ASYNC\",\r\n    \"acquirer\": \"TestPay\",\r\n    \"code\": \"2000-ASYNC\",\r\n    \"message\": null,\r\n    \"delayToAutoSettle\": 21600,\r\n    \"delayToAutoSettleAfterAntifraud\": 1800,\r\n    \"delayToCancel\": 21600\r\n}\r\n```\r\n\r\n### 200 - OK - Payment App\r\n\r\n```bash\r\n{\r\n    \"paymentId\": \"01693EB95BE443AC85874E395CD91565\",\r\n    \"status\": \"undefined\",\r\n    \"authorizationId\": \"AUT-6929AD8429\",\r\n    \"paymentAppData\": {\r\n        \"appName\": \"vtex.payment\",\r\n        \"payload\": \"{\\\"approvePaymentUrl\\\":\\\"https://api.mystore.example.com/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/callback-trigger/approved?url=https://api.mystore.example.com/transactions/D3AA1FC8372E430E8236649DB5EBD08E/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/notification\\\",\\\"denyPaymentUrl\\\":\\\"https://api.mystore.example.com/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/callback-trigger/denied?url=https://api.mystore.example.com/transactions/D3AA1FC8372E430E8236649DB5EBD08E/payments/F5C1A4E20D3B4E07B7E871F5B5BC9F91/notification\\\",\\\"orderId\\\":\\\"1072650953886\\\",\\\"transactionId\\\":\\\"D3AA1FC8372E430E8236649DB5EBD08E\\\",\\\"paymentId\\\":\\\"F5C1A4E20D3B4E07B7E871F5B5BC9F91\\\",\\\"timestamp\\\":\\\"2020-10-29 17:15:59Z\\\"}\"\r\n    },\r\n    \"nsu\": \"NSU-227AFD0BD2\",\r\n    \"tid\": \"TID-DBE4BFFB19\",\r\n    \"acquirer\": \"TestPay\",\r\n    \"code\": \"2001\",\r\n    \"message\": null,\r\n    \"delayToAutoSettle\": 21600,\r\n    \"delayToAutoSettleAfterAntifraud\": 1800,\r\n    \"delayToCancel\": 21600\r\n}\r\n```\r\n\r\n### 200 - OK - Redirect\r\n\r\n```bash\r\n{\r\n    \"paymentId\": \"7ee64e51-a0d3-4405-874c-d7497ab84572\",\r\n    \"status\": \"undefined\",\r\n    \"tid\": \"214c699cb408ce6a7110\",\r\n    \"paymentUrl\": \"http://php-connector.herokuapp.com/installments.php?paymentId=7ee64e51-a0d3-4405-874c-d7497ab84572\"\r\n}\r\n```\r\n\r\n### 200 - OK - Callback\r\n\r\n```bash\r\n{\r\n    \"paymentId\": \"7ee64e51-a0d3-4405-874c-d7497ab84572\",\r\n    \"status\": \"approved\",\r\n    \"authorizationId\": \"3baafb4097d6c8ad3883\",\r\n    \"paymentUrl\": null,\r\n    \"nsu\": \"214c699cb408ce6a7110\",\r\n    \"tid\": \"214c699cb408ce6a7110\",\r\n    \"acquirer\": null,\r\n    \"code\": null,\r\n    \"message\": \"Payment with custom installments approved\",\r\n    \"delayToAutoSettle\": 21600,\r\n    \"delayToAutoSettleAfterAntifraud\": 1800,\r\n    \"delayToCancel\": 21600\r\n}\r\n```",
                "operationId": "CreatePayment",
                "parameters": [
                    {
                        "name": "X-VTEX-API-AppKey",
                        "in": "header",
                        "description": "The AppKey configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppKey}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppToken",
                        "in": "header",
                        "description": "The AppToken configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppToken}}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "The Root",
                                "required": [
                                    "reference",
                                    "orderId",
                                    "shopperInteraction",
                                    "transactionId",
                                    "paymentId",
                                    "paymentMethod",
                                    "paymentMethodCustomCode",
                                    "merchantName",
                                    "value",
                                    "currency",
                                    "installments",
                                    "deviceFingerprint",
                                    "card",
                                    "miniCart",
                                    "url",
                                    "callbackUrl",
                                    "returnUrl"
                                ],
                                "properties": {
                                    "reference": {
                                        "type": "string",
                                        "title": "reference",
                                        "description": "Merchant's order reference provided by VTEX Checkout.",
                                        "example": "618272",
                                        "pattern": "^(.*)$"
                                    },
                                    "orderId": {
                                        "type": "string",
                                        "title": "orderId",
                                        "description": "Merchant's order identifier provided by VTEX Checkout (also called order group).",
                                        "example": "1072430428324",
                                        "pattern": "^(.*)$"
                                    },
                                    "shopperInteraction": {
                                        "type": "string",
                                        "title": "shopperInteraction",
                                        "description": "Indicates which system the buyer interacted with (examples: e-commerce, instore, subscription).",
                                        "example": "ecommerce",
                                        "pattern": "^(.*)$"
                                    },
                                    "verificationOnly": {
                                        "type": "boolean",
                                        "title": "verificationOnly",
                                        "description": "Indicates whether this payment is just to validate the buyer's payment method information (for instance, validate the credit card information).",
                                        "default": false,
                                        "pattern": "^(.*)$"
                                    },
                                    "transactionId": {
                                        "type": "string",
                                        "title": "transactionId",
                                        "description": "VTEX transaction ID related to this payment.",
                                        "example": "2F023FD5A72A49D48A8633252B7CCBD6",
                                        "pattern": "^(.*)$"
                                    },
                                    "paymentId": {
                                        "type": "string",
                                        "title": "paymentId",
                                        "description": "VTEX payment ID that can be used as unique identifier.",
                                        "example": "01693EB95BE443AC85874E395CD91565",
                                        "pattern": "^(.*)$"
                                    },
                                    "paymentMethod": {
                                        "type": "string",
                                        "title": "paymentMethod",
                                        "description": "The payment method chosen for this payment. It must be one of the available payment methods offered by the provider, which can be obtained from the [List Payment Methods endpoint](https://developers.vtex.com/vtex-rest-api/reference/paymentmethods) or [List Payment Provider Manifest endpoint](https://developers.vtex.com/vtex-rest-api/reference/manifest-1).",
                                        "example": "Diners",
                                        "pattern": "^(.*)$"
                                    },
                                    "paymentMethodCustomCode": {
                                        "type": "string",
                                        "title": "paymentMethodCustomcode",
                                        "description": "Configurable for Cobranded and Privatelabels payment methods.",
                                        "default": "",
                                        "pattern": "^(.*)$"
                                    },
                                    "merchantName": {
                                        "type": "string",
                                        "title": "merchantName",
                                        "description": "VTEX merchant name that will receive the payment.",
                                        "example": "mystore",
                                        "pattern": "^(.*)$"
                                    },
                                    "value": {
                                        "type": "number",
                                        "title": "value",
                                        "description": "Value amount of the payment.",
                                        "example": 31.90,
                                        "pattern": "^(.*)$"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "title": "currency",
                                        "description": "Currency code (ISO 4217 alpha-3).",
                                        "example": "BRL",
                                        "pattern": "^(.*)$"
                                    },
                                    "installments": {
                                        "type": "number",
                                        "title": "installments",
                                        "description": "Number of installments.",
                                        "example": 1,
                                        "pattern": "^(.*)$"
                                    },
                                    "installmentsInterestRate": {
                                        "type": "number",
                                        "title": "installmentsInterestRate",
                                        "description": "The interest rate.",
                                        "example": 0
                                    },
                                    "installmentsValue": {
                                        "type": "number",
                                        "title": "installmentsValue",
                                        "description": "The value of each installment.",
                                        "example": 31.90
                                    },
                                    "deviceFingerprint": {
                                        "type": "string",
                                        "title": "deviceFingerprint",
                                        "description": "A hash that represents the device used to initiate the payment.",
                                        "example": "75076388",
                                        "pattern": "^(.*)$"
                                    },
                                    "ipAddress": {
                                        "type": "string",
                                        "title": "ipAddress",
                                        "description": "The IP Address of the buyer.",
                                        "example": "187.105.111.65"
                                    },
                                    "card": {
                                        "type": "object",
                                        "title": "Card",
                                        "description": "Card used in the payment. This parameter is required only with card payment methods (credit, debit or co-branded).",
                                        "required": [
                                            "holder",
                                            "number",
                                            "csc",
                                            "expiration"
                                        ],
                                        "properties": {
                                            "holder": {
                                                "type": "string",
                                                "title": "holder",
                                                "description": "Card holder name.",
                                                "example": "John Doe",
                                                "pattern": "^(.*)$"
                                            },
                                            "holderToken": {
                                                "type": "string",
                                                "title": "holderToken",
                                                "description": "A token representing the card holder (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": "#vtex#token#d799bae#csc#"
                                            },
                                            "number": {
                                                "type": "string",
                                                "title": "number",
                                                "description": "Card number.",
                                                "example": "364901****2661",
                                                "pattern": "^(.*)$"
                                            },
                                            "csc": {
                                                "type": "string",
                                                "title": "csc",
                                                "description": "Card security code.",
                                                "example": "***",
                                                "pattern": "^(.*)$"
                                            },
                                            "bin": {
                                                "type": "string",
                                                "title": "bin",
                                                "description": "First six digits of the card number (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": "364901"
                                            },
                                            "numberToken": {
                                                "type": "string",
                                                "title": "numberToken",
                                                "description": "A token representing the card number (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": "#vtex#token#d799bae#number#"
                                            },
                                            "numberLength": {
                                                "type": "number",
                                                "title": "numberLength",
                                                "description": "The number of characters in the card number (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": 16
                                            },
                                            "cscToken": {
                                                "type": "string",
                                                "title": "cscToken",
                                                "description": "A token representing the card security code (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": "#vtex#token#d799bae#csc#"
                                            },
                                            "cscLength": {
                                                "type": "number",
                                                "title": "cscLength",
                                                "description": "The number of characters in the Card Security Code (this field is absent in case the provider does not use the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy)).",
                                                "example": 3
                                            },
                                            "expiration": {
                                                "type": "object",
                                                "title": "expiration",
                                                "required": [
                                                    "month",
                                                    "year"
                                                ],
                                                "properties": {
                                                    "month": {
                                                        "type": "string",
                                                        "title": "month",
                                                        "description": "Card expiration month (2-digits).",
                                                        "example": "12",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "year": {
                                                        "type": "string",
                                                        "title": "year",
                                                        "example": "2020",
                                                        "description": "Card expiration year (4-digits).",
                                                        "pattern": "^(.*)$"
                                                    }
                                                }
                                            },
                                            "document": {
                                                "type": "string",
                                                "title": "document",
                                                "description": "Card holder's document.",
                                                "example": "39295416023"
                                            }
                                        }
                                    },
                                    "miniCart": {
                                        "type": "object",
                                        "title": "Minicart",
                                        "required": [
                                            "shippingValue",
                                            "taxValue",
                                            "buyer",
                                            "shippingAddress",
                                            "billingAddress",
                                            "items"
                                        ],
                                        "properties": {
                                            "shippingValue": {
                                                "type": "number",
                                                "title": "shippingValue",
                                                "description": "Total shipping value.",
                                                "default": 1.0
                                            },
                                            "taxValue": {
                                                "type": "number",
                                                "title": "taxValue",
                                                "description": "Total tax value.",
                                                "default": 0.0
                                            },
                                            "buyer": {
                                                "type": "object",
                                                "title": "buyer",
                                                "required": [
                                                    "firstName",
                                                    "lastName",
                                                    "document",
                                                    "documentType",
                                                    "email",
                                                    "phone",
                                                    "isCorporate"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "title": "id",
                                                        "description": "Buyer's unique identifier.",
                                                        "example": "c1245228-1c68-11e6-94ac-0afa86a846a5",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "title": "firstName",
                                                        "description": "Buyer's first name.",
                                                        "example": "John",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "title": "lastName",
                                                        "description": "Buyer's last name.",
                                                        "example": "Doe",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "document": {
                                                        "type": "string",
                                                        "title": "document",
                                                        "description": "Buyer's document number.",
                                                        "example": "01234567890",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "documentType": {
                                                        "type": "string",
                                                        "title": "documentType",
                                                        "description": "Buyer's document type.",
                                                        "example": "cpf",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "title": "email",
                                                        "description": "Buyer's email.",
                                                        "example": "john.doe@example.com",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "title": "phone",
                                                        "description": "Buyer's phone number.",
                                                        "example": "+5521999999999",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "isCorporate": {
                                                        "type": "boolean",
                                                        "title": "isCorporate",
                                                        "description": "Indicates whether or not the buyer is corporate. If `true`, the fields `corporateName`, `tradeName` and `corporateDocument` are required.",
                                                        "default": false,
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "corporateName": {
                                                        "type": "string",
                                                        "title": "corporateName",
                                                        "description": "Buyer's corporate name. This field is required if `isCorporate` is `true`.",
                                                        "example": "VTEX",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "tradeName": {
                                                        "type": "string",
                                                        "title": "tradeName",
                                                        "description": "Buyer's trade name. This field is required if `isCorporate` is `true`.",
                                                        "example": "VTEX",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "corporateDocument": {
                                                        "type": "string",
                                                        "title": "corporateDocument",
                                                        "description": "Buyer's corporate document number. This field is required if `isCorporate` is `true`.",
                                                        "example": "123456789",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "createdDate": {
                                                        "type": "string",
                                                        "title": "createdDate",
                                                        "description": "Buyer's create datetime in format yyyy-MM-ddTHH:mm:ss.",
                                                        "example": "2020-02-18T18:17:45",
                                                        "pattern": "^(.*)$"
                                                    }
                                                }
                                            },
                                            "shippingAddress": {
                                                "type": "object",
                                                "title": "shippingAddress",
                                                "description": "Shipping address. Address where the purchase will be delivered.",
                                                "required": [
                                                    "country",
                                                    "street",
                                                    "number",
                                                    "neighborhood",
                                                    "postalCode",
                                                    "city",
                                                    "state"
                                                ],
                                                "properties": {
                                                    "country": {
                                                        "type": "string",
                                                        "title": "country",
                                                        "description": "Shipping address: country code (ISO 3166 alpha-3).",
                                                        "example": "BRA",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "street": {
                                                        "type": "string",
                                                        "title": "street",
                                                        "description": "Shipping address: street.",
                                                        "example": "Praia de Botafogo St.",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "title": "number",
                                                        "description": "Shipping address: number.",
                                                        "example": "300",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "complement": {
                                                        "type": "string",
                                                        "title": "complement",
                                                        "description": "Shipping address: complement.",
                                                        "example": "3rd Floor",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "neighborhood": {
                                                        "type": "string",
                                                        "title": "neighborhood",
                                                        "description": "Shipping address: neighborhood.",
                                                        "example": "Botafogo",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "postalCode": {
                                                        "type": "string",
                                                        "title": "postalcode",
                                                        "description": "Shipping address: postal code.",
                                                        "example": "22250040",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "title": "city",
                                                        "description": "Shipping address: city.",
                                                        "example": "Rio de Janeiro",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "title": "state",
                                                        "description": "Shipping address: state/province.",
                                                        "example": "RJ",
                                                        "pattern": "^(.*)$"
                                                    }
                                                }
                                            },
                                            "billingAddress": {
                                                "type": "object",
                                                "title": "billingAddress",
                                                "description": "Billing address. Address of the payer.",
                                                "required": [
                                                    "country",
                                                    "street",
                                                    "number",
                                                    "neighborhood",
                                                    "postalCode",
                                                    "city",
                                                    "state"
                                                ],
                                                "properties": {
                                                    "country": {
                                                        "type": "string",
                                                        "title": "country",
                                                        "description": "Billing address: country code (ISO 3166 alpha-3).",
                                                        "example": "BRA",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "street": {
                                                        "type": "string",
                                                        "title": "street",
                                                        "description": "Billing address: street.",
                                                        "example": "Brigadeiro Faria Lima Avenue",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "title": "number",
                                                        "description": "Billing address: number.",
                                                        "example": "4440",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "complement": {
                                                        "type": "string",
                                                        "title": "complement",
                                                        "description": "Billing address: complement.",
                                                        "example": "10th Floor",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "neighborhood": {
                                                        "type": "string",
                                                        "title": "neighborhood",
                                                        "description": "Billing address: neighborhood.",
                                                        "example": "Itaim Bibi",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "postalCode": {
                                                        "type": "string",
                                                        "title": "postalCode",
                                                        "description": "Billing address: postal code.",
                                                        "example": "04538132",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "title": "city",
                                                        "description": "Billing address: city.",
                                                        "example": "São Paulo",
                                                        "pattern": "^(.*)$"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "title": "state",
                                                        "description": "Billing address: state/province.",
                                                        "example": "SP",
                                                        "pattern": "^(.*)$"
                                                    }
                                                }
                                            },
                                            "items": {
                                                "type": "array",
                                                "title": "items",
                                                "description": "Items of the cart of the purchase.",
                                                "items": {
                                                    "type": "object",
                                                    "title": "items",
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "price",
                                                        "quantity",
                                                        "discount",
                                                        "deliveryType"
                                                    ],
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "title": "id",
                                                            "description": "Item identifier.",
                                                            "example": "8",
                                                            "pattern": "^(.*)$"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "title": "name",
                                                            "description": "Item name.",
                                                            "example": "Tenis Preto I",
                                                            "pattern": "^(.*)$"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "title": "price",
                                                            "description": "Item price per unity.",
                                                            "example": 30.9
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "title": "quantity",
                                                            "description": "Item quantity.",
                                                            "example": 1
                                                        },
                                                        "discount": {
                                                            "type": "integer",
                                                            "title": "discount",
                                                            "description": "Discount received for the item.",
                                                            "example": 0.0
                                                        },
                                                        "deliveryType": {
                                                            "type": "string",
                                                            "title": "deliveryType",
                                                            "description": "The delivery SLA selected for this item. Possible values in Brazil, for instance, are PAC, SEDEX.",
                                                            "example": "Normal"
                                                        },
                                                        "categoryId": {
                                                            "type": "string",
                                                            "title": "categoryId",
                                                            "description": "The item category Id.",
                                                            "example": "5"
                                                        },
                                                        "sellerId": {
                                                            "type": "string",
                                                            "title": "sellerId",
                                                            "description": "In case of a marketplace transaction, this is the Id of the seller for this specific item. Otherwise, this is filled with a '1'.",
                                                            "example": "1"
                                                        },
                                                        "taxRate": {
                                                            "type": "number",
                                                            "description": "Value of the sum of all Taxes applied to each item. Rates are in percentage, so 5% is represented as 0.05.",
                                                            "example": 0.05
                                                        },
                                                        "taxValue": {
                                                            "type": "number",
                                                            "description": "Total Tax value of the item (taxRate times value).",
                                                            "example": 1.54
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "recipients": {
                                        "type": "object",
                                        "title": "recipients",
                                        "required": [
                                            "id",
                                            "name",
                                            "documentType",
                                            "document",
                                            "role",
                                            "amount"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "title": "id",
                                                "description": "Recipient identifier."
                                            },
                                            "name": {
                                                "type": "string",
                                                "title": "name",
                                                "description": "Recipient name."
                                            },
                                            "documentType": {
                                                "type": "string",
                                                "description": "Recipient document type.",
                                                "title": "documentType"
                                            },
                                            "document": {
                                                "type": "string",
                                                "title": "document",
                                                "description": "Recipient document number."
                                            },
                                            "role": {
                                                "type": "string",
                                                "description": "Indicates if the recipient is the seller or the marketplace.",
                                                "title": "role"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "Amount due to this recipient.",
                                                "title": "amount"
                                            },
                                            "chargeProcessingFee": {
                                                "type": "boolean",
                                                "title": "chargeProcessingFee",
                                                "description": "Indicates whether or not this recipient is charged for processing fees."
                                            },
                                            "chargebackLiable": {
                                                "type": "boolean",
                                                "title": "chargebackLiable",
                                                "description": "Indicates whether or not this recipient is liable to chargebacks."
                                            }
                                        }
                                    },
                                    "merchantSettings": {
                                        "type": "array",
                                        "title": "merchantSettings",
                                        "description": "Custom fields (for the given Provider) which the Merchant must fill. Each element of this array is a key-value pair.",
                                        "items": {
                                            "type": "object",
                                            "required": [
                                                "name",
                                                "value"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The custom field name."
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The custom field value."
                                                }
                                            }
                                        }
                                    },
                                    "url": {
                                        "type": "string",
                                        "title": "url",
                                        "description": "The order URL from merchant's backoffice.",
                                        "example": "https://admin.mystore.example.com/orders?q=1072430428324",
                                        "pattern": "^(.*)$"
                                    },
                                    "inboundRequestUrl": {
                                        "type": "string",
                                        "title": "inboundRequestUrl",
                                        "description": "The URL to call for the Inbound Request (BETA).",
                                        "example": "https://api.mystore.example.com/checkout/order/1072430428324/inbound-request/:action"
                                    },
                                    "secureProxyUrl": {
                                        "type": "string",
                                        "title": "secureProxyUrl",
                                        "description": "The URL for the [Secure Proxy](https://developers.vtex.com/docs/guides/payments-integration-secure-proxy) to authorize the Payment (this field is absent in case the provider does not use the Secure Proxy)."
                                    },
                                    "sandBoxMode": {
                                        "type": "boolean",
                                        "title": "sandBoxMode",
                                        "description": "Indicates whether or not this request is being sent from a sandbox environment.",
                                        "default": false
                                    },
                                    "totalCartValue": {
                                        "type": "number",
                                        "description": "Total amount of the shopping cart that this payment is part of. It can be used together with the value to calculate the percentage that this payment represents of the total.",
                                        "example": 31.90
                                    },
                                    "callbackUrl": {
                                        "type": "string",
                                        "title": "callbackUrl",
                                        "description": "The URL you need to call to send the callbacks (notification or retry) of payment status changes.",
                                        "default": "https://coinshop.vtexpayments.com.br/payment-provider/transactions/900BA26FEAC84332A53AE1007E740DE3/payments/E713830E32764BF99028A0A275841BFC/notification",
                                        "pattern": "^(.*)$"
                                    },
                                    "returnUrl": {
                                        "type": "string",
                                        "title": "returnUrl",
                                        "description": "The URL you need to redirect the end user back to merchant's store when using the redirect flow.",
                                        "example": "https://mystore.example.com/checkout/order/1072430428324",
                                        "pattern": "^(.*)$"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "250"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Mon, 18 Dec 2017 17:48:04 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "d1584732-1e85-4e80-94d7-7db826241865"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success-Approved"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "status": "approved",
                                            "authorizationId": "AUT123567",
                                            "nsu": "NSU987432",
                                            "tid": "TID1578324421",
                                            "acquirer": "FooBarPayments",
                                            "delayToAutoSettle": 432000,
                                            "delayToAutoSettleAfterAntifraud": 120,
                                            "delayToCancel": 600
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-BadRequest"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "error",
                                            "code": "ERR123",
                                            "message": "The currency ABC is not supported"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-BadRequest"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "error",
                                            "code": "ERR123",
                                            "message": "Authorization has failed due to an internal error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/payments/{paymentId}/cancellations": {
            "post": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "Cancel Payment",
                "description": "Cancels a payment that was not yet approved or settled.",
                "operationId": "CancelPayment",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppKey",
                        "in": "header",
                        "description": "The AppKey configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppKey}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppToken",
                        "in": "header",
                        "description": "The AppToken configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppToken}}"
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "VTEX payment identifier",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelPaymentRequest"
                            },
                            "example": {
                                "paymentId": "{{paymentId}}",
                                "requestId": "{{requestId}}"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "195"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Wed, 20 Dec 2017 19:24:56 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "a356f861-1a30-4260-82ae-938476b30fbf"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success1"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "cancellationId": "1231323234234",
                                            "code": null,
                                            "message": "Successfully cancelled",
                                            "requestId": "D12D9B80972C462980F5067A3A126837"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-GenericError1"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "cancellationId": null,
                                            "code": "ERR123",
                                            "message": "Cancellation has failed due to an internal error",
                                            "requestId": "D12D9B80972C462980F5067A3A126837"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-GenericError1"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "cancellationId": null,
                                            "code": "cancel-manually",
                                            "message": "This payment needs to be manually cancelled",
                                            "requestId": "D12D9B80972C462980F5067A3A126837"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/payments/{paymentId}/settlements": {
            "post": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "Settle Payment",
                "description": "Settles a payment that was previously approved.",
                "operationId": "SettlePayment",
                "parameters": [
                    {
                        "name": "X-VTEX-API-AppKey",
                        "in": "header",
                        "description": "The AppKey configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppKey}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppToken",
                        "in": "header",
                        "description": "The AppToken configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppToken}}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "VTEX payment identifier",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlePayment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "86"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Wed, 20 Dec 2017 19:28:24 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "33189b5d-daa0-4974-8989-47a408752bb8"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success2"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
                                            "value": 57,
                                            "code": null,
                                            "message": "Successfully settled",
                                            "requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-GenericError2"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "settleId": null,
                                            "value": 0,
                                            "code": "ERR123",
                                            "message": "Settlement has failed due to an internal error",
                                            "requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/payments/{paymentId}/refunds": {
            "post": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "Refund Payment",
                "description": "Refunds a payment that was previously settled. You can expect partial refunds.",
                "operationId": "RefundPayment",
                "parameters": [
                    {
                        "name": "X-VTEX-API-AppKey",
                        "in": "header",
                        "description": "The AppKey configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppKey}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppToken",
                        "in": "header",
                        "description": "The AppToken configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppToken}}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "VTEX payment identifier",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundPayment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "86"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Wed, 20 Dec 2017 19:34:57 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "d91fb3a7-b233-4d7a-b3d2-75263856d29a"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success3"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
                                            "value": 57,
                                            "code": null,
                                            "message": "Successfully refunded",
                                            "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-GenericError3"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "refundId": null,
                                            "value": 0,
                                            "code": "ERR123",
                                            "message": "Refund has failed due to an internal error",
                                            "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fail-GenericError3"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "refundId": null,
                                            "value": 0,
                                            "code": "refund-manually",
                                            "message": "This payment needs to be manually refunded",
                                            "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/payments/{paymentId}/inbound-request/{action}": {
            "post": {
                "tags": [
                    "Payment Flow"
                ],
                "summary": "Inbound Request (BETA)",
                "description": "Forwards a request back to your endpoint using the `inboundRequestsUrl` provided in the POST `/payments` payload.\r\n\r\nThe `{action}` part of the path will be the same you have used to call the `inboundRequestsUrl`.",
                "operationId": "InboundRequest(BETA)",
                "parameters": [
                    {
                        "name": "action",
                        "in": "path",
                        "description": "Will be the same you have used to call the `inboundRequestsUrl`",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "{{action}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppKey",
                        "in": "header",
                        "description": "The AppKey configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppKey}}"
                        }
                    },
                    {
                        "name": "X-VTEX-API-AppToken",
                        "in": "header",
                        "description": "The AppToken configured by the merchant (optional configuration)",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "{{X-VTEX-API-AppToken}}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "path",
                        "description": "VTEX payment identifier",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InboundRequest_BETA_Request"
                            },
                            "example": {
                                "requestId": "{{requestId}}",
                                "transactionId": "{{transactionId}}",
                                "paymentId": "{{paymentId}}",
                                "authorizationId": "{{authorizationId}}",
                                "tid": "{{tid}}",
                                "requestData": {
                                    "body": "{{originalRequestBody}}"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success4"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
                                            "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                                            "responseData": {
                                                "statusCode": 200,
                                                "contentType": "application/json",
                                                "content": "{\"myAttribute\":\"anyValue\"}"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/authorization/token": {
            "post": {
                "tags": [
                    "Configuration Flow"
                ],
                "summary": "Create Authorization Token",
                "description": "Create token that will be used to identify the same context  when we redirect the merchant to your application.",
                "operationId": "CreateAuthorizationToken",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAuthorizationTokenRequest"
                            },
                            "example": {
                                "applicationId": "vtex",
                                "returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "71"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Mon, 16 Jul 2018 15:10:44 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "d8f17ed2-ba9f-4f6d-8f8c-52bd425d7a52"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success5"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "applicationId": "vtex",
                                            "token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/authorization/redirect": {
            "get": {
                "tags": [
                    "Configuration Flow"
                ],
                "summary": "Provider Authentication",
                "description": "Use the application of provider for merchant's authentication.\r\n\r\nVTEX will redirect the merchant to your application using the `token` we retrieved earlier.\r\n\r\nYou're expected to have a signup/signin process on your side in order to authenticate the merchant, either as a new or as an existent user.\r\n\r\nAt this point, you can present your terms an conditions, a contract, and ask for merchant's final agreement to use your services.\r\n\r\nFinally, you need to generate an `authorizationCode` that you must concatenate to the `returnUrl` we send earlier.",
                "operationId": "ProviderAuthentication",
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "query",
                        "description": "VTEX application identifier",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "vtex"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "You must generate a token that will be used to identify the same context when we redirect the merchant to your application.",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "{{token}}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {}
                    }
                },
                "deprecated": false
            }
        },
        "/authorization/credentials": {
            "get": {
                "tags": [
                    "Configuration Flow"
                ],
                "summary": "Get Credentials",
                "description": "Get the credentials of merchant.",
                "operationId": "GetCredentials",
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "query",
                        "description": "VTEX application identifier",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "vtex"
                        }
                    },
                    {
                        "name": "authorizationCode",
                        "in": "query",
                        "description": "Code generate by affiliation that will be used to identify the merchant authorization",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "{{authorizationCode}}"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "The Media type of the body of the request. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Media type(s) that is/are acceptable for the response. Default value for payment provider protocol is application/json",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Cache-Control": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Connection": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "keep-alive"
                                    }
                                }
                            },
                            "Content-Length": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "122"
                                    }
                                }
                            },
                            "Date": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Mon, 16 Jul 2018 14:22:51 GMT"
                                    }
                                }
                            },
                            "Expires": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "-1"
                                    }
                                }
                            },
                            "Pragma": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "no-cache"
                                    }
                                }
                            },
                            "Server": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "Microsoft-IIS/8.0"
                                    }
                                }
                            },
                            "X-AspNet-Version": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "4.0.30319"
                                    }
                                }
                            },
                            "X-Powered-By": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "ASP.NET"
                                    }
                                }
                            },
                            "x-vtex-operation-id": {
                                "content": {
                                    "text/plain": {
                                        "schema": {
                                            "type": "string"
                                        },
                                        "example": "187e390e-8cf8-4f42-a376-242f5ef4f740"
                                    }
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Success6"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "applicationId": "vtex",
                                            "appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
                                            "appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "Success": {
                "title": "Success",
                "required": [
                    "paymentMethods"
                ],
                "type": "object",
                "properties": {
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of each payment method implemented."
                    }
                },
                "example": {
                    "paymentMethods": [
                        "Visa",
                        "Mastercard",
                        "Pix",
                        "American Express",
                        "BankInvoice",
                        "Privatelabels",
                        "Promissories"
                    ]
                }
            },
            "Success-Manifest": {
                "title": "Success-Manifest",
                "required": [
                    "paymentMethods",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "paymentMethods": {
                        "type": "array",
                        "description": "Describes each payment method supported by payment provider and exposed its respective metadata.",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "allowsSplit"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Payment method name."
                                },
                                "allowsSplit": {
                                    "type": "string",
                                    "description": "Describes which transaction flow stage the connector should receive payment split data. Accepted values: `onAuthorize`, `onCapture`, `disabled`. Check more details on the [Split Payouts on the Payment Provider Protocol](https://developers.vtex.com/vtex-rest-api/docs/split-payouts-on-payment-provider-protocol) article."
                                }
                            }
                        }
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Describes the customized fields supported by the connector.",
                            "required": [
                                "name",
                                "type"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Custom field name."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Custom field type. Accepted values: `text`, `select.`"
                                },
                                "options": {
                                    "type": "array",
                                    "description": "In case of `select` type, the possible params are `text` and `value`.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "text": {
                                                "type": "string",
                                                "description": "Custom field description."
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Custom field value."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "autoSettleDelay": {
                        "type": "object",
                        "description": "Describes the allowed delay value for the auto settle capture. Accepted values: `minimum` and `maximum` in whole hours (decimals are not allowed). Check more details on the [Custom Auto Capture Feature](https://developers.vtex.com/vtex-rest-api/docs/custom-auto-capture-feature) article.",
                        "required": [
                            "minimum",
                            "maximum"
                        ],
                        "properties": {
                            "minimum": {
                                "type": "string",
                                "description": "Minimum amount of time to auto settle in hours."
                            },
                            "maximum": {
                                "type": "string",
                                "description": "Maximum amount of time to auto settle in hours."
                            }
                        }
                    }
                },
                "example": {
                    "paymentMethods": [
                        {
                            "name": "Visa",
                            "allowsSplit": "onCapture"
                        },
                        {
                            "name": "Pix",
                            "allowsSplit": "disabled"
                        },
                        {
                            "name": "Mastercard",
                            "allowsSplit": "onCapture"
                        },
                        {
                            "name": "American Express",
                            "allowsSplit": "onCapture"
                        },
                        {
                            "name": "BankInvoice",
                            "allowsSplit": "onAuthorize"
                        },
                        {
                            "name": "Privatelabels",
                            "allowsSplit": "disabled"
                        },
                        {
                            "name": "Promissories",
                            "allowsSplit": "disabled"
                        }
                    ],
                    "customFields": [
                        {
                            "name": "Merchant's custom field",
                            "type": "text"
                        },
                        {
                            "name": "Merchant's custom select field",
                            "type": "select",
                            "options": [
                                {
                                    "text": "Field option 1",
                                    "value": "1"
                                },
                                {
                                    "text": "Field option 2",
                                    "value": "2"
                                },
                                {
                                    "text": "Field option 3",
                                    "value": "3"
                                }
                            ]
                        }
                    ]
                }
            },
            "Success-Approved": {
                "title": "Success-Approved",
                "required": [
                    "paymentId",
                    "status",
                    "authorizationId",
                    "tid",
                    "nsu",
                    "acquirer",
                    "delayToAutoSettle",
                    "delayToAutoSettleAfterAntifraud",
                    "delayToCancel"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "VTEX identifier for this payment. The same sent in the request."
                    },
                    "status": {
                        "type": "string",
                        "description": "The Provider's status for this payment. Must be one of three values:\r\n\r\n- `approved`\r\n- `denied`\r\n- `undefined`"
                    },
                    "authorizationId": {
                        "type": "string",
                        "description": "Provider's unique identifier for the authorization. Should be sent when the payment is authorized. In other statuses, it should be absent or `null`."
                    },
                    "bankIssueInvoiceId": {
                        "type": "string",
                        "description": "This field is deprecated, please use `paymentUrl` instead. The bank invoice URL to be presented to the end user."
                    },
                    "paymentUrl": {
                        "type": "string",
                        "description": "When the payment is via bank invoice, this should be the invoice URL to be presented to the user. If the payment requires the redirection of the user, this should be the URL to redirect the user. If neither is the case, then this should be absent."
                    },
                    "paymentAppData": {
                        "type": "object",
                        "description": "Object which indicates that a [Payment App](https://developers.vtex.com/docs/guides/payments-integration-payment-app) is needed to finish the payment. This object contains the data to be used by the Payment App.",
                        "required": [
                            "appName",
                            "payload"
                        ],
                        "properties": {
                            "appName": {
                                "type": "string",
                                "description": "Indicates which VTEX IO app that will handle the payment flow at Checkout."
                            },
                            "payload": {
                                "type": "string",
                                "description": "The payload that will be sent to your app, like a serialized JSON, for example."
                            }
                        }
                    },
                    "identificationNumber": {
                        "type": "string",
                        "description": "The bank invoice unformatted identification number. Should only be present when the payment is made via bank invoice."
                    },
                    "identificationNumberFormatted": {
                        "type": "string",
                        "description": "The bank invoice formatted identification number that will be presented to the end user."
                    },
                    "barCodeImageType": {
                        "type": "string",
                        "description": "The bank invoice barcode image type. For instance, \"i25\" for Brazilian *Boleto Banc\u00E1rio*. Should only be present when the payment is made via bank invoice."
                    },
                    "barCodeImageNumber": {
                        "type": "string",
                        "description": "The bank invoice number to generate a barcode (must follow any regulations/specifications for targeted countries). Should only be present when the payment is made via bank invoice."
                    },
                    "tid": {
                        "type": "string",
                        "description": "Provider's unique identifier for the transaction."
                    },
                    "nsu": {
                        "type": "string",
                        "description": "Provider's unique sequential number for the transaction."
                    },
                    "acquirer": {
                        "type": "string",
                        "description": "Acquirer name (mostly used for card payments)."
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "This field is deprecated, please use `paymentUrl` instead. The URL the end user needs to be redirected to (external authentication, 3DS, etc)."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "delayToAutoSettle": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total time (in seconds) before we make and automatic call to `/settlements` no mater if the payment was approved by merchant's antifraud or not. The maximum time allowed to wait for an auto capture is 604800 seconds (7 days)."
                    },
                    "delayToAutoSettleAfterAntifraud": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total time (in seconds) before we make and automatic call to `/settlements` after merchant's antifraud approval."
                    },
                    "delayToCancel": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Total time (in seconds) to wait for an authorization and make and automatic call to `/cancellations` to cancel the payment. The minimum value is 600 seconds (10 minutes)."
                    },
                    "maxValue": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum value for this payment. This field allows changes to be made to transactions to settle larger amounts as a result of order changes."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "status": "approved",
                    "authorizationId": "AUT123567",
                    "nsu": "NSU987432",
                    "tid": "TID1578324421",
                    "acquirer": "FooBarPayments",
                    "delayToAutoSettle": 432000,
                    "delayToAutoSettleAfterAntifraud": 120,
                    "delayToCancel": 600
                }
            },
            "Fail-BadRequest": {
                "title": "Fail-BadRequest",
                "required": [
                    "status",
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The Provider's status for this payment."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    }
                },
                "example": {
                    "status": "error",
                    "code": "ERR123",
                    "message": "The currency ABC is not supported"
                }
            },
            "CancelPaymentRequest": {
                "title": "CancelPaymentRequest",
                "required": [
                    "paymentId",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "VTEX payment identifier."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "VTEX request identifier."
                    },
                    "authorizationId": {
                        "type": "string",
                        "description": "Payment authorization identifier (in case it was authorized previous to the cancellation request)."
                    },
                    "sandboxMode": {
                        "type": "boolean",
                        "description": "Indicates whether or not this request is being sent from a sandbox environment."
                    },
                    "merchantSettings": {
                        "type": "array",
                        "title": "merchantSettings",
                        "description": "Custom fields (for the given Provider) which the Merchant must fill. Each element of this array is a key-value pair.",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The custom field name."
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The custom field value."
                                }
                            }
                        }
                    }
                },
                "example": {
                    "paymentId": "{{paymentId}}",
                    "requestId": "{{requestId}}"
                }
            },
            "Success1": {
                "title": "Success1",
                "required": [
                    "paymentId",
                    "cancellationId",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "cancellationId": {
                        "type": "string",
                        "description": "Provider's cancellation identifier. If the operation has failed you **MUST** return `null`."
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provider's operation/error code to be logged. Return `cancel-manually` if you do not support this operation, so we can send a notification to the merchant."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "cancellationId": "1231323234234",
                    "code": null,
                    "message": "Successfully cancelled",
                    "requestId": "D12D9B80972C462980F5067A3A126837"
                }
            },
            "Fail-GenericError1": {
                "title": "Fail-GenericError1",
                "required": [
                    "paymentId",
                    "cancellationId",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "cancellationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provider's cancellation identifier. If the operation has failed you **MUST** return `null`."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged. Return `cancel-manually` if you do not support this operation, so we can send a notification to the merchant."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "cancellationId": null,
                    "code": "ERR123",
                    "message": "Cancellation has failed due to an internal error",
                    "requestId": "D12D9B80972C462980F5067A3A126837"
                }
            },
            "Success2": {
                "title": "Success2",
                "required": [
                    "paymentId",
                    "settleId",
                    "value",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "settleId": {
                        "type": "string",
                        "description": "VTEX identifier for this settlement."
                    },
                    "value": {
                        "type": "number",
                        "description": "The amount to be settled."
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provider's operation/error code to be logged."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
                    "value": 57,
                    "code": null,
                    "message": "Successfully settled",
                    "requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
                }
            },
            "Fail-GenericError2": {
                "title": "Fail-GenericError2",
                "required": [
                    "paymentId",
                    "settleId",
                    "value",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "settleId": {
                        "type": "string",
                        "nullable": true,
                        "description": "VTEX identifier for this settlement."
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount to be settled."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "settleId": null,
                    "value": 0,
                    "code": "ERR123",
                    "message": "Settlement has failed due to an internal error",
                    "requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
                }
            },
            "Success3": {
                "title": "Success3",
                "required": [
                    "paymentId",
                    "refundId",
                    "value",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "refundId": {
                        "type": "string",
                        "description": "Provider's refund identifier. If the operation has failed you **MUST** return `null`."
                    },
                    "value": {
                        "type": "number",
                        "description": "The amount that was refunded. If the operation has failed you **MUST** return `0`."
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provider's operation/error code to be logged. Return `refund-manually` if you do not support this operation, so we can send a notification to the merchant."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
                    "value": 57,
                    "code": null,
                    "message": "Successfully refunded",
                    "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
                }
            },
            "Fail-GenericError3": {
                "title": "Fail-GenericError3",
                "required": [
                    "paymentId",
                    "refundId",
                    "value",
                    "code",
                    "message",
                    "requestId"
                ],
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "refundId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Provider's refund identifier. If the operation has failed you **MUST** return `null`."
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The amount to be settled."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged. Return `refund-manually` if you do not support this operation, so we can send a notification to the merchant."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    }
                },
                "example": {
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "refundId": null,
                    "value": 0,
                    "code": "ERR123",
                    "message": "Refund has failed due to an internal error",
                    "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
                }
            },
            "SettlePayment": {
                "title": "SettlePayment",
                "required": [
                    "transactionId",
                    "requestId",
                    "paymentId",
                    "value",
                    "authorizationId",
                    "tid"
                ],
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "VTEX identifier for the transaction related to this payment."
                    },
                    "requestId": {
                        "type": "string",
                        "description": "The unique identifier for this request to ensure its idempotency."
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "VTEX identifier for this payment."
                    },
                    "value": {
                        "type": "number",
                        "description": "The amount to be settled."
                    },
                    "authorizationId": {
                        "type": "string",
                        "description": "The authorization identifier for this payment."
                    },
                    "tid": {
                        "type": "string",
                        "description": "Provider's unique identifier for the transaction."
                    },
                    "recipients": {
                        "type": "array",
                        "description": "Array containing the information for the recipients of this payment in case the Payment Provider is configured to allow the split of payments.",
                        "items": {
                            "title": "Recipients",
                            "required": [
                                "id",
                                "name",
                                "documentType",
                                "document",
                                "role",
                                "amount"
                            ],
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Recipient identifier."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Recipient name."
                                },
                                "documentType": {
                                    "type": "string",
                                    "description": "Recipient document type."
                                },
                                "document": {
                                    "type": "string",
                                    "description": "Recipient document number."
                                },
                                "role": {
                                    "type": "string",
                                    "description": "Indicates if the recipient is the seller or the marketplace."
                                },
                                "chargeProcessingFee": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not this recipient is charged for processing fees."
                                },
                                "chargebackLiable": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not this recipient is liable to chargebacks."
                                },
                                "amount": {
                                    "type": "number",
                                    "description": "Amount due to this recipient."
                                },
                                "commissionAmount": {
                                    "type": "number",
                                    "description": "Amount of commission due to the marketplace."
                                }
                            }
                        }
                    },
                    "sandboxMode": {
                        "type": "boolean",
                        "description": "Indicates whether or not this request is being sent from a sandbox environment."
                    },
                    "merchantSettings": {
                        "type": "array",
                        "title": "merchantSettings",
                        "description": "Custom fields (for the given Provider) which the Merchant must fill. Each element of this array is a key-value pair.",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The custom field name."
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The custom field value."
                                }
                            }
                        }
                    }
                },
                "example": {
                    "transactionId": "D3AA1FC8372E430E8236649DB5EBD08E",
                    "requestId": "2019-02-04T22:53:42-40000",
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "value": 45.00,
                    "authorizationId": "5784589",
                    "tid": "5784589",
                    "recipients": [
                        {
                            "id": "mystore",
                            "name": "Company XPTO",
                            "documentType": "CNPJ",
                            "document": "05314972000174",
                            "role": "marketplace",
                            "chargeProcessingFee": true,
                            "chargebackLiable": true,
                            "amount": 7.2
                        },
                        {
                            "id": "sellerA",
                            "name": "Company ABC",
                            "documentType": "CNPJ",
                            "document": "24830098000172",
                            "role": "seller",
                            "chargeProcessingFee": false,
                            "chargebackLiable": false,
                            "amount": 37.8,
                            "commissionAmount": 7.2
                        }
                    ]
                }
            },
            "RefundPayment": {
                "title": "RefundPayment",
                "required": [
                    "requestId",
                    "settleId",
                    "paymentId",
                    "tid",
                    "value",
                    "transactionId"
                ],
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string",
                        "description": "The unique identifier for this request to ensure its idempotency."
                    },
                    "settleId": {
                        "type": "string",
                        "description": "Provider's settlement identifier."
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "VTEX identifier for this payment."
                    },
                    "tid": {
                        "type": "string",
                        "description": "Provider's unique identifier for the transaction."
                    },
                    "value": {
                        "type": "number",
                        "description": "The amount to be refunded."
                    },
                    "transactionId": {
                        "type": "string",
                        "description": "VTEX identifier for this transaction."
                    },
                    "recipients": {
                        "type": "array",
                        "description": "Array containing the information for the recipients of this payment in case the Payment Provider is configured to allow the split of payments.",
                        "items": {
                            "title": "Recipients",
                            "required": [
                                "id",
                                "name",
                                "documentType",
                                "document",
                                "role",
                                "amount"
                            ],
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Recipient identifier."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Recipient name."
                                },
                                "documentType": {
                                    "type": "string",
                                    "description": "Recipient document type."
                                },
                                "document": {
                                    "type": "string",
                                    "description": "Recipient document number."
                                },
                                "role": {
                                    "type": "string",
                                    "description": "Indicates if the recipient is the seller or the marketplace."
                                },
                                "chargeProcessingFee": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not this recipient is charged for processing fees."
                                },
                                "chargebackLiable": {
                                    "type": "boolean",
                                    "description": "Indicates whether or not this recipient is liable to chargebacks."
                                },
                                "amount": {
                                    "type": "number",
                                    "description": "Amount due to this recipient."
                                }
                            }
                        }
                    },
                    "sandboxMode": {
                        "type": "boolean",
                        "description": "Indicates whether or not this request is being sent from a sandbox environment."
                    },
                    "merchantSettings": {
                        "type": "array",
                        "title": "merchantSettings",
                        "description": "Custom fields (for the given Provider) which the Merchant must fill. Each element of this array is a key-value pair.",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The custom field name."
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The custom field value."
                                }
                            }
                        }
                    }
                },
                "example": {
                    "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
                    "settleId": "Q5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "tid": "10022005181543584603",
                    "value": 20.00,
                    "transactionId": "D3AA1FC8372E430E8236649DB5EBD08E",
                    "recipients": [
                        {
                            "id": "mystore",
                            "name": "Company XPTO",
                            "documentType": "CNPJ",
                            "document": "05314972000174",
                            "role": "marketplace",
                            "amount": 3.2
                        },
                        {
                            "id": "sellerA",
                            "name": "Company ABC",
                            "documentType": "CNPJ",
                            "document": "24830098000172",
                            "role": "seller",
                            "amount": 16.8
                        }
                    ]
                }
            },
            "InboundRequest_BETA_Request": {
                "title": "InboundRequest(BETA)Request",
                "required": [
                    "requestId",
                    "transactionId",
                    "paymentId",
                    "authorizationId",
                    "tid",
                    "requestData"
                ],
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string",
                        "description": "The unique identifier for this request to ensure its idempotency."
                    },
                    "transactionId": {
                        "type": "string",
                        "description": "VTEX transaction ID related to this payment."
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "VTEX payment ID from this payment."
                    },
                    "authorizationId": {
                        "type": "string",
                        "description": "Provider's unique identifier for the authorization."
                    },
                    "tid": {
                        "type": "string",
                        "description": "Provider's unique identifier for the transaction."
                    },
                    "requestData": {
                        "$ref": "#/components/schemas/RequestData"
                    },
                    "merchantSettings": {
                        "type": "array",
                        "title": "merchantSettings",
                        "description": "Custom fields (for the given Provider) which the Merchant must fill. Each element of this array is a key-value pair.",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The custom field name."
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The custom field value."
                                }
                            }
                        }
                    }
                },
                "example": {
                    "requestId": "{{requestId}}",
                    "transactionId": "{{transactionId}}",
                    "paymentId": "{{paymentId}}",
                    "authorizationId": "{{authorizationId}}",
                    "tid": "{{tid}}",
                    "requestData": {
                        "body": "{{originalRequestBody}}"
                    }
                }
            },
            "RequestData": {
                "title": "RequestData",
                "required": [
                    "body"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string"
                    }
                },
                "example": {
                    "body": "{{originalRequestBody}}"
                }
            },
            "Success4": {
                "title": "Success4",
                "required": [
                    "requestId",
                    "paymentId",
                    "responseData"
                ],
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string",
                        "description": "The same `requestId` sent in the request."
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "The same `paymentId` sent in the request."
                    },
                    "code": {
                        "type": "string",
                        "description": "Provider's operation/error code to be logged."
                    },
                    "message": {
                        "type": "string",
                        "description": "Provider's operation/error message to be logged."
                    },
                    "responseData": {
                        "$ref": "#/components/schemas/ResponseData"
                    }
                },
                "example": {
                    "requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
                    "paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
                    "responseData": {
                        "statusCode": 200,
                        "contentType": "application/json",
                        "content": "{\"myAttribute\":\"anyValue\"}"
                    }
                }
            },
            "ResponseData": {
                "title": "ResponseData",
                "required": [
                    "statusCode",
                    "contentType",
                    "content"
                ],
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Your desired status code."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "Your desired content-type."
                    },
                    "content": {
                        "type": "string",
                        "description": "Your desired content body."
                    }
                },
                "example": {
                    "statusCode": 200,
                    "contentType": "application/json",
                    "content": "{\"myAttribute\":\"anyValue\"}"
                }
            },
            "CreateAuthorizationTokenRequest": {
                "title": "CreateAuthorizationTokenRequest",
                "required": [
                    "applicationId",
                    "returnUrl"
                ],
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "VTEX application identifier."
                    },
                    "returnUrl": {
                        "type": "string",
                        "description": "The base URL you need to use to form the final URL when redirecting the merchant back to VTEX."
                    }
                },
                "example": {
                    "applicationId": "vtex",
                    "returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
                }
            },
            "Success5": {
                "title": "Success5",
                "required": [
                    "applicationId",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The same `applicationId` sent in the request."
                    },
                    "token": {
                        "type": "string",
                        "description": "You must generate a token that will be used to identify the same context when we redirect the merchant to your application."
                    }
                },
                "example": {
                    "applicationId": "vtex",
                    "token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
                }
            },
            "Success6": {
                "title": "Success6",
                "required": [
                    "applicationId",
                    "appKey",
                    "appToken"
                ],
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The same `applicationId` sent in the request."
                    },
                    "appKey": {
                        "type": "string",
                        "description": "The value we will send in the header `X-VTEX-API-AppKey` for the payment flow."
                    },
                    "appToken": {
                        "type": "string",
                        "description": "The value we will send in the header `X-VTEX-API-AppToken` for the payment flow."
                    }
                },
                "example": {
                    "applicationId": "vtex",
                    "appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
                    "appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
                }
            }
        },
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            }
        }
    },
    "tags": [
        {
            "name": "Payment Flow",
            "description": "Here we describe each operation you need to implement for the payment flow."
        },
        {
            "name": "Configuration Flow",
            "description": "Here we describe each operation you need to implement to enable the optional configuration flow.\n\nThis is an easier way to allow VTEX merchants to enable your connector, and be ready to use it without having to copy/paste any credentials (`AppKey`/`AppToken`)."
        }
    ],
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ]
}