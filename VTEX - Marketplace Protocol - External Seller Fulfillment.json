{
    "openapi": "3.0.0",
    "info": {
        "title": "Marketplace Protocol",
        "description": "\r\nThe _Marketplace Protocol_ is a set of API requests and definitions to help you integrate external sellers into a VTEX marketplace as well as external marketplaces into VTEX sellers.\r\n\r\n## External Seller\r\n\r\nHere you will find the endpoints involved in the integration between a VTEX marketplace and an external seller. Note that some of these requests are typically sent by the seller while others are received.\r\n\r\n| **Request** | **From** | **To** |\r\n|-|-|-|\r\n| [Fulfillment simulation](https://developers.vtex.com/vtex-rest-api/reference/fulfillment-simulation) | Marketplace | Seller |\r\n| [Order placement](https://developers.vtex.com/vtex-rest-api/reference/order-placement) | Marketplace | Seller |\r\n| [Authorize fulfillment](https://developers.vtex.com/vtex-rest-api/reference/authorize-fulfillment) | Marketplace | Seller |\r\n| [Marketplace order cancellation](https://developers.vtex.com/vtex-rest-api/reference/marketplace-order-cancellation) | Marketplace | Seller |\r\n| [Send invoice](https://developers.vtex.com/vtex-rest-api/reference/send-invoice) | Seller | Marketplace |\r\n| [Send tracking information](https://developers.vtex.com/vtex-rest-api/reference/send-tracking-information) | Seller      | Marketplace |\r\n| [Update tracking status](https://developers.vtex.com/vtex-rest-api/reference/update-tracking-status) | Seller | Marketplace |\r\n| [Cancel order in marketplace](https://developers.vtex.com/vtex-rest-api/reference/cancel-order-in-marketplace) | Seller | Marketplace |\r\n\r\nFor a detailed explanation of the steps required to develop a custom connector to sell products from an external seller in your storefront, check out our complete [External Seller Integration Guide](https://developers.vtex.com/docs/guides/external-seller-integration-guide).\r\n\r\n\r\n## External Marketplace\r\n\r\nIn this section, you will find the endpoints involved in the VTEX integration between an external marketplace and a VTEX seller.\r\n\r\n\r\n| **Request** | **From** | **To** |\r\n|-|-|-|\r\n| [VTEX Mapper Registration](https://developers.vtex.com/vtex-rest-api/reference/vtex-mapper-registration) | External marketplace | VTEX system |\r\n| [Send Category Mapping to VTEX Mapper](https://developers.vtex.com/vtex-rest-api/reference/send-category-mapping-to-vtex-mapper) |  External marketplace | VTEX system |\r\n| [Authorize fulfillment](https://developers.vtex.com/vtex-rest-api/reference/authorize-fulfillment) | Marketplace | Seller |\r\n| [Place fulfillment order](https://developers.vtex.com/vtex-rest-api/reference/place-fulfillment-order)   | External marketplace | VTEX Seller |\r\n| [Authorize dispatch for fulfillment order](https://developers.vtex.com/vtex-rest-api/reference/authorize-dispatch-for-fulfillment-order) | External marketplace | VTEX Seller |\r\n\r\n\r\nFor a detailed explanation of the steps required to develop a custom connector to become an external marketplace for VTEX sellers, check out our complete [External Marketplace Integration Guide](https://developers.vtex.com/docs/guides/external-marketplace-integration-guide).",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://{fulfillmentEndpoint}",
            "description": "Fulfillment Endpoint",
            "variables": {
                "fulfillmentEndpoint": {
                    "description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
                    "default": "{fulfillmentEndpoint}"
                }
            }
        }
    ],
    "paths": {
        "/pvt/orderForms/simulation": {
            "post": {
                "tags": [
                    "External Seller"
                ],
                "summary": "Fulfillment simulation - External Seller",
                "description": "This endpoint may be called upon by VTEX for fulfillment simulation in the external seller different contexts. See examples below.\n\nWhen a [price](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price) or [inventory](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory) notification request returns a response with status `200 OK`, it means that the SKU already exists in the marketplace. Whenever this happens, the marketplace will call the seller to get two updated information about the SKU: Price and Inventory.\n\nThe seller needs to have an endpoint implemented in order to receive this call and send a response containing the requested information to the marketplace. We call it the Fulfillment Simulation endpoint.\n\nIf the seller wishes to include other parameters in this call (like account name, or [sales channel](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV) ID), this should be done within their {fulfillmentEndpoint}. This path is then inserted in the marketplace's VTEX admin when [configuring a seller](https://help.vtex.com/en/tutorial/configurando-seller--tutorials_392). \n\nThe marketplace will send an object containing an array of items. The seller must use this list to get the updated information about the referred SKUs and send them back to the marketplace, following the response format explained in the API Reference. \n\nThis call is also applied in the Storefront simulation scenario, in which case the request from VTEX does not send the paramenters `country` and `postalCode`. \nThe call's payload can be adapted into two scenarios: \n\n- **Displaying items in the storefront**: the address information can be nulled in the request, since they are not mandatory data for this context.   \n- **Making a shopping cart simulation during checkout**: address information must be sent, since this data is needed to calculate freight values. If the address information (including `postalCode` and `country`) is not sent through the call, VTEX interprets the stock balance as zero. Without a valid stock balance, the seller will not be shown as an option during checkout. \n  \n## Request body example - Indexing simulation\n\n```\n{\n    \"items\": [\n      {\n        \"id\": \"7908010136043\",\n        \"quantity\": 1,\n        \"seller\": \"1\",\n      }\n    ],\n    \"isCheckedIn\": false,\n  }\n``` \n## Request body example - Checkout simulation\n\n```\n{\n    \"items\": [\n      {\n        \"id\": \"7908010136043\",\n        \"quantity\": 1,\n        \"seller\": \"1\",\n      }\n    ],\n    \"postalCode\": \"22270-030\",\n    \"country\": \"BRA\",\n  }\n```",
                "operationId": "fulfillment-simulation",
                "parameters": [
                    {
                        "name": "fulfillmentEndpoint",
                        "in": "path",
                        "description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "marketplaceexample.externalseller.com"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "postalCode"
                                ],
                                "type": "object",
                                "properties": {
                                    "postalCode": {
                                        "type": "string",
                                        "description": "Delivery address postal code. This field is mandatory for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                        "example": "12345678"
                                    },
                                    "geoCoordinates": {
                                        "type": "array",
                                        "description": "Geographic coordinates of the delivery address. This may be used instead of the postalCode, in case the marketplace is configured to accept geolocation. Example of value: `[-22.9443504,-43.1825635]`.",
                                        "items": {
                                            "type": "string",
                                            "example": "00.00000000"
                                        }
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "ISO 3-digit code of the country where the delivery address is located.  This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                        "example": "USA"
                                    },
                                    "items": {
                                        "type": "array",
                                        "description": "Array containing the cart items.",
                                        "items": {
                                            "$ref": "#/components/schemas/fulfillmentItem"
                                        }
                                    },
                                    "sc": {
                                        "type": "string",
                                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created.",
                                        "example": "1"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response body",
                                    "description": "Expected response body of fulfillment simulation",
                                    "type": "object",
                                    "required": [
                                        "country",
                                        "items",
                                        "logisticsInfo",
                                        "postalCode"
                                    ],
                                    "example": {
                                        "country": "BRA",
                                        "items": [
                                            {
                                                "id": "2000037",
                                                "listPrice": 67203,
                                                "measurementUnit": "un",
                                                "merchantName": "mySeller1",
                                                "offerings": [
                                                    {
                                                        "type": "Warranty",
                                                        "id": "5",
                                                        "name": "1 year warranty",
                                                        "price": 10000
                                                    }
                                                ],
                                                "price": 67203,
                                                "priceTags": [],
                                                "priceValidUntil": "2014-03-01T22:58:28.143",
                                                "quantity": 1,
                                                "requestIndex": 0,
                                                "seller": "1",
                                                "unitMultiplier": 1
                                            }
                                        ],
                                        "logisticsInfo": [
                                            {
                                                "itemIndex": 0,
                                                "quantity": 1,
                                                "shipsTo": [
                                                    "BRA"
                                                ],
                                                "slas": [
                                                    {
                                                        "id": "Curbside pickup",
                                                        "deliveryChannel": "pickup-in-point",
                                                        "name": "Curbside pickup",
                                                        "shippingEstimate": "0bd",
                                                        "price": 0,
                                                        "availableDeliveryWindows": [
                                                            {
                                                                "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                "price": 0
                                                            }
                                                        ],
                                                        "pickupStoreInfo": {
                                                            "isPickupStore": true,
                                                            "friendlyName": "Santa Felicidade",
                                                            "address": {
                                                                "addressType": "pickup",
                                                                "receiverName": "Juliana",
                                                                "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                "postalCode": "82320-040",
                                                                "city": "Curitiba",
                                                                "state": "PR",
                                                                "country": "BRA",
                                                                "street": "Rua Domingos Strapasson",
                                                                "number": "100",
                                                                "neighborhood": "Santa Felicidade",
                                                                "complement": "Loja 10",
                                                                "reference": "Next to the unicorn statue",
                                                                "geoCoordinates": [
                                                                    49.334934,
                                                                    25.401705
                                                                ]
                                                            },
                                                            "additionalInfo": ""
                                                        }
                                                    }
                                                ],
                                                "stockBalance": 199,
                                                "deliveryChannels": [
                                                    {
                                                        "id": "delivery",
                                                        "stockBalance": 179
                                                    },
                                                    {
                                                        "id": "pickup-in-point",
                                                        "stockBalance": 20
                                                    }
                                                ]
                                            }
                                        ],
                                        "postalCode": "80250000"
                                    },
                                    "properties": {
                                        "country": {
                                            "title": "Country",
                                            "description": "ISO 3-digit code of the country where the delivery address is located. If you don’t want to send it, use the value null.",
                                            "type": "string",
                                            "example": "BRA"
                                        },
                                        "items": {
                                            "title": "Items",
                                            "description": "Contains the data about each SKU in the cart.",
                                            "type": "array",
                                            "items": {
                                                "title": "Items",
                                                "description": "Contains the data about each SKU in the cart.",
                                                "type": "object",
                                                "required": [
                                                    "id",
                                                    "listPrice",
                                                    "measurementUnit",
                                                    "merchantName",
                                                    "offerings",
                                                    "price",
                                                    "priceTags",
                                                    "priceValidUntil",
                                                    "quantity",
                                                    "requestIndex",
                                                    "seller",
                                                    "unitMultiplier"
                                                ],
                                                "properties": {
                                                    "id": {
                                                        "title": "id",
                                                        "description": "SKU ID",
                                                        "type": "string",
                                                        "example": "2000037"
                                                    },
                                                    "listPrice": {
                                                        "title": "listPrice",
                                                        "description": "List price. It’s the amount presented to the customer as a “previous” price that has been lowered due to a discount. Don’t separate the decimal places. The last two digits are the cents.",
                                                        "type": "integer",
                                                        "example": 67203
                                                    },
                                                    "measurementUnit": {
                                                        "title": "measurementUnit",
                                                        "description": "SKU’s measurement unit.",
                                                        "type": "string",
                                                        "example": "un"
                                                    },
                                                    "merchantName": {
                                                        "title": "merchantName",
                                                        "description": "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [​​Payments in VTEX marketplaces](https://help.vtex.com/en/tutorial/payments-in-vtex-marketplaces--2kYOfWCZYweJkYl18bw9yD) article to know more.",
                                                        "type": "string",
                                                        "example": "mySeller1"
                                                    },
                                                    "offerings": {
                                                        "title": "offerings",
                                                        "description": "Services that may be offered for this SKU. example are the assembly of a piece of furniture or warranty. In case these information are sent, the following fields are mandatory. If you don’t want to send it, use an empty array.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "offerings",
                                                            "description": "Services that may be offered for this SKU. example are the assembly of a piece of furniture or warranty. In case these information are sent, the following fields are mandatory. If you don’t want to send it, use an empty array.",
                                                            "type": "object",
                                                            "required": [
                                                                "type",
                                                                "id",
                                                                "name",
                                                                "price"
                                                            ],
                                                            "properties": {
                                                                "type": {
                                                                    "title": "type",
                                                                    "description": "Type of the service.",
                                                                    "type": "string",
                                                                    "example": "Warranty"
                                                                },
                                                                "id": {
                                                                    "title": "id",
                                                                    "description": "Service ID.",
                                                                    "type": "string",
                                                                    "example": "5"
                                                                },
                                                                "name": {
                                                                    "title": "name",
                                                                    "description": "Service name.",
                                                                    "type": "string",
                                                                    "example": "1 year warranty"
                                                                },
                                                                "price": {
                                                                    "title": "price",
                                                                    "description": "Service price. The last two digits are the cents.",
                                                                    "type": "integer",
                                                                    "example": 10000
                                                                }
                                                            }
                                                        },
                                                        "example": [
                                                            {
                                                                "type": "Warranty",
                                                                "id": "5",
                                                                "name": "1 year warranty",
                                                                "price": 10000
                                                            }
                                                        ]
                                                    },
                                                    "price": {
                                                        "title": "price",
                                                        "description": "Actual selling price of the SKU. Don’t separate the decimal places. The last two digits are the cents.",
                                                        "type": "integer",
                                                        "example": 67203
                                                    },
                                                    "priceTags": {
                                                        "title": "priceTags",
                                                        "description": "List with the promotions applied to the SKU.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "priceTags",
                                                            "description": "Promotions applied to the SKU.",
                                                            "type": "string",
                                                            "example": "promotion 1"
                                                        }
                                                    },
                                                    "priceValidUntil": {
                                                        "title": "priceValidUntil",
                                                        "description": "Expiration date of the SKU price. Example: `2014-03-01T22:58:28.143`. In case you don’t want to send it, use the value null.",
                                                        "type": "string",
                                                        "example": "2014-03-01T22:58:28.143",
                                                        "nullable": true
                                                    },
                                                    "quantity": {
                                                        "title": "quantity",
                                                        "description": "Quantity of the item. The seller should send the quantity that was indicated in the request, or the maximum quantity possible.",
                                                        "type": "integer",
                                                        "default": 0,
                                                        "example": 1
                                                    },
                                                    "requestIndex": {
                                                        "title": "requestIndex",
                                                        "description": "Position of this item in the original array (request).",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "seller": {
                                                        "title": "seller",
                                                        "description": "ID of the seller as registered in VTEX. You should send the same value that came in the request.",
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "unitMultiplier": {
                                                        "title": "unitMultiplier",
                                                        "description": "SKU unit multiplier. The default value is 1.",
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                }
                                            },
                                            "example": [
                                                {
                                                    "id": "2000037",
                                                    "listPrice": 67203,
                                                    "measurementUnit": "un",
                                                    "merchantName": "mySeller1",
                                                    "offerings": [
                                                        {
                                                            "type": "Warranty",
                                                            "id": "5",
                                                            "name": "1 year warranty",
                                                            "price": 10000
                                                        }
                                                    ],
                                                    "price": 67203,
                                                    "priceTags": [],
                                                    "priceValidUntil": "2014-03-01T22:58:28.143",
                                                    "quantity": 1,
                                                    "requestIndex": 0,
                                                    "seller": "1",
                                                    "unitMultiplier": 1
                                                }
                                            ]
                                        },
                                        "logisticsInfo": {
                                            "title": "logisticsInfo",
                                            "description": "Array that contains the data regarding the delivery methods and stock for each item. If all products are unavailable, this field should return empty.",
                                            "type": "array",
                                            "items": {
                                                "title": "A Schema",
                                                "description": "An explanation about the purpose of this instance.",
                                                "type": "object",
                                                "required": [
                                                    "itemIndex",
                                                    "quantity",
                                                    "shipsTo",
                                                    "slas",
                                                    "stockBalance",
                                                    "deliveryChannels"
                                                ],
                                                "properties": {
                                                    "itemIndex": {
                                                        "title": "itemIndex",
                                                        "description": "Position of this item in the original array, i.e., in the array that came with the request. This index is what identifies which SKU you are referring to for each object inside the logisticsInfo.",
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "quantity": {
                                                        "title": "quantity",
                                                        "description": "Quantity of the item. The seller should send the quantity that was indicated in the request, or the maximum quantity possible.",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "shipsTo": {
                                                        "title": "shipsTo",
                                                        "description": "ISO 3-digit code of the countries to where the SKU is delivered.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "shipsTo",
                                                            "description": "Array of country codes",
                                                            "type": "string",
                                                            "example": "BRA"
                                                        },
                                                        "example": [
                                                            "BRA",
                                                            "BOL"
                                                        ]
                                                    },
                                                    "slas": {
                                                        "title": "slas",
                                                        "description": "Contains the available delivery methods.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "slas",
                                                            "description": "Object with delivery methods information.",
                                                            "type": "object",
                                                            "required": [
                                                                "id",
                                                                "deliveryChannel",
                                                                "name",
                                                                "price",
                                                                "shippingEstimate",
                                                                "availableDeliveryWindows",
                                                                "pickupStoreInfo"
                                                            ],
                                                            "properties": {
                                                                "id": {
                                                                    "title": "id",
                                                                    "description": "Identifier of the delivery method.",
                                                                    "type": "string",
                                                                    "example": "Curbside pickup"
                                                                },
                                                                "deliveryChannel": {
                                                                    "title": "deliveryChannel",
                                                                    "description": "Type of delivery channel. The values that are possible are: `pickup-in-point` for pickup point and `delivery` for regular delivery.",
                                                                    "type": "string",
                                                                    "example": "pickup-in-point"
                                                                },
                                                                "name": {
                                                                    "title": "name",
                                                                    "description": "Name of the delivery method.",
                                                                    "type": "string",
                                                                    "example": "Curbside pickup"
                                                                },
                                                                "price": {
                                                                    "title": "price",
                                                                    "description": "Delivery price. The two last digits are the cents.",
                                                                    "type": "integer",
                                                                    "example": 846
                                                                },
                                                                "shippingEstimate": {
                                                                    "title": "shippingEstimate",
                                                                    "description": "Time estimated for the delivery. Possible suffixes are `bd` for *business day* , `h` for *hours*, and `m` for *minutes*.",
                                                                    "type": "string",
                                                                    "example": "19bd"
                                                                },
                                                                "availableDeliveryWindows": {
                                                                    "title": "availableDeliveryWindows",
                                                                    "description": "Contains the delivery windows available for the SLA.",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "title": "availableDeliveryWindows",
                                                                        "description": "Object with delivery windows information.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "startDateUtc",
                                                                            "endDateUtc",
                                                                            "price"
                                                                        ],
                                                                        "properties": {
                                                                            "startDateUtc": {
                                                                                "title": "startDateUtc",
                                                                                "description": "Start date of the delivery window.",
                                                                                "type": "string",
                                                                                "example": "2013-02-04T08:00:00+00:00"
                                                                            },
                                                                            "endDateUtc": {
                                                                                "title": "endDateUtc",
                                                                                "description": "End date of the delivery window.",
                                                                                "type": "string",
                                                                                "example": "2013-02-04T13:00:00+00:00"
                                                                            },
                                                                            "price": {
                                                                                "title": "price",
                                                                                "description": "Extra price for scheduled delivery. The last two digits are the cents.",
                                                                                "type": "integer",
                                                                                "example": 0
                                                                            }
                                                                        },
                                                                        "example": {
                                                                            "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                            "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                            "price": 0
                                                                        }
                                                                    },
                                                                    "example": [
                                                                        {
                                                                            "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                            "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                            "price": 0
                                                                        },
                                                                        {
                                                                            "startDateUtc": "2014-02-04T08:00:00+00:00",
                                                                            "endDateUtc": "2014-02-04T13:00:00+00:00",
                                                                            "price": 100
                                                                        }
                                                                    ]
                                                                },
                                                                "pickupStoreInfo": {
                                                                    "title": "pickupStoreInfo",
                                                                    "description": "Contains the data about the pickup point. If you don’t want to send this, use the value `null`.",
                                                                    "type": "object",
                                                                    "nullable": true,
                                                                    "required": [
                                                                        "isPickupStore",
                                                                        "friendlyName",
                                                                        "address",
                                                                        "additionalInfo"
                                                                    ],
                                                                    "properties": {
                                                                        "isPickupStore": {
                                                                            "title": "isPickupStore",
                                                                            "description": "`true` if it is a pickup point.",
                                                                            "type": "boolean",
                                                                            "example": true
                                                                        },
                                                                        "friendlyName": {
                                                                            "title": "friendlyName",
                                                                            "description": "Friendly name of the pickup point.",
                                                                            "type": "string",
                                                                            "example": "Store ABC"
                                                                        },
                                                                        "address": {
                                                                            "title": "address",
                                                                            "description": "Address data of the pickup point.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "addressType",
                                                                                "receiverName",
                                                                                "addressId",
                                                                                "postalCode",
                                                                                "city",
                                                                                "state",
                                                                                "country",
                                                                                "street",
                                                                                "number",
                                                                                "neighborhood",
                                                                                "complement",
                                                                                "reference",
                                                                                "geoCoordinates"
                                                                            ],
                                                                            "properties": {
                                                                                "addressType": {
                                                                                    "title": " addressType",
                                                                                    "description": "The possible value is pickup.",
                                                                                    "type": "string",
                                                                                    "example": "pickup"
                                                                                },
                                                                                "receiverName": {
                                                                                    "title": "receiverName",
                                                                                    "description": "Name of the person who will receive the product. May be sent as `null`.",
                                                                                    "type": "string",
                                                                                    "example": "Juliana",
                                                                                    "nullable": true
                                                                                },
                                                                                "addressId": {
                                                                                    "title": "addressId",
                                                                                    "description": "Identifies the pickup point.",
                                                                                    "type": "string",
                                                                                    "example": "548304ed-dd40-4416-b12b-4b32bfa7b1e0"
                                                                                },
                                                                                "postalCode": {
                                                                                    "title": "postalCode",
                                                                                    "description": "Postal code of the pickup point. This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                                                                    "type": "string",
                                                                                    "example": "82320-040"
                                                                                },
                                                                                "city": {
                                                                                    "title": "city",
                                                                                    "description": "Pickup point's city.",
                                                                                    "type": "string",
                                                                                    "example": "Rio de Janeiro"
                                                                                },
                                                                                "state": {
                                                                                    "title": "state",
                                                                                    "description": "Pickup point's state.",
                                                                                    "type": "string",
                                                                                    "example": "RJ"
                                                                                },
                                                                                "country": {
                                                                                    "title": "country",
                                                                                    "description": "3-digit ISO code of the country where the pickup point is located.",
                                                                                    "type": "string",
                                                                                    "example": "BRA"
                                                                                },
                                                                                "street": {
                                                                                    "title": "street",
                                                                                    "description": "Street where the pickup point is located.",
                                                                                    "type": "string",
                                                                                    "example": "Rua Praia de Botafogo"
                                                                                },
                                                                                "number": {
                                                                                    "title": "number",
                                                                                    "description": "Address number of the pickup point.",
                                                                                    "type": "string",
                                                                                    "example": "100"
                                                                                },
                                                                                "neighborhood": {
                                                                                    "title": "neighborhood",
                                                                                    "description": "Neighborhood where the pickup point is located.",
                                                                                    "type": "string",
                                                                                    "example": "Botafogo"
                                                                                },
                                                                                "complement": {
                                                                                    "title": "complement",
                                                                                    "description": "Complement of the pickup point address.",
                                                                                    "type": "string",
                                                                                    "example": "2nd floor"
                                                                                },
                                                                                "reference": {
                                                                                    "title": "reference",
                                                                                    "description": "A reference for the pickup point address. ",
                                                                                    "type": "string",
                                                                                    "example": "Right next to the Unicorn statue.",
                                                                                    "nullable": true
                                                                                },
                                                                                "geoCoordinates": {
                                                                                    "title": "geoCoordinates",
                                                                                    "description": "Contains the geographic coordinates of the pickup point.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "title": "geoCoordinates",
                                                                                        "description": "Contains the geographic coordinates of the pickup point.",
                                                                                        "type": "number",
                                                                                        "example": 25.401705
                                                                                    },
                                                                                    "example": [
                                                                                        -49.334934,
                                                                                        25.401705
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "example": {
                                                                                "addressType": "pickup",
                                                                                "receiverName": "Juliana",
                                                                                "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                                "postalCode": "82320-040",
                                                                                "city": "Curitiba",
                                                                                "state": "PR",
                                                                                "country": "BRA",
                                                                                "street": "Rua Domingos Strapasson",
                                                                                "number": "100",
                                                                                "neighborhood": "Santa Felicidade",
                                                                                "complement": "Loja 10",
                                                                                "reference": "Right next to the Unicorn statue.",
                                                                                "geoCoordinates": [
                                                                                    49.334934,
                                                                                    25.401705
                                                                                ]
                                                                            }
                                                                        },
                                                                        "additionalInfo": {
                                                                            "title": "additionalInfo",
                                                                            "description": "Description or extra information about the pickup point.",
                                                                            "type": "string",
                                                                            "example": "Pick up your order at the cashier."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "isPickupStore": true,
                                                                        "friendlyName": "Santa Felicidade",
                                                                        "address": {
                                                                            "addressType": "pickup",
                                                                            "receiverName": "Juliana",
                                                                            "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                            "postalCode": "82320-040",
                                                                            "city": "Curitiba",
                                                                            "state": "PR",
                                                                            "country": "BRA",
                                                                            "street": "Rua Domingos Strapasson",
                                                                            "number": "100",
                                                                            "neighborhood": "Santa Felicidade",
                                                                            "complement": "Loja 10",
                                                                            "reference": "Right next to the Unicorn statue.",
                                                                            "geoCoordinates": [
                                                                                49.334934,
                                                                                25.401705
                                                                            ]
                                                                        },
                                                                        "additionalInfo": ""
                                                                    }
                                                                }
                                                            },
                                                            "example": {
                                                                "id": "Curbside pickup",
                                                                "deliveryChannel": "pickup-in-point",
                                                                "name": "Curbside pickup",
                                                                "shippingEstimate": "0bd",
                                                                "price": 0,
                                                                "availableDeliveryWindows": [
                                                                    {
                                                                        "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                        "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                        "price": 0
                                                                    }
                                                                ],
                                                                "pickupStoreInfo": {
                                                                    "isPickupStore": true,
                                                                    "friendlyName": "Santa Felicidade",
                                                                    "address": {
                                                                        "addressType": "pickup",
                                                                        "receiverName": "Juliana",
                                                                        "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                        "postalCode": "82320-040",
                                                                        "city": "Curitiba",
                                                                        "state": "PR",
                                                                        "country": "BRA",
                                                                        "street": "Rua Domingos Strapasson",
                                                                        "number": "100",
                                                                        "neighborhood": "Santa Felicidade",
                                                                        "complement": "Loja 10",
                                                                        "reference": "Right next to the Unicorn statue.",
                                                                        "geoCoordinates": [
                                                                            49.334934,
                                                                            25.401705
                                                                        ]
                                                                    },
                                                                    "additionalInfo": ""
                                                                }
                                                            }
                                                        },
                                                        "example": [
                                                            {
                                                                "id": "Curbside pickup",
                                                                "deliveryChannel": "pickup-in-point",
                                                                "name": "Curbside pickup",
                                                                "shippingEstimate": "0bd",
                                                                "price": 0,
                                                                "availableDeliveryWindows": [
                                                                    {
                                                                        "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                        "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                        "price": 0
                                                                    }
                                                                ],
                                                                "pickupStoreInfo": {
                                                                    "isPickupStore": true,
                                                                    "friendlyName": "Santa Felicidade",
                                                                    "address": {
                                                                        "addressType": "pickup",
                                                                        "receiverName": "Juliana",
                                                                        "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                        "postalCode": "82320-040",
                                                                        "city": "Curitiba",
                                                                        "state": "PR",
                                                                        "country": "BRA",
                                                                        "street": "Rua Domingos Strapasson",
                                                                        "number": "100",
                                                                        "neighborhood": "Santa Felicidade",
                                                                        "complement": "Loja 10",
                                                                        "reference": "Right next to the Unicorn statue.",
                                                                        "geoCoordinates": [
                                                                            49.334934,
                                                                            25.401705
                                                                        ]
                                                                    },
                                                                    "additionalInfo": ""
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "stockBalance": {
                                                        "title": "stockBalance",
                                                        "description": "Stock balance of the SKU.",
                                                        "type": "integer",
                                                        "example": 199
                                                    },
                                                    "deliveryChannels": {
                                                        "title": "deliveryChannels",
                                                        "description": "Array contains the stock balance for each channel.",
                                                        "type": "array",
                                                        "items": {
                                                            "title": "deliveryChannels",
                                                            "description": "Object containing ID and stockbalance of each delivery channel.",
                                                            "type": "object",
                                                            "required": [
                                                                "id",
                                                                "stockBalance"
                                                            ],
                                                            "properties": {
                                                                "id": {
                                                                    "title": "id",
                                                                    "description": "Identifies the channel type whose stock balance will be informed in the next field. Possible values are: pickup-in-point for pickup point and delivery for regular delivery.",
                                                                    "type": "string",
                                                                    "example": "pickup-in-point"
                                                                },
                                                                "stockBalance": {
                                                                    "title": "stockBalance",
                                                                    "description": "Stock balance for the channel type selected in the previous field.",
                                                                    "type": "integer",
                                                                    "example": 20
                                                                }
                                                            },
                                                            "example": {
                                                                "id": "delivery",
                                                                "stockBalance": 179
                                                            }
                                                        },
                                                        "example": [
                                                            {
                                                                "id": "delivery",
                                                                "stockBalance": 179
                                                            },
                                                            {
                                                                "id": "pickup-in-point",
                                                                "stockBalance": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "example": {
                                                    "itemIndex": 0,
                                                    "quantity": 1,
                                                    "shipsTo": [
                                                        "BRA"
                                                    ],
                                                    "slas": [
                                                        {
                                                            "id": "Curbside pickup",
                                                            "deliveryChannel": "pickup-in-point",
                                                            "name": "Curbside pickup",
                                                            "shippingEstimate": "0bd",
                                                            "price": 0,
                                                            "availableDeliveryWindows": [
                                                                {
                                                                    "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                    "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                    "price": 0
                                                                }
                                                            ],
                                                            "pickupStoreInfo": {
                                                                "isPickupStore": true,
                                                                "friendlyName": "Santa Felicidade",
                                                                "address": {
                                                                    "addressType": "pickup",
                                                                    "receiverName": null,
                                                                    "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                    "postalCode": "82320-040",
                                                                    "city": "Curitiba",
                                                                    "state": "PR",
                                                                    "country": "BRA",
                                                                    "street": "Rua Domingos Strapasson",
                                                                    "number": "100",
                                                                    "neighborhood": "Santa Felicidade",
                                                                    "complement": "Loja 10",
                                                                    "reference": null,
                                                                    "geoCoordinates": [
                                                                        49.334934,
                                                                        25.401705
                                                                    ]
                                                                },
                                                                "additionalInfo": ""
                                                            }
                                                        }
                                                    ],
                                                    "stockBalance": 199,
                                                    "deliveryChannels": [
                                                        {
                                                            "id": "delivery",
                                                            "stockBalance": 179
                                                        },
                                                        {
                                                            "id": "pickup-in-point",
                                                            "stockBalance": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "example": [
                                                {
                                                    "itemIndex": 0,
                                                    "quantity": 1,
                                                    "shipsTo": [
                                                        "BRA"
                                                    ],
                                                    "slas": [
                                                        {
                                                            "id": "Curbside pickup",
                                                            "deliveryChannel": "pickup-in-point",
                                                            "name": "Curbside pickup",
                                                            "shippingEstimate": "0bd",
                                                            "price": 0,
                                                            "availableDeliveryWindows": [
                                                                {
                                                                    "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                                    "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                                    "price": 0
                                                                }
                                                            ],
                                                            "pickupStoreInfo": {
                                                                "isPickupStore": true,
                                                                "friendlyName": "Santa Felicidade",
                                                                "address": {
                                                                    "addressType": "pickup",
                                                                    "receiverName": null,
                                                                    "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                    "postalCode": "82320-040",
                                                                    "city": "Curitiba",
                                                                    "state": "PR",
                                                                    "country": "BRA",
                                                                    "street": "Rua Domingos Strapasson",
                                                                    "number": "100",
                                                                    "neighborhood": "Santa Felicidade",
                                                                    "complement": "Loja 10",
                                                                    "reference": null,
                                                                    "geoCoordinates": [
                                                                        49.334934,
                                                                        25.401705
                                                                    ]
                                                                },
                                                                "additionalInfo": ""
                                                            }
                                                        }
                                                    ],
                                                    "stockBalance": 199,
                                                    "deliveryChannels": [
                                                        {
                                                            "id": "delivery",
                                                            "stockBalance": 179
                                                        },
                                                        {
                                                            "id": "pickup-in-point",
                                                            "stockBalance": 20
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "postalCode": {
                                            "title": "postalCode",
                                            "description": "Postal code of the delivery address. This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                            "type": "string",
                                            "example": "80250000"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pvt/orders": {
            "post": {
                "tags": [
                    "External Seller"
                ],
                "summary": "Order placement",
                "description": "This request is sent by VTEX to the external seller once the customer finishes their checkout, to let the seller know there is a newly placed order. It does that by calling the **Order Placement** endpoint, which needs to be implemented by the seller.\n\nThe marketplace will send information such as the items contained in the cart, the client’s profile data, the shipping data, and the payment data. With all that, the seller will be able to create the order in their own store.",
                "operationId": "order-placement",
                "parameters": [
                    {
                        "name": "fulfillmentEndpoint",
                        "in": "path",
                        "description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "https://marketplaceexample.externalseller.com"
                        }
                    },
                    {
                        "name": "content-length",
                        "in": "header",
                        "description": "Length of the request body.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "2183"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "description": "Indicates authorization.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "VTEX key=\"appKey\" token=\"appToken\""
                        }
                    },
                    {
                        "name": "x-vtex-api-appkey",
                        "in": "header",
                        "description": "VTEX API app key.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "appKey"
                        }
                    },
                    {
                        "name": "x-vtex-api-apptoken",
                        "in": "header",
                        "description": "VTEX API app token.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "appToken"
                        }
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "accept-enconding",
                        "in": "header",
                        "description": "Indicates the types of response enconding the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "gzip, deflate"
                        }
                    },
                    {
                        "name": "x-vtex-operation-id",
                        "in": "header",
                        "description": "VTEX operation ID.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "8032114b-63e9-4e64-b30c-f7afcf676d7a"
                        }
                    },
                    {
                        "name": "x-forwarded-proto",
                        "in": "header",
                        "description": "Determines the protocol used by the client in the request.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "https"
                        }
                    },
                    {
                        "name": "x-forwarded-for",
                        "in": "header",
                        "description": "Identifies the originating IP address of the HTTP client.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "179.35.30.186, 130.176.35.67, 172.16.247.49"
                        }
                    },
                    {
                        "name": "x-vtex-cache-client-bypass",
                        "in": "header",
                        "description": "VTEX cache client bypass.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    },
                    {
                        "name": "content-type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "traceparent",
                        "in": "header",
                        "description": "Identifies the incoming request in a tracing system.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "00-083c0ca18bc8d94183f333809a70cd64-bf5e9a641e230540-00"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/orderPlacement"
                            },
                            "example": {}
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "marketplaceOrderId": "959311095",
                                            "marketplaceServicesEndpoint": "https://marketplaceservicesendpoint/",
                                            "marketplacePaymentValue": 11080,
                                            "items": [
                                                {
                                                    "id": "2002495",
                                                    "quantity": 1,
                                                    "Seller": "1",
                                                    "commission": 0,
                                                    "freightCommission": 0,
                                                    "price": 9990,
                                                    "bundleItems": [],
                                                    "itemAttachment": {
                                                        "name": null,
                                                        "content": {}
                                                    },
                                                    "attachments": [],
                                                    "priceTags": [],
                                                    "measurementUnit": null,
                                                    "unitMultiplier": 0,
                                                    "isGift": false
                                                }
                                            ],
                                            "clientProfileData": {
                                                "email": "32172239852@gmail.com.br",
                                                "firstName": "John",
                                                "lastName": "Smith",
                                                "documentType": null,
                                                "document": "3244239851",
                                                "phone": "399271258",
                                                "corporateName": null,
                                                "tradeName": null,
                                                "corporateDocument": null,
                                                "stateInscription": null,
                                                "corporatePhone": null,
                                                "isCorporate": false,
                                                "userProfileId": null
                                            },
                                            "shippingData": {
                                                "address": {
                                                    "addressType": "Residencial",
                                                    "receiverName": "John Smith",
                                                    "addressId": "Home",
                                                    "postalCode": "13476103",
                                                    "city": "Americana",
                                                    "state": "SP",
                                                    "country": "BRA",
                                                    "street": "JOÃO DAMÁZIO GOMES",
                                                    "number": "311",
                                                    "neighborhood": "SÃO JOSÉ",
                                                    "complement": null,
                                                    "reference": "Bairro Praia Azul / Posto de Saúde 17",
                                                    "geoCoordinates": []
                                                },
                                                "logisticsInfo": [
                                                    {
                                                        "itemIndex": 0,
                                                        "selectedSla": "Regular",
                                                        "lockTTL": "8d",
                                                        "shippingEstimate": "7d",
                                                        "price": 1090,
                                                        "deliveryWindow": null
                                                    }
                                                ],
                                                "updateStatus": "updated"
                                            },
                                            "openTextField": null,
                                            "marketingData": {
                                                "utmSource": "buscape",
                                                "utmMedium": "",
                                                "utmCampaign": "freeshipping",
                                                "utmiPage": "_",
                                                "utmiPart": "BuscaFullText",
                                                "utmiCampaign": "artscase for iphone 5"
                                            },
                                            "paymentData": null
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pvt/orders/{sellerOrderId}/fulfill": {
            "post": {
                "tags": [
                    "External Seller"
                ],
                "summary": "Authorize fulfillment",
                "description": "This request is sent from VTEX to the seller after the payment is approved, to notify them that the fulfillment process can start.",
                "operationId": "authorize-fulfillment",
                "parameters": [
                    {
                        "name": "fulfillmentEndpoint",
                        "in": "path",
                        "description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "https://marketplaceexample.externalseller.com"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "sellerOrderId",
                        "in": "path",
                        "description": "Seller's order ID of the order ready for fulfillment. The seller can be a VTEX seller or an external one.",
                        "required": true,
                        "example": "00-1268540501456-01",
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "00-1268540501456-01"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "marketplaceOrderId"
                                ],
                                "type": "object",
                                "properties": {
                                    "marketplaceOrderId": {
                                        "type": "string",
                                        "description": "Identifies the order. The seller should use this ID to trigger the fulfillment process of the corresponding order.",
                                        "example": "1138342255777-01"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "date": "2014-10-06 18:52:00",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "1138342255777-01",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pvt/orders/{orderId}/cancel": {
            "post": {
                "tags": [
                    "External Seller"
                ],
                "summary": "Marketplace order cancellation",
                "description": "This request may be sent from VTEX to the external seller in case of order cancelation. For that, the seller will need to implement the Marketplace order cancellation endpoint. Whenever this request is received by the seler, the order should be canceled and the fulfillment flow should not proceed. \n\nFor the seller to: \n\n- **Evaluate a cancellation request:** it is possible to send an empty body as a response to the cancellation request, meaning that the seller is evaluating whether to proceed with the cancellation or not. \n\n- **Confirm the cancellation request:** it is possible to confirm the order cancellation by the marketplace by responding to the call with a body including only one information: the `marketplaceOrderId`, which identifies the order in the marketplace. The seller should use this ID to trigger the cancellation of the corresponding order. The seller should then respond with the same `marketplaceOrderId` and also with the `orderId`, which identifies the order in the seller, the date and time of the notification receipt, and a protocol code that confirms the receipt of the request (which may have the value `null`). \n\n- **Refuse a cancellation request:** it is possible to to [send the Invoice](https://developers.vtex.com/vtex-rest-api/reference/external-seller#send-invoice), meaning that the cancellation has been denied, and the flow continues to the [Order Invoicing](https://developers.vtex.com/vtex-rest-api/docs/external-seller-integration-connector#order-invoicing) step, and the ones that follow it. \n\nThis call should be made twice: once for the *Evaluate cancellation request* scenario, and a second time to *Confirm cancellation* or *Refuse cancellation*.",
                "operationId": "mkp-order-cancellation",
                "parameters": [
                    {
                        "name": "fulfillmentEndpoint",
                        "in": "path",
                        "description": "This is the fulfillment endpoint registered for each specific external seller in the **seller management** section of VTEX's admin panel.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "marketplaceexample.externalseller.com"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order being fulfilled",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "1138342255777-01"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "marketplaceOrderId"
                                ],
                                "type": "object",
                                "properties": {
                                    "marketplaceOrderId": {
                                        "type": "string",
                                        "description": "Identifies the order. The seller should use this ID to trigger the cancellation of the corresponding order.",
                                        "default": "1138342255777-01"
                                    }
                                }
                            },
                            "example": {
                                "marketplaceOrderId": "1138342255777-01"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "date": "2019-05-09 15:31:23",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "1138342255777-01",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ],
    "components": {
        "schemas": {
            "fulfillmentItem": {
                "required": [
                    "id",
                    "quantity",
                    "seller"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID.",
                        "example": "6"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of items of the SKU in the cart.",
                        "example": 1
                    },
                    "seller": {
                        "type": "string",
                        "description": "ID of the seller registered in VTEX.",
                        "example": "01"
                    }
                }
            },
            "orderPlacement": {
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "Identifies the order in the marketplace.",
                        "example": "1138342255777-01"
                    },
                    "marketplaceServicesEndpoint": {
                        "type": "string",
                        "description": "Endpoint sent by VTEX to the seller, that will be used to send the invoice and tracking data to the marketplace. This endpoint will also be used in [change order in Multilevel Omnichannel Inventory](https://developers.vtex.com/docs/guides/change-orders-multilevel-omnichannel-inventory-external-marketplaces#implementators) operations in external marketplaces.",
                        "example": "https://marketplaceservicesendpoint.myvtex.com/"
                    },
                    "marketplacePaymentValue": {
                        "type": "integer",
                        "description": "Amount that the marketplace agrees to pay to the seller. The last two digits are the cents. For example, $24.99 is represented 2499.",
                        "example": 2499
                    },
                    "items": {
                        "type": "array",
                        "description": "Array of objects containing data about each SKU in the cart.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "SKU ID.",
                                    "example": "123456789abc"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "description": "Quantity of the item.",
                                    "example": 1
                                },
                                "seller": {
                                    "type": "string",
                                    "description": "ID of the seller registered in VTEX.",
                                    "example": "seller-example"
                                },
                                "commission": {
                                    "type": "integer",
                                    "description": "Comission.",
                                    "example": 0
                                },
                                "freightCommission": {
                                    "type": "integer",
                                    "description": "Freight comission.",
                                    "example": 0
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "SKU price. The last two digits are the cents. For example, $24.99 is represented 2499.",
                                    "example": 2499
                                },
                                "bundleItems": {
                                    "type": "array",
                                    "description": "Information on services sold along with the SKU. Example: a gift package.",
                                    "items": {
                                        "$ref": "#/components/schemas/bundleItemsItem"
                                    }
                                },
                                "itemsAttachment": {
                                    "type": "array",
                                    "description": "Attachments sold with the SKU.",
                                    "items": {
                                        "$ref": "#/components/schemas/itemAttachment"
                                    }
                                },
                                "attachments": {
                                    "type": "array",
                                    "description": "Array containing information on attachments.",
                                    "items": {}
                                },
                                "priceTags": {
                                    "type": "array",
                                    "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "identifier": {
                                                "type": "string",
                                                "description": "Price tag identifier.",
                                                "example": "1234abc-5678b-1234c"
                                            },
                                            "isPercentual": {
                                                "type": "boolean",
                                                "description": "`true` if price tag value is applied through a percentage.",
                                                "example": false
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Price tag name.",
                                                "example": "discount@name-1234abc-5678b-1234c"
                                            },
                                            "rawValue": {
                                                "type": "integer",
                                                "description": "Price tag value.",
                                                "example": -12
                                            },
                                            "value": {
                                                "type": "integer",
                                                "description": "Price tag raw value.",
                                                "example": -1200
                                            }
                                        }
                                    }
                                },
                                "measurementUnit": {
                                    "type": "string",
                                    "description": "SKU measurement unit.",
                                    "example": "g"
                                },
                                "unitMultiplier": {
                                    "type": "integer",
                                    "description": "SKU unit multiplier.",
                                    "example": 1
                                },
                                "isGift": {
                                    "type": "boolean",
                                    "description": "`true` if the item is a gift."
                                }
                            }
                        }
                    },
                    "paymentData": {
                        "type": "object",
                        "description": "In other contexts, this field tipically holds an object with payment information. However, since the payment is processed by the marketplace, it will be sent to the seller as `null` in this context.",
                        "nullable": true,
                        "default": null
                    },
                    "clientProfileData": {
                        "type": "object",
                        "description": "Customer's profile information.",
                        "required": [
                            "email",
                            "firstName",
                            "lastName",
                            "documentType",
                            "document",
                            "isCorporate"
                        ],
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "Customer's email address.",
                                "example": "customer@examplemail.com"
                            },
                            "firstName": {
                                "type": "string",
                                "description": "Customer's first name.",
                                "example": "first-name"
                            },
                            "lastName": {
                                "type": "string",
                                "description": "Customer's last name.",
                                "example": "last-name"
                            },
                            "documentType": {
                                "type": "string",
                                "description": "Type of the document informed by the customer.",
                                "example": "cpf"
                            },
                            "document": {
                                "type": "string",
                                "description": "Document number informed by the customer.",
                                "example": "123456789"
                            },
                            "phone": {
                                "type": "string",
                                "description": "Customer's phone number.",
                                "example": "+55110988887777"
                            },
                            "corporateName": {
                                "type": "string",
                                "description": "Company name, if the customer is a legal entity.",
                                "example": "company-name",
                                "nullable": true
                            },
                            "tradeName": {
                                "type": "string",
                                "description": "Trade name, if the customer is a legal entity.",
                                "example": "trade-name",
                                "nullable": true
                            },
                            "corporateDocument": {
                                "type": "string",
                                "description": "Corporate document, if the customer is a legal entity.",
                                "example": "12345678000100",
                                "nullable": true
                            },
                            "stateInscription": {
                                "type": "string",
                                "description": "State inscription, if the customer is a legal entity.",
                                "example": "12345678",
                                "nullable": true
                            },
                            "corporatePhone": {
                                "type": "string",
                                "description": "Corporate phone number, if the customer is a legal entity.",
                                "example": "+551100988887777",
                                "nullable": true
                            },
                            "isCorporate": {
                                "type": "boolean",
                                "description": "`true` if the customer is a legal entity.",
                                "default": false,
                                "nullable": true
                            }
                        }
                    },
                    "shippingData": {
                        "type": "object",
                        "description": "Shipping information.",
                        "properties": {
                            "address": {
                                "type": "object",
                                "description": "Shipping address.",
                                "required": [
                                    "addressType",
                                    "receiverName",
                                    "postalCode",
                                    "city",
                                    "state",
                                    "country",
                                    "street",
                                    "neighborhood",
                                    "number"
                                ],
                                "properties": {
                                    "addressType": {
                                        "type": "string",
                                        "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                                        "example": "residential"
                                    },
                                    "receiverName": {
                                        "type": "string",
                                        "description": "Name of the person who is going to receive the order.",
                                        "example": "receiver-name"
                                    },
                                    "addressId": {
                                        "type": "string",
                                        "description": "Address ID.",
                                        "example": "Home"
                                    },
                                    "postalCode": {
                                        "type": "string",
                                        "description": "Postal Code.",
                                        "example": "12345-000"
                                    },
                                    "city": {
                                        "type": "string",
                                        "description": "City of the shipping address.",
                                        "example": "Rio de Janeiro"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "State of the shipping address.",
                                        "example": "Rio de Janeiro"
                                    },
                                    "country": {
                                        "type": "string",
                                        "description": "Three letter ISO code of the country of the shipping address.",
                                        "example": "BRA"
                                    },
                                    "street": {
                                        "type": "string",
                                        "description": "Street of the shipping address.",
                                        "example": "Praia de Botafogo"
                                    },
                                    "number": {
                                        "type": "string",
                                        "description": "Number of the building, house or apartment in the shipping address.",
                                        "example": "300"
                                    },
                                    "neighborhood": {
                                        "type": "string",
                                        "description": "Neighborhood of the shipping address.",
                                        "example": "Botafogo"
                                    },
                                    "complement": {
                                        "type": "string",
                                        "description": "Complement to the shipping address in case it applies.",
                                        "example": "3rd floor"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                                        "example": "Grey building"
                                    },
                                    "geoCoordinates": {
                                        "type": "array",
                                        "description": "Array with two strings with geocoordinates, first latitude, then longitude.",
                                        "items": {
                                            "type": "string",
                                            "example": "00.00000"
                                        }
                                    }
                                }
                            },
                            "logisticsInfo": {
                                "type": "array",
                                "description": "Array of objects containing logistics information of each item.",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "itemIndex",
                                        "selectedSla",
                                        "price"
                                    ],
                                    "properties": {
                                        "itemIndex": {
                                            "type": "integer",
                                            "description": "Index of the item in the `items` array, starting from 0.",
                                            "example": 0
                                        },
                                        "selectedSla": {
                                            "type": "string",
                                            "description": "Selected shipping option",
                                            "example": "Express"
                                        },
                                        "lockTTL": {
                                            "type": "string",
                                            "description": "Logistics reservation waiting time.",
                                            "example": "8d"
                                        },
                                        "shippingEstimate": {
                                            "type": "string",
                                            "description": "Estimated time until delivery for the item.",
                                            "example": "7d"
                                        },
                                        "price": {
                                            "type": "integer",
                                            "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                                            "example": 1099
                                        },
                                        "deliveryWindow": {
                                            "type": "object",
                                            "description": "Scheduled delivery window information, in case it applies to the item.",
                                            "properties": {
                                                "startDateUtc": {
                                                    "type": "string",
                                                    "description": "Scheduled delivery window start date in UTC.",
                                                    "example": "2016-04-20T08:00:00+00:00"
                                                },
                                                "endDateUtc": {
                                                    "type": "string",
                                                    "description": "Scheduled delivery window end date in UTC.",
                                                    "example": "2016-04-20T12:00:00+00:00"
                                                },
                                                "listPrice": {
                                                    "type": "number",
                                                    "description": "Scheduled delivery window list price.",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "updateStatus": {
                                "type": "string",
                                "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                                "example": "updated"
                            }
                        }
                    },
                    "marketingData": {
                        "type": "object",
                        "description": "Marketing tracking data. If the order has no tracking data, the value will be `null`.",
                        "properties": {
                            "utmSource": {
                                "type": "string",
                                "description": "UTM source.",
                                "example": "Facebook"
                            },
                            "utmMedium": {
                                "type": "string",
                                "description": "UTM medium.",
                                "example": "CPC"
                            },
                            "utmCampaign": {
                                "type": "string",
                                "description": "UTM campaign",
                                "example": "Black friday"
                            },
                            "utmiPage": {
                                "type": "string",
                                "description": "utmi_page (internal utm)",
                                "example": "utmi_page-example"
                            },
                            "utmiPart": {
                                "type": "string",
                                "description": "utmi_part (internal utm)",
                                "example": "utmi_part-exmaple"
                            },
                            "utmiCampaign": {
                                "type": "string",
                                "description": "utmi_campaign (internal utm)",
                                "example": "utmi_campaign-exmaple"
                            }
                        }
                    },
                    "openTextField": {
                        "type": "string",
                        "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `json` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
                        "example": "open-text-example"
                    }
                }
            },
            "bundleItemsItem": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Service type.",
                        "example": "type"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Service identifier.",
                        "example": 7436
                    },
                    "name": {
                        "type": "string",
                        "description": "Service name.",
                        "example": "name"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Service price. The last two digits are the cents.",
                        "example": 10
                    }
                }
            },
            "itemAttachment": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Attachment name.",
                        "example": "name-example"
                    },
                    "content": {
                        "type": "string",
                        "description": "Content referring to the customization requested by the customer.",
                        "example": "content-example"
                    }
                }
            },
            "VtexMapperRegistration": {
                "required": [
                    "displayName",
                    "categoryTreeEndPoint",
                    "mappingEndPoint",
                    "properties"
                ],
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Marketplace Name, that will be displayed in VTEX Mapper.",
                        "example": "Marketplace A"
                    },
                    "categoryTreeEndPoint": {
                        "type": "string",
                        "description": "Endpoint that returns categories and attributes according to VTEX  Mapper specifications.",
                        "example": "http://api.vtexinternal.com.br/api/{{marketplaceName}}/mapper/categories"
                    },
                    "mappingEndPoint": {
                        "type": "string",
                        "description": "Secure endpoint that will receive the category mapping sent by VTEX Mapper.",
                        "example": "http://api.vtexinternal.com.br/api/{{marketplaceName}}/mapper/mapping"
                    },
                    "properties": {
                        "required": [
                            "allowsRemap"
                        ],
                        "type": "object",
                        "description": "Refers to the `allowsRemap` property.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "allowsRemap": {
                                    "type": "boolean",
                                    "description": "Allows rempaping categories in case the marketplace or seller tree is altered. If marked as `true`, all trees will be remapped.",
                                    "example": false
                                }
                            }
                        }
                    },
                    "CategoryTreeProcessingNotificationEndpoint": {
                        "description": "The `CategoryTreeProcessingNotificationEndpoint` is optional, and should be an endpoint from the external marketplace, that will be notified after the marketplace's category tree is successfully processed or not.",
                        "type": "string",
                        "example": "https://CategoryTreeProcessingNotificationEndpoint.com/api"
                    }
                }
            },
            "sendCategoryMappingToVtexMapper": {
                "required": [
                    "categories",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "categories": {
                        "required": [
                            "id",
                            "name",
                            "children"
                        ],
                        "type": "array",
                        "title": "",
                        "description": "Array with Marketplace parent categories and their information.",
                        "default": [],
                        "items": {
                            "type": "object",
                            "title": "",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "title": "id",
                                    "description": "ID of the parent category in the marketplace.",
                                    "default": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "name",
                                    "description": "Name of the parent category in the marketplace.",
                                    "default": "Appliances"
                                },
                                "children": {
                                    "type": "array",
                                    "title": "chidren",
                                    "description": "Array with children categories in the marketplace, and their information.",
                                    "default": [],
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "id",
                                            "name",
                                            "children",
                                            "specifications"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "title": "id",
                                                "description": "ID of the child  category in the marketplace.",
                                                "default": "1a"
                                            },
                                            "name": {
                                                "type": "string",
                                                "title": "name",
                                                "description": "Name of the child  category in the marketplace.",
                                                "default": "Kitchen"
                                            },
                                            "children": {
                                                "type": "array",
                                                "title": "children",
                                                "description": "Grandchildren categories in the marketplace. Send as array of `ID`, `name` and `specifications`.",
                                                "default": [],
                                                "items": {},
                                                "nullable": true
                                            },
                                            "specifications": {
                                                "type": "array",
                                                "title": "specifications",
                                                "description": "Specifications for the Product or SKU",
                                                "default": [
                                                    {
                                                        "attributeName": "Color",
                                                        "required": true,
                                                        "attributeValues": [
                                                            {
                                                                "valueName": "Red"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "items": {
                                                    "type": "object",
                                                    "description": "Specifications of children categories.",
                                                    "example": {
                                                        "attributeName": "Color",
                                                        "required": true,
                                                        "attributeValues": [
                                                            {
                                                                "valueName": "Red"
                                                            }
                                                        ]
                                                    },
                                                    "required": [
                                                        "attributeName",
                                                        "required",
                                                        "attributeValues"
                                                    ],
                                                    "properties": {
                                                        "attributeName": {
                                                            "type": "string",
                                                            "title": "attributeName",
                                                            "description": "Name of the attribute sent as a specification.",
                                                            "default": "Color"
                                                        },
                                                        "required": {
                                                            "type": "boolean",
                                                            "title": "required",
                                                            "description": "If the specification is required, mark this flag as `true`. If not, mark it as `false`.",
                                                            "default": false
                                                        },
                                                        "attributeValues": {
                                                            "type": "array",
                                                            "title": "attributeValues",
                                                            "description": "Values of the atttribute specified.",
                                                            "default": [
                                                                {
                                                                    "valueName": "Red"
                                                                }
                                                            ],
                                                            "items": {
                                                                "type": "object",
                                                                "title": "valueName",
                                                                "description": "Array of the multiple `valueNames` for the attribute specificied.",
                                                                "default": {
                                                                    "valueName": "Red"
                                                                },
                                                                "required": [
                                                                    "valueName"
                                                                ],
                                                                "properties": {
                                                                    "valueName": {
                                                                        "type": "string",
                                                                        "title": "valueName",
                                                                        "description": "Name of the value",
                                                                        "default": "Red"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "EnqueueNewOrderRequest": {
                "title": "EnqueueNewOrderRequest",
                "required": [
                    "marketplaceOrderId",
                    "marketplaceOrderStatus",
                    "marketplacePaymentValue",
                    "allowFranchises",
                    "items",
                    "clientProfileData",
                    "shippingData",
                    "invoiceData"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "title": "marketplaceOrderId",
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "marketplaceOrderStatus": {
                        "type": "string",
                        "title": "marketplaceOrderStatus",
                        "description": "Required field including a string with the order’s status in the marketplace. If you send an order with the status APPROVED to integrate, our service will automatically try to advance it’s status in VTEX after integrating it. This field accepts the following values:  \n\n- `new`  \n\n- `approved`",
                        "example": "new"
                    },
                    "marketplacePaymentValue": {
                        "type": "integer",
                        "title": "marketplacePaymentValue",
                        "description": "Integer that indicates the order’s total value, which the marketplace will pay to the seller. It’s important to note that this value should include interest, if that’s the case. If the value is `USD110.50`, convert it to the format → `11050`.",
                        "example": 11050
                    },
                    "connectorName": {
                        "type": "string",
                        "title": "connectorName",
                        "description": "String with the identifier code of the connector responsible for the order.  \n\nThis field is optional if the connector uses the [App Template](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-app-template) and authenticates on our request via `VtexIdclientAutCookie`.  \n\nIt is required if the connector is native or does not use the App Template.",
                        "example": "connectorName"
                    },
                    "connectorEndpoint": {
                        "type": "string",
                        "title": "connectorEndpoint",
                        "description": "String with the connector's base endpoint that will receive notifications about the orders processing results, as well as status updates from VTEX OMS. This field accepts query strings. You can use the models below:  \n\n- `https://{{externalconnector}}.com`  \n\n- `https://{{externalconnector.com}}/api/vtex` if you additionaly want to send a relative URL with the endpoint. \n\nThis field is optional if the connector uses the [App Template](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-app-template) and authenticates on our request via `VtexIdclientAutCookie`.  \n\nIt is required if the connector is native or does not use the App Template.",
                        "example": "https://{{externalconnector.com}}/api/vtex"
                    },
                    "allowFranchises": {
                        "type": "boolean",
                        "title": "allowFranchises",
                        "description": "Boolean indicating whether franchise accounts linked to the main seller should be considered. That is, if the order delivery pickup/SLA can belong to a [franchise account](https://help.vtex.com/en/tutorial/what-is-a-franchise-account--kWQC6RkFSCUFGgY5gSjdl), for example. This field is optional and defaults to `false`.",
                        "example": false
                    },
                    "pickupAccountName": {
                        "type": "string",
                        "title": "pickupAccountName",
                        "description": "String that indicates the name of the account responsible for the order’s pickup point. It is only required for pickup-in-point orders from franchise accounts, when franchise accounts `allowFranchises` is `true` and the order in question has a `pickup-in-point` delivery type. It is optional otherwise.",
                        "example": "accountName"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Item"
                        }
                    },
                    "clientProfileData": {
                        "$ref": "#/components/schemas/ClientProfileData"
                    },
                    "shippingData": {
                        "$ref": "#/components/schemas/ShippingData"
                    },
                    "invoiceData": {
                        "$ref": "#/components/schemas/InvoiceData"
                    },
                    "customData": {
                        "$ref": "#/components/schemas/CustomData"
                    }
                },
                "example": {
                    "marketplaceOrderId": "{{$guid}}",
                    "marketplaceOrderStatus": "NEW",
                    "marketplacePaymentValue": 3025,
                    "connectorName": "SkyHub",
                    "connectorEndpoint": "https://connector-endpoint.com/api/vtex",
                    "allowFranchises": false,
                    "pickupAccountName": "",
                    "items": [
                        {
                            "id": "1",
                            "price": 975,
                            "quantity": 1
                        }
                    ],
                    "clientProfileData": {
                        "email": "email@email.com.br",
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "99999999999",
                        "document": "99999999999",
                        "corporateDocument": null,
                        "corporatePhone": null,
                        "corporateName": null,
                        "tradeName": null,
                        "stateInscription": null
                    },
                    "shippingData": {
                        "logisticsInfo": [
                            {
                                "price": 2050,
                                "selectedDeliveryChannel": "delivery",
                                "selectedSla": "Express",
                                "lockTTL": "1d",
                                "shippingEstimate": "2d",
                                "deliveryIds": {
                                    "warehouseId": "AR1"
                                }
                            }
                        ],
                        "selectedAddresses": [
                            {
                                "addressType": "Residential",
                                "addressId": "1",
                                "receiverName": "John Doe",
                                "postalCode": "81020-235",
                                "city": "Curitiba",
                                "state": "PR",
                                "country": "BRA",
                                "street": "Rua Eduardo Carlos Pereira",
                                "number": "4125",
                                "neighborhood": "Portão",
                                "complement": "101",
                                "geoCoordinates": {
                                    "latitude": "-29.5",
                                    "longitude": "-45.8"
                                }
                            }
                        ],
                        "isFob": true,
                        "isMarketplaceFulfillment": true
                    },
                    "invoiceData": {
                        "userPaymentInfo": {
                            "paymentMethods": [
                                "creditCardPaymentGroup"
                            ]
                        }
                    },
                    "customData": {
                        "customApps": [
                            {
                                "id": "marketplace-integration",
                                "major": 1,
                                "fields": {
                                    "marketplacePaymentMethod": "credit card"
                                }
                            }
                        ]
                    }
                }
            },
            "Item": {
                "title": "Item",
                "required": [
                    "id",
                    "price",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "id",
                        "description": "String with the SKU ID in VTEX’s catalog.",
                        "example": "1"
                    },
                    "price": {
                        "type": "integer",
                        "title": "price",
                        "description": "Integer with the SKU’s unit price. If the value is `USD110.50`, convert it to the format → `11050`.",
                        "example": 11050
                    },
                    "quantity": {
                        "type": "integer",
                        "title": "quantity",
                        "description": "Integer with the quantity of the SKU present in the order. The value should be greater than zero.",
                        "example": 10
                    }
                },
                "example": {
                    "id": "1",
                    "price": 975,
                    "quantity": 1
                }
            },
            "ClientProfileData": {
                "title": "ClientProfileData",
                "description": "Structure with the customer's information. An order will be identified as corporate if any of the corporate fields are filled out (`corporateDocument`, `corporatePhone`, `corporateName` or `tradeName`).",
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "phone",
                    "document",
                    "corporateDocument",
                    "corporatePhone",
                    "corporateName",
                    "tradeName",
                    "stateInscription"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "email",
                        "description": "String with the customer's email.",
                        "example": "cirilla@cintra.com"
                    },
                    "firstName": {
                        "type": "string",
                        "title": "firstName",
                        "description": "String with the customer's first name.",
                        "example": "Cirilla"
                    },
                    "lastName": {
                        "type": "string",
                        "title": "lastName",
                        "description": "String with the customer’s surname.",
                        "example": "Cintra"
                    },
                    "phone": {
                        "type": "string",
                        "title": "phone",
                        "description": "String with the customer’s phone number.",
                        "example": "99999999999"
                    },
                    "document": {
                        "type": "string",
                        "title": "The document schema",
                        "description": "String with the customer’s document number.",
                        "example": "99999999999"
                    },
                    "corporateDocument": {
                        "type": "string",
                        "title": "corporateDocument",
                        "description": "String with the company’s document number, in case of corporate orders.",
                        "nullable": true,
                        "example": "99999999999"
                    },
                    "corporatePhone": {
                        "type": "string",
                        "title": "corporatePhone",
                        "description": "String with the company’s phone number, in case of corporate orders.",
                        "nullable": true,
                        "example": "99999999999"
                    },
                    "corporateName": {
                        "type": "string",
                        "title": "corporateName",
                        "description": "String with the company’s name, in case of corporate orders.",
                        "nullable": true,
                        "example": "The Witcher Inc."
                    },
                    "tradeName": {
                        "type": "string",
                        "title": "tradeName",
                        "description": "String with the company’s fantasy name, in case of corporate orders.",
                        "nullable": true,
                        "example": "The Witcher"
                    },
                    "stateInscription": {
                        "type": "string",
                        "title": "stateInscription",
                        "description": "String with the company’s state registration, in case of corporate orders.",
                        "nullable": true,
                        "example": "99999999999"
                    }
                }
            },
            "ShippingData": {
                "title": "ShippingData",
                "required": [
                    "logisticsInfo",
                    "selectedAddresses",
                    "isFob",
                    "isMarketplaceFulfillment"
                ],
                "type": "object",
                "properties": {
                    "logisticsInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfo"
                        },
                        "description": "List that references the SLAs responsible for delivering each item in the order.  \n\nThis list must contain the same number of items as the `items` list, previously defined. For example: if the order contains 3 SKUs, you must describe 3 SLAs in this list, one for each SKU (even in cases where the same SLA will deliver all of them).  \n\nThe order of the SLAs in this list must also follow the same order as in the `items` list. For example: if the SLA named **Correios Express** will be responsible for delivering the SKU with ID equal to **1015**, which is found at index 0 of the `items` list, it must be in index 0 of the `logisticsInfo` list as well."
                    },
                    "selectedAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectedAddress"
                        },
                        "description": ""
                    },
                    "isFob": {
                        "type": "boolean",
                        "title": "isFob",
                        "description": "Boolean that indicates whether the order's delivery is the marketplace responsibility. Optional, defaulting to false.",
                        "example": false
                    },
                    "isMarketplaceFulfillment": {
                        "type": "boolean",
                        "title": "isMarketplaceFulfillment",
                        "description": "Boolean that indicates whether the order's inventory in warehouse is the marketplace's responsibility. Optional, defaulting to false.",
                        "example": false
                    }
                }
            },
            "LogisticsInfo": {
                "title": "LogisticsInfo",
                "description": "List that references the SLAs responsible for delivering each item in the order.  \n\nThis list must contain the same number of items as the `items` list, previously defined. For example: if the order contains 3 SKUs, you must describe 3 SLAs in this list, one for each SKU (even in cases where the same SLA will deliver all of them).  \n\nThe order of the SLAs in this list must also follow the same order as in the `items` list. For example: if the SLA named **Correios Express** will be responsible for delivering the SKU with ID equal to **1015**, which is found at index 0 of the `items` list, it must be in index 0 of the `logisticsInfo` list as well.",
                "required": [
                    "price",
                    "selectedDeliveryChannel",
                    "selectedSla",
                    "lockTTL",
                    "shippingEstimate",
                    "deliveryIds"
                ],
                "type": "object",
                "properties": {
                    "price": {
                        "type": "integer",
                        "title": "price",
                        "description": "Integer indicating the shipping price for this SKU. If the value is `USD20.50`, convert it to the format → `2050`.",
                        "example": 2050
                    },
                    "selectedDeliveryChannel": {
                        "type": "string",
                        "title": "selectedDeliveryChannel",
                        "description": "String with the selected delivery channel. This field supports the following values:  \n\n- `delivery`,  \n\n- `pickup-in-point`.",
                        "example": "delivery"
                    },
                    "selectedSla": {
                        "type": "string",
                        "title": "selectedSla",
                        "description": "String with the selected delivery SLA.",
                        "example": "T-G1-2-Express"
                    },
                    "lockTTL": {
                        "type": "string",
                        "title": "lockTTL",
                        "description": "String with the inventory reservation period in VTEX's logistics system. To fill in this field insert the number of days, followed by the letter for the chosen unit. \n\n- Days: `d` \n\n- Business days: `bd`. \n\nExample formats: `12d`, `5d`.",
                        "example": "5d"
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "title": "shippingEstimate",
                        "description": "String with the order's estimated delivery time. To fill in this field, insert a number,  followed by the letter for the chosen unit. \n\n- Days: `d` \n\n- Business days: `bd`. \n\n- Hours: `h` \n\n- Minutes: `m`. \n\nExample formats: `12d`, `5bd`, `3h`, `50m`.",
                        "example": "7d"
                    },
                    "deliveryIds": {
                        "$ref": "#/components/schemas/DeliveryIds"
                    }
                },
                "example": {
                    "price": 2050,
                    "selectedDeliveryChannel": "delivery",
                    "selectedSla": "Express",
                    "lockTTL": "1d",
                    "shippingEstimate": "2d",
                    "deliveryIds": {
                        "warehouseId": "AR1"
                    }
                }
            },
            "DeliveryIds": {
                "title": "DeliveryIds",
                "description": "List of delivery IDs, used for orders where the marketplace is responsible for the fulfillment of the order, including keeping inventory at a warehouse as well as the delivery.",
                "required": [
                    "warehouseId"
                ],
                "type": "object",
                "properties": {
                    "warehouseId": {
                        "type": "string",
                        "description": "String with the ID of the warehouse used for marketplace fulfillment. Required when `isFob` = `true` and `isMarketplaceFulfillment` = `true`.",
                        "example": "AR1"
                    }
                },
                "example": {
                    "warehouseId": "AR1"
                }
            },
            "SelectedAddress": {
                "title": "SelectedAddress",
                "description": "List with the delivery addresses selected for the order. We currently only support a single delivery address.",
                "required": [
                    "addressType",
                    "addressId",
                    "receiverName",
                    "postalCode",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "addressType": {
                        "type": "string",
                        "title": "addressType",
                        "description": "String with the address type. The field supports the values: `residential`, `commercial`, `pickup`.",
                        "example": "commercial"
                    },
                    "addressId": {
                        "type": "string",
                        "title": "addressId",
                        "description": "String with the address identifier. Optional for `delivery` type orders, and required for `pickup-in-point` orders.",
                        "example": "1"
                    },
                    "receiverName": {
                        "type": "string",
                        "title": "receiverName",
                        "description": "String with the name of the person responsible for receiving the order.",
                        "example": "Yennefer of Vengerberg"
                    },
                    "postalCode": {
                        "type": "string",
                        "title": "postalCode",
                        "description": "String with the address' postal code.",
                        "example": "81020-235"
                    },
                    "city": {
                        "type": "string",
                        "title": "city",
                        "description": "String with the city’s name.",
                        "example": "City"
                    },
                    "state": {
                        "type": "string",
                        "title": "state",
                        "description": "String with the state's name, filled in with two letter code.",
                        "example": "RJ"
                    },
                    "country": {
                        "type": "string",
                        "title": "country",
                        "description": "String with the state's name, filled in with three letter code.",
                        "example": "BRA"
                    },
                    "street": {
                        "type": "string",
                        "title": "street",
                        "description": "String with the street's name.",
                        "example": "The Witcher Avenue"
                    },
                    "number": {
                        "type": "string",
                        "title": "The number",
                        "description": "String with the street's number.",
                        "example": "1986"
                    },
                    "neighborhood": {
                        "type": "string",
                        "title": "The neighborhood schema",
                        "description": "String with the neighborhood's name.",
                        "example": "Neighborhood's name"
                    },
                    "complement": {
                        "type": "string",
                        "title": "complement",
                        "description": "String with the address' complement, like building name, or extra number.",
                        "example": "Complement to address"
                    },
                    "geoCoordinates": {
                        "$ref": "#/components/schemas/GeoCoordinates"
                    }
                }
            },
            "GeoCoordinates": {
                "title": "GeoCoordinates",
                "description": "Structure with the address geocoordinates. Optional for `delivery` orders, required for `pickup-in-point` orders.",
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string",
                        "title": "latitude",
                        "description": "Double value with the latitude coordinates of the address. Required only if the geoCoordinates field is defined. \n\nExample format: `-25.4158764`.",
                        "example": "-25.4158764"
                    },
                    "longitude": {
                        "type": "string",
                        "title": "longitude",
                        "description": "Double value with the longitude coordinates of the address. Required only if the geoCoordinates field is defined. Example format: `-49.342759`.",
                        "example": "-49.342759"
                    }
                }
            },
            "InvoiceData": {
                "title": "InvoiceData",
                "description": "Object with the order's billing data.",
                "required": [
                    "userPaymentInfo"
                ],
                "type": "object",
                "properties": {
                    "userPaymentInfo": {
                        "$ref": "#/components/schemas/UserPaymentInfo"
                    }
                },
                "example": {
                    "userPaymentInfo": {
                        "paymentMethods": [
                            "creditCardPaymentGroup"
                        ]
                    }
                }
            },
            "UserPaymentInfo": {
                "title": "UserPaymentInfo",
                "description": "Structure with the order’s payment data. Required only if `invoiceData` is defined.",
                "required": [
                    "paymentMethods"
                ],
                "type": "object",
                "properties": {
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the payment methods used in the order. Required only if invoiceData is defined. The format and some possible values of payment methods accepted in this list can be found in the call [Fetching marketplace information with the Orders API](https://developers.vtex.com/vtex-rest-api/docs/get-marketplace-data-orders-api).",
                        "example": [
                            "creditCardPaymentGroup"
                        ]
                    }
                },
                "example": {
                    "paymentMethods": [
                        "creditCardPaymentGroup"
                    ]
                }
            },
            "CustomData": {
                "title": "CustomData",
                "description": "Structure with the order's customizable fields. To insert custom fields in the order, you must first go through the process of [Creating an app](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-app-template), and then adding the app, as well as the desired fields, within the seller's `orderForm`. More information on [Creating customizable fields in the cart with Checkout API](https://developers.vtex.com/vtex-rest-api/docs/customizable-fields-with-checkout-api).",
                "required": [
                    "customApps"
                ],
                "type": "object",
                "properties": {
                    "customApps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomApp"
                        },
                        "description": ""
                    }
                },
                "example": {
                    "customApps": [
                        {
                            "id": "marketplace-integration",
                            "major": 1,
                            "fields": {
                                "marketplacePaymentMethod": "credit card"
                            }
                        }
                    ]
                }
            },
            "CustomApp": {
                "title": "CustomApp",
                "required": [
                    "id",
                    "major",
                    "fields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "id",
                        "description": "App's ID.",
                        "example": "ID"
                    },
                    "major": {
                        "type": "integer",
                        "title": "major",
                        "description": "Integer with the major version of the app. Optional, defaulting to one.",
                        "example": 1
                    },
                    "fields": {
                        "$ref": "#/components/schemas/Fields"
                    }
                },
                "example": {
                    "id": "marketplace-integration",
                    "major": 1,
                    "fields": {
                        "marketplacePaymentMethod": "credit card"
                    }
                }
            },
            "Fields": {
                "title": "Fields",
                "description": "String dictionary with the names of the fields and their respective values that must be inserted into the order.",
                "required": [
                    "marketplacePaymentMethod"
                ],
                "type": "object",
                "properties": {
                    "marketplacePaymentMethod": {
                        "type": "string",
                        "title": "marketplacePaymentMethod",
                        "description": "String with field's key and value.",
                        "example": "credit card"
                    }
                },
                "example": {
                    "marketplacePaymentMethod": "credit card"
                }
            },
            "Deliverybyseller": {
                "title": "Deliverybyseller",
                "required": [
                    "marketplaceOrderId",
                    "accountName",
                    "code",
                    "flow",
                    "success",
                    "operationId",
                    "errors",
                    "fields",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "String that indicates which account made the request.",
                        "example": "accountName"
                    },
                    "code": {
                        "type": "string",
                        "description": "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the [Response Codes]() section.",
                        "example": "SOI001"
                    },
                    "flow": {
                        "type": "string",
                        "description": "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders \n\n`ApproveOrder`: when approving existing orders \n\n`Unknown`: when we’re not able to identify the flow",
                        "example": "ApproveOrder"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the response is successful or not.",
                        "example": true
                    },
                    "operationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                        "example": "1234567"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "description": "List with errors related to the response, if there's any.",
                        "items": {
                            "type": "object",
                            "title": "errors",
                            "required": [
                                "source",
                                "code",
                                "description"
                            ],
                            "properties": {
                                "source": {
                                    "type": "string",
                                    "title": "Checkout",
                                    "description": "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                                    "example": "Fulfillment"
                                },
                                "code": {
                                    "type": "string",
                                    "title": "code",
                                    "description": "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                                    "example": "FMT005"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "description",
                                    "description": "String containing the error message/description returned by the source.",
                                    "example": "Message describing the error."
                                }
                            },
                            "example": {
                                "source": "Fulfillment",
                                "code": "FMT005",
                                "description": "Message describing the error."
                            }
                        }
                    },
                    "fields": {
                        "type": "object",
                        "nullable": true,
                        "description": "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "title": "fields",
                                "required": [
                                    "mainOrderId"
                                ],
                                "properties": {
                                    "mainOrderId": {
                                        "type": "string",
                                        "title": "mainOrderId",
                                        "description": "String with the order’s ID inside the main seller account in VTEX.",
                                        "example": "MKP-123456789"
                                    },
                                    "franchiseOrderId": {
                                        "type": "string",
                                        "title": "franchiseOrderId",
                                        "description": "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                                        "example": "432874921387409182347"
                                    }
                                },
                                "example": {
                                    "mainOrderId": "MKP-123456789",
                                    "franchiseOrderId": "432874921387409182347"
                                }
                            }
                        },
                        "example": {
                            "franchiseOrderId": "38475934875"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "String with a message explaining the code returned in the response. ",
                        "example": "The order was integrated into VTEX successfully"
                    }
                },
                "example": {
                    "marketplaceOrderId": null,
                    "accountName": "grocery1",
                    "code": "SOI003",
                    "flow": "PlaceOrder",
                    "success": true,
                    "operationId": null,
                    "errors": null,
                    "fields": null,
                    "message": "Order successfully enqueued"
                }
            },
            "Pickup-in-point": {
                "title": "Pickup-in-point",
                "required": [
                    "marketplaceOrderId",
                    "accountName",
                    "code",
                    "flow",
                    "success",
                    "operationId",
                    "errors",
                    "fields",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "String that indicates which account made the request.",
                        "example": "accountName"
                    },
                    "code": {
                        "type": "string",
                        "description": "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the [Response Codes]() section.",
                        "example": "SOI001"
                    },
                    "flow": {
                        "type": "string",
                        "description": "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders \n\n`ApproveOrder`: when approving existing orders \n\n`Unknown`: when we’re not able to identify the flow",
                        "example": "ApproveOrder"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the response is successful or not.",
                        "example": true
                    },
                    "operationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                        "example": "1234567"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "description": "List with errors related to the response, if there's any.",
                        "items": {
                            "type": "object",
                            "title": "errors",
                            "required": [
                                "source",
                                "code",
                                "description"
                            ],
                            "properties": {
                                "source": {
                                    "type": "string",
                                    "title": "Checkout",
                                    "description": "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                                    "example": "Fulfillment"
                                },
                                "code": {
                                    "type": "string",
                                    "title": "code",
                                    "description": "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                                    "example": "FMT005"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "description",
                                    "description": "String containing the error message/description returned by the source.",
                                    "example": "Message describing the error."
                                }
                            },
                            "example": {
                                "source": "Fulfillment",
                                "code": "FMT005",
                                "description": "Message describing the error."
                            }
                        }
                    },
                    "fields": {
                        "type": "object",
                        "nullable": true,
                        "description": "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "title": "fields",
                                "required": [
                                    "mainOrderId"
                                ],
                                "properties": {
                                    "mainOrderId": {
                                        "type": "string",
                                        "title": "mainOrderId",
                                        "description": "String with the order's ID inside the main seller account in VTEX.",
                                        "example": "MKP-123456789"
                                    },
                                    "franchiseOrderId": {
                                        "type": "string",
                                        "title": "The franchiseOrderId Schema",
                                        "description": "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                                        "example": "432874921387409182347"
                                    }
                                },
                                "example": {
                                    "mainOrderId": "MKP-123456789",
                                    "franchiseOrderId": "432874921387409182347"
                                }
                            }
                        },
                        "example": {
                            "franchiseOrderId": "38475934875"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "String with a message explaining the code returned in the response. ",
                        "example": "The order was integrated into VTEX successfully"
                    }
                },
                "example": {
                    "marketplaceOrderId": null,
                    "accountName": "grocery1",
                    "code": "SOI003",
                    "flow": "PlaceOrder",
                    "success": true,
                    "operationId": null,
                    "errors": null,
                    "fields": null,
                    "message": "Order successfully enqueued"
                }
            },
            "Deliverybyfranchiseseller": {
                "title": "Deliverybyfranchiseseller",
                "required": [
                    "marketplaceOrderId",
                    "accountName",
                    "code",
                    "flow",
                    "success",
                    "operationId",
                    "errors",
                    "fields",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "String that indicates which account made the request.",
                        "example": "accountName"
                    },
                    "code": {
                        "type": "string",
                        "description": "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the [Response Codes]() section.",
                        "example": "SOI001"
                    },
                    "flow": {
                        "type": "string",
                        "description": "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders \n\n`ApproveOrder`: when approving existing orders \n\n`Unknown`: when we’re not able to identify the flow",
                        "example": "ApproveOrder"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the response is successful or not.",
                        "example": true
                    },
                    "operationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                        "example": "1234567"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "description": "List with errors related to the response, if there's any.",
                        "items": {
                            "type": "object",
                            "title": "errors",
                            "required": [
                                "source",
                                "code",
                                "description"
                            ],
                            "properties": {
                                "source": {
                                    "type": "string",
                                    "title": "Checkout",
                                    "description": "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                                    "example": "Fulfillment"
                                },
                                "code": {
                                    "type": "string",
                                    "title": "code",
                                    "description": "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                                    "example": "FMT005"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "description",
                                    "description": "String containing the error message/description returned by the source.",
                                    "example": "Message describing the error."
                                }
                            },
                            "example": {
                                "source": "Fulfillment",
                                "code": "FMT005",
                                "description": "Message describing the error."
                            }
                        }
                    },
                    "fields": {
                        "type": "object",
                        "nullable": true,
                        "description": "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "title": "fields",
                                "required": [
                                    "mainOrderId"
                                ],
                                "properties": {
                                    "mainOrderId": {
                                        "type": "string",
                                        "title": "mainOrderId",
                                        "description": "String with the order’s ID inside the main seller account in VTEX.",
                                        "example": "MKP-123456789"
                                    },
                                    "franchiseOrderId": {
                                        "type": "string",
                                        "title": "franchiseOrderId",
                                        "description": "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                                        "example": "432874921387409182347"
                                    }
                                },
                                "example": {
                                    "mainOrderId": "MKP-123456789",
                                    "franchiseOrderId": "432874921387409182347"
                                }
                            }
                        },
                        "example": {
                            "franchiseOrderId": "38475934875"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "String with a message explaining the code returned in the response. ",
                        "nullable": true,
                        "example": "The order was integrated into VTEX successfully"
                    }
                },
                "example": {
                    "marketplaceOrderId": null,
                    "accountName": "grocery1",
                    "code": "SOI003",
                    "flow": "PlaceOrder",
                    "success": true,
                    "operationId": null,
                    "errors": null,
                    "fields": null,
                    "message": "Order successfully enqueued"
                }
            },
            "Pickup-in-pointfranchise": {
                "title": "Pickup-in-pointfranchise",
                "required": [
                    "marketplaceOrderId",
                    "accountName",
                    "code",
                    "flow",
                    "success",
                    "operationId",
                    "errors",
                    "fields",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "String that indicates which account made the request.",
                        "example": "accountName"
                    },
                    "code": {
                        "type": "string",
                        "description": "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the [Response Codes]() section.",
                        "example": "SOI001"
                    },
                    "flow": {
                        "type": "string",
                        "description": "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders \n\n`ApproveOrder`: when approving existing orders \n\n`Unknown`: when we’re not able to identify the flow",
                        "example": "ApproveOrder"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the response is successful or not.",
                        "example": true
                    },
                    "operationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                        "example": "1234567"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "description": "List with errors related to the response, if there's any.",
                        "items": {
                            "type": "object",
                            "title": "errors",
                            "required": [
                                "source",
                                "code",
                                "description"
                            ],
                            "properties": {
                                "source": {
                                    "type": "string",
                                    "title": "Checkout",
                                    "description": "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                                    "example": "Fulfillment"
                                },
                                "code": {
                                    "type": "string",
                                    "title": "code",
                                    "description": "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                                    "example": "FMT005"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "description",
                                    "description": "String containing the error message/description returned by the source.",
                                    "example": "Message describing the error."
                                }
                            },
                            "example": {
                                "source": "Fulfillment",
                                "code": "FMT005",
                                "description": "Message describing the error."
                            }
                        }
                    },
                    "fields": {
                        "type": "object",
                        "nullable": true,
                        "description": "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "title": "fields",
                                "required": [
                                    "mainOrderId"
                                ],
                                "properties": {
                                    "mainOrderId": {
                                        "type": "string",
                                        "title": "The mainOrderId Schema",
                                        "description": "String with the order’s ID inside the main seller account in VTEX.",
                                        "example": "MKP-123456789"
                                    },
                                    "franchiseOrderId": {
                                        "type": "string",
                                        "title": "The franchiseOrderId Schema",
                                        "description": "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                                        "example": "432874921387409182347"
                                    }
                                },
                                "example": {
                                    "mainOrderId": "MKP-123456789",
                                    "franchiseOrderId": "432874921387409182347"
                                }
                            }
                        },
                        "example": {
                            "mainOrderId": "MKP-123456789",
                            "franchiseOrderId": "38475934875"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "String with a message explaining the code returned in the response. ",
                        "example": "The order was integrated into VTEX successfully"
                    }
                },
                "example": {
                    "marketplaceOrderId": null,
                    "accountName": "grocery1",
                    "code": "SOI003",
                    "flow": "PlaceOrder",
                    "success": true,
                    "operationId": null,
                    "errors": null,
                    "fields": null,
                    "message": "Order successfully enqueued"
                }
            },
            "UpdateOrderStatusRequest": {
                "title": "UpdateOrderStatusRequest",
                "required": [
                    "marketplaceOrderId",
                    "marketplaceOrderStatus",
                    "connectorName",
                    "connectorEndpoint"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "marketplaceOrderStatus": {
                        "type": "string",
                        "title": "marketplaceOrderStatus",
                        "description": "Required field including a string with the order’s status in the marketplace. If you send an order with the status APPROVED to integrate, our service will automatically try to advance its status in VTEX after integrating it. This field accepts the following values:  \n\n- `new`  \n\n- `approved`.",
                        "example": "new"
                    },
                    "connectorName": {
                        "type": "string",
                        "title": "connectorName",
                        "description": "String with the identifier code of the connector responsible for the order.  \n\nThis field is optional if the connector uses the [App Template](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-app-template) and authenticates on our request via `VtexIdclientAutCookie`.  \n\nIt is required if the connector is native or does not use the App Template.",
                        "example": "connectorName"
                    },
                    "connectorEndpoint": {
                        "type": "string",
                        "title": "connectorEndpoint",
                        "description": "String with the connector's base endpoint that will receive notifications about the orders processing results, as well as status updates from VTEX OMS. This field does not accept query strings. You can use the models below:  \n\n- `https://{{externalconnector}}.com`  \n\n- `https://{{externalconnector.com}}/api/vtex` if you additionaly want to send a relative URL with the endpoint. \n\nThis field is optional if the connector uses the [App Template](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-app-template) and authenticates on our request via `VtexIdclientAutCookie`.  \n\nIt is required if the connector is native or does not use the App Template.",
                        "example": "https://{{externalconnector.com}}/api/vtex"
                    }
                },
                "example": {
                    "marketplaceOrderId": "{{$guid}}",
                    "marketplaceOrderStatus": "APPROVED",
                    "connectorName": "Skyhub",
                    "connectorEndpoint": "https://connector-endpoint.com/api/vtex"
                }
            },
            "Approveorder": {
                "title": "Approveorder",
                "required": [
                    "marketplaceOrderId",
                    "accountName",
                    "code",
                    "flow",
                    "success",
                    "operationId",
                    "errors",
                    "fields",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String that indicates the order's ID in the marketplace.",
                        "example": "7e62fcd3-827b-400d-be8a-f050a79c4976"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "String that indicates which account made the request.",
                        "example": "accountName",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "description": "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the Response Codes section of this API Reference.",
                        "example": "SOI001"
                    },
                    "flow": {
                        "type": "string",
                        "description": "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders. \n\n`ApproveOrder`: when approving existing orders. \n\n`Unknown`: when we’re not able to identify the flow.",
                        "example": "ApproveOrder"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Boolean that indicates if the response is successful or not.",
                        "example": true
                    },
                    "operationId": {
                        "type": "string",
                        "nullable": true,
                        "description": "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                        "example": "1234567"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "description": "List with errors related to the response, if there is any.",
                        "items": {
                            "type": "object",
                            "title": "errors",
                            "required": [
                                "source",
                                "code",
                                "description"
                            ],
                            "properties": {
                                "source": {
                                    "type": "string",
                                    "title": "Checkout",
                                    "description": "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                                    "example": "Fulfillment"
                                },
                                "code": {
                                    "type": "string",
                                    "title": "code",
                                    "description": "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                                    "example": "FMT005"
                                },
                                "description": {
                                    "type": "string",
                                    "title": "description",
                                    "description": "String containing the error message/description returned by the source.",
                                    "example": "Message describing the error."
                                }
                            },
                            "example": {
                                "source": "Fulfillment",
                                "code": "FMT005",
                                "description": "Message describing the error."
                            }
                        }
                    },
                    "fields": {
                        "type": "object",
                        "nullable": true,
                        "description": "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "title": "fields",
                                "required": [
                                    "mainOrderId"
                                ],
                                "properties": {
                                    "mainOrderId": {
                                        "type": "string",
                                        "title": "The mainOrderId Schema",
                                        "description": "String with the order’s ID inside the main seller account in VTEX.",
                                        "example": "MKP-123456789"
                                    },
                                    "franchiseOrderId": {
                                        "type": "string",
                                        "title": "The franchiseOrderId Schema",
                                        "description": "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                                        "example": "432874921387409182347"
                                    }
                                },
                                "example": {
                                    "mainOrderId": "MKP-123456789",
                                    "franchiseOrderId": "432874921387409182347"
                                }
                            }
                        },
                        "example": {
                            "franchiseOrderId": "38475934875"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "String with a message explaining the code returned in the response.",
                        "example": "The order was integrated into VTEX successfully"
                    }
                },
                "example": {
                    "marketplaceOrderId": "7e62fcd3-827b-400d-be8a-f050a79c4976",
                    "accountName": null,
                    "code": "SOI003",
                    "flow": "ApproveOrder",
                    "success": true,
                    "operationId": null,
                    "errors": null,
                    "fields": null,
                    "message": "Order successfully enqueued"
                }
            }
        },
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            }
        }
    },
    "tags": [
        {
            "name": "External Seller"
        }
    ]
}